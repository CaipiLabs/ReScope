{"version":3,"sources":["webpack:///webpack/bootstrap c91099aeaddf1bda651a","webpack:///./src/index.js","webpack:///./src/Scope.js","webpack:///./src/utils/is.js","webpack:///external \"is\"","webpack:///./src/utils/utils.js","webpack:///./src/utils/Emitter.js","webpack:///external \"shortid\"","webpack:///./src/Store.js","webpack:///./src/utils/TaskSequencer.js","webpack:///./src/utils/scopable.js"],"names":["$global","window","global","RS","___rescope","console","warn","Store","Scope","Context","reScope","scopeToState","reScopeState","addScopableType","scopeRef","map","key","require","walknSet","walknGet","keyWalknSet","keyWalknGet","EventEmitter","shortid","__proto__push","target","id","parent","fn","prototype","_","openScopes","SimpleObjectProto","constructor","scopes","skey","is","array","sort","a","b","firstname","join","sm","state","_refs","actions","path","Object","keys","forEach","cpath","push","Function","as","storesMap","snapshot","data","incrementId","persistenceTm","autoDestroy","rootEmitter","boundedActions","keyIndex","_id","isLocalId","generate","i","_rev","stores","_autoDestroy","dead","Error","sources","childScopes","childScopesList","unStableChilds","seenChilds","__retains","all","__locks","_boundedActions","test","includes","bind","_listening","_scope","_mixed","_mixedList","followers","retain","_stable","wait","on","_parentList","release","_propag","register","_addChild","restore","setTimeout","dispose","storesList","_mount","k","arguments","ref","snap","parseRef","storeId","reduce","mounted","ctx","store","taskQueue","rsStore","name","length","shift","rsScope","$parent","mount","slice","undefined","setState","_watchStore","isStable","propag","targetCtx","lists","relink","singleton","srcCtx","external","force","lctx","info","__proto__","defineProperty","enumerable","configurable","get","set","v","activeActions","act","hasOwnProperty","__targetStores","dispatch","obj","setInitial","lastRevs","refKeys","string","revs","rev","refs","retainStores","getUpdates","disposeStores","splice","to","refList","mixedCWUnmount","unMountKey","isReactComponent","unBind","alias","retrieve","split","retrieveStore","storesRevMap","local","updated","getStoresRevs","output","childs","_getAllChilds","cfg","withChilds","withParents","withMixed","norefs","serialize","withChild","h","startsWith","substr","bool","takeSnapshotByKey","destroy","getSnapshotByKey","replace","deleteSnapshotByKey","pState","_ref","action","argz","stack","bActs","trigger","cb","once","reason","emit","error","stabilizerTM","clearTimeout","propagTM","remaps","wasStable","indexOf","un","destroyTM","removeListener","follower","_rmChild","value","isKey","filter","Emitter","_events","evt","TaskSequencer","objProto","getPrototypeOf","_static","scope","getScope","staticScope","watchs","use","apply","initialState","defaultState","applied","_uid","_onStabilize","_persistenceTm","_cfg","scopeObj","$scope","$stores","$actions","$dispatch","_revs","_require","_sources","_use","match","ref2","_followers","_changesSW","_afterConstructor","initialData","shouldApply","managed","nDatas","r","cDatas","isComplete","follow","call","changes","refine","_stabilizer","pushTask","ns","doWait","origin","initialOutputs","s","hasDataChange","stable","nextState","_nextState","nextData","sync","change","pushState","stabilize","defaultName","number","immediate","then","previous","me","shouldPropag","_destroyTM","removeAllListeners","component","targetRevs","targetScope","_key","curWeight","maxWeight","minWeight","taskCount","deSync","deSyncMaxTasks","task","isRunning","errorCatcher","lastError","disable","handleError","runNow","enable","addEventListener","process","removeEventListener","run","from","Date","now","weight","Math","max","min","scopables","handle","member","stateScope","isScopableType","Comp","applyScopableType","argz2"],"mappings":"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","file":"../../dist/ReScope.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c91099aeaddf1bda651a","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\nlet $global = ( typeof window !== 'undefined' ) ? window : global;\n\nimport Scope                                      from \"./Scope\";\nimport Store                                      from \"./Store\";\nimport { addScopableType, reScope, scopeToState } from \"./utils/scopable\";\n\nconst RS = $global.___rescope || {};\nif ( $global.___rescope ) {\n    console.warn(\"ReScope is defined multiple times !! \\nCheck you're packaging\")\n}\nelse {\n    \n    $global.___rescope = RS;\n    Scope.Store        = Store;\n    RS.Scope           = Scope;\n    RS.Context         = Scope;\n    RS.Store           = Store;\n    RS.reScope         = reScope;\n    RS.scopeToState    = scopeToState;\n    RS.reScopeState    = scopeToState;\n    RS.addScopableType = addScopableType;\n    RS.scopeRef        =\n        function scopeRef( map, key ) {\n            map[ key ] = new Scope.scopeRef(map[ key ]);\n            return map;\n        };\n    \n}\nexport default RS;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\n\nvar is                                               = require('./utils/is'),\n    { walknSet, walknGet, keyWalknSet, keyWalknGet } = require('./utils/utils'),\n    EventEmitter                                     = require('./utils/Emitter'),\n    shortid                                          = require('shortid')\n    , __proto__push                                  = ( target, id, parent ) => {\n        let fn         = function () {\n        };\n        fn.prototype   = parent ? new parent._[ id ]() : target[ id ] || {};\n        target[ id ]   = new fn();\n        target._[ id ] = fn;\n    },\n    openScopes                                       = {},\n    SimpleObjectProto                                = ( {} ).constructor;\n\n/**\n * Base Scope object\n */\nclass Scope extends EventEmitter {\n    static getScope( scopes ) {\n        let skey = is.array(scopes) ? scopes.sort(( a, b ) => {\n            if ( a.firstname < b.firstname ) return -1;\n            if ( a.firstname > b.firstname ) return 1;\n            return 0;\n        }).join('+') : scopes;\n        return openScopes[ skey ] = openScopes[ skey ] || new Scope({}, { id: skey });\n    };\n    \n    \n    /**\n     * get a parsed reference list from stateMap\n     * @param _ref\n     * @returns {{storeId, path, alias: *, ref: *}}\n     */\n    static stateMapToRefList( sm, state = {}, _refs = [], actions = {}, path = \"\" ) {\n        Object.keys(sm).forEach(\n            key => {\n                let cpath = path ? path + '.' + key : key;\n                sm[ key ] instanceof Scope.scopeRef\n                ? _refs.push(sm[ key ].path + ':' + cpath)\n                : ( sm[ key ] && sm[ key ] instanceof Function )\n                  ? actions[ key ] = sm[ key ]\n                  : ( sm[ key ] && sm[ key ].prototype instanceof Scope.Store )\n                    ? _refs.push(sm[ key ].as(cpath))\n                    : state[ cpath ] = sm[ key ]\n                //: this.stateMapToRefList(sm[key], _refs, path + '.' + key)\n            }\n        )\n        return _refs;\n    }\n    \n    static persistenceTm = 1;// if > 0, will wait 'persistenceTm' ms before destroy\n    // when\n    // dispose reach 0\n    static Store    = null;\n    static scopeRef = function scopeRef( path ) {\n        this.path = path;\n    };\n    static scopes   = openScopes;// all active scopes\n    \n    \n    /**\n     * Init a ReScope scope\n     *\n     * @param storesMap {Object} Object with the initial stores definition / instances\n     * @param config {Object} Scope config\n     * {\n     *  parent {scope} @optional parent scope\n     *\n     *  id {string} @optional id ( if this id exist storesMap will be merge on the 'id'\n     *     scope) key {string} @optional key of the scope ( if no id is set, the scope id\n     *     will be (parent.id+'>'+key) incrementId {bool} @optional true to add a suffix\n     *     id, if the provided key or id globally exist\n     *\n     *  state {Object} @optional initial state by store alias\n     *  data {Object} @optional initial data by store alias\n     *\n     *  rootEmitter {bool} @optional true to not being destabilized by parent\n     *  boundedActions {array | regexp} @optional list or regexp of actions not\n     *     propagated to the parent\n     *\n     *  persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when\n     *     dispose reach 0 autoDestroy  {bool} will trigger retain & dispose after start\n     *  }\n     * @returns {Scope}\n     */\n    constructor( storesMap, { parent, key, id, snapshot, state, data, incrementId = !!key, persistenceTm, autoDestroy, rootEmitter, boundedActions } = {} ) {\n        super();\n        var _ = {}, keyIndex;\n        \n        id = id || key && ( ( parent && parent._id || '' ) + '>' + key );\n        \n        _.isLocalId = !id;\n        \n        //if ( parent && key ) {\n        //    keyIndex = parent._.childScopes.find(ctx=>(ctx._id==id));\n        //    if ( keyIndex == -1 ) keyIndex = parent._.seenChilds;\n        //    keyIndex++;\n        //    if ( keyIndex )\n        //        id = id + '[' + keyIndex + ']';\n        //}\n        \n        id = id || ( \"_____\" + shortid.generate() );\n        \n        if ( openScopes[ id ] ) {\n            this._id = id;\n            //openScopes[ id ].register(storesMap);\n            return openScopes[ id ]\n        }\n        else if ( openScopes[ id ] && incrementId ) {\n            let i = -1;\n            while ( openScopes[ id + '[' + ( ++i ) + ']' ] ) ;\n            id = id + '[' + i + ']';\n        }\n        \n        this._id         = id;\n        this._rev        = 0;\n        openScopes[ id ] = this;\n        _.persistenceTm  = persistenceTm || this.constructor.persistenceTm;\n        \n        this.actions = {};\n        this.stores  = {};\n        this.state   = {};\n        this.data    = {};\n        \n        this.parent       = parent;\n        this._            = _;\n        this._autoDestroy = autoDestroy;\n        \n        if ( parent && parent.dead )\n            throw new Error(\"Can't use a dead scope as parent !\");\n        \n        __proto__push(this, 'actions', parent);\n        __proto__push(this, 'stores', parent);\n        __proto__push(this, 'state', parent);\n        __proto__push(this, 'data', parent);\n        \n        this.sources      = [];\n        _.childScopes     = [];\n        _.childScopesList = [];\n        _.unStableChilds  = 0;\n        _.seenChilds      = 0;\n        \n        this.__retains = { all: 0 };\n        this.__locks   = { all: 1 };\n        \n        //_.snapshot        = snapshot;\n        //_.snapshot        = snapshot;\n        _._boundedActions = is.array(boundedActions)\n                            ? { test: boundedActions.includes.bind(boundedActions) }\n                            : boundedActions;\n        _._listening      = {};\n        _._scope          = {};\n        _._mixed          = [];\n        _._mixedList      = [];\n        _.followers       = [];\n        if ( parent ) {\n            parent.retain(\"isMyParent\");\n            if ( !rootEmitter ) {\n                !parent._stable && this.wait(\"waitingParent\");\n                parent.on(_._parentList = {\n                    'stable'  : s => this.release(\"waitingParent\"),\n                    'unstable': s => this.wait(\"waitingParent\"),\n                    'update'  : s => this._propag()\n                });\n            }\n            else {\n                parent.on(_._parentList = {\n                    'update': s => this._propag()\n                });\n            }\n            // this.register(parent.__scope, state, data);\n        }\n        \n        \n        this.register(storesMap, state, data);\n        this.__locks.all--;\n        this._stable = !this.__locks.all;\n        \n        if ( parent ) {\n            parent._addChild(this);\n        }\n        \n        this.restore(snapshot);\n        \n        if ( autoDestroy )\n            setTimeout(\n                tm => {\n                    this.retain(\"autoDestroy\");\n                    this.dispose(\"autoDestroy\");\n                }\n            )\n        \n    }\n    \n    /**\n     *\n     * Mount the stores in storesList, in this scope or in its parents or mixed scopes\n     *\n     * @param storesList {string|storeRef} Store name, Array of Store names, or Rescope\n     *     store ref from Store::as or Store:as\n     * @param state\n     * @param data\n     * @returns {Scope}\n     */\n    mount( storesList, snapshot, state, data ) {\n        if ( is.array(storesList) ) {\n            storesList.forEach(k => this._mount(k, snapshot, state, data));\n        }\n        else {\n            this._mount(...arguments);\n        }\n        return this;\n    }\n    \n    _mount( id, snapshot, state, data ) {\n        let ref, snap;\n        \n        ref = this.parseRef(id)\n        \n        if ( id == \"$parent\" ) return;\n        if ( !this._._scope[ ref.storeId ] ) {//ask mixed || parent\n            if ( this._._mixed.reduce(( mounted, ctx ) => ( mounted || ctx._mount(id, snapshot, state, data) ), false) ||\n                 !this.parent )\n                return;\n            return this.parent._mount(...arguments);\n        }\n        else {\n            let store = this._._scope[ ref.storeId ], taskQueue = [];\n            if ( is.rsStore(store.prototype) ) {\n                this._._scope[ ref.storeId ] = new store(this, {\n                    //snapshot,\n                    name: ref.storeId,\n                    state,\n                    data\n                }, taskQueue);\n                while ( taskQueue.length ) taskQueue.shift()();\n            }\n            else if ( is.rsScope(store.prototype) ) {\n                store = this._._scope[ ref.storeId ] = new store({ $parent: this }, {\n                    id: this._id + '/' + ref.storeId,\n                    //autoDestroy: true\n                    //parent: this\n                });\n                //this._._scope[ ref.storeId ].retain(\"scopedChildScope\");\n                //this._watchStore(ref.storeId);\n                if ( ref.path.length > 1 )\n                    this._._scope[ ref.storeId ].mount(ref.path.slice(1).join('.'), snapshot, state, data)\n                //else return this._._scope[ ref.storeId ];\n            }\n            //if ( snapshot && is.rsScope(store) && ( snap = keyWalknGet(snapshot,\n            // store._id) ) && snap[ '/' ] ) { return store.mount(Object.keys(snap[ '/'\n            // ])) } else if ( snapshot && is.rsStore(store) ) store.restore();\n            if ( is.rsStore(store) ) {\n                if ( state !== undefined && data === undefined )\n                    store.setState(state);\n                else if ( state !== undefined )\n                    store.state = state;\n                \n                if ( data !== undefined )\n                    store.push(data);\n            }\n            this._watchStore(ref.storeId);\n        }\n        \n        \n        return this._._scope[ ref.storeId ];\n    }\n    \n    _watchStore( id, state, data ) {\n        if ( !this._._listening[ id ] && !is.fn(this._._scope[ id ]) ) {\n            //if ( is.rsStore(this._._scope[ id ]) ) {\n            !this._._scope[ id ]._autoDestroy && this._._scope[ id ].retain(\"scoped\");\n            !this._._scope[ id ].isStable() && this.wait(id);\n            this._._scope[ id ].on(\n                this._._listening[ id ] = {\n                    'destroy' : s => {\n                        delete this._._listening[ id ];\n                        this._._scope[ id ] = this._._scope[ id ].constructor;\n                    },\n                    'update'  : s => this.propag(),\n                    'stable'  : s => this.release(id),\n                    'unstable': s => this.wait(id)\n                });\n        }\n        return true;\n    }\n    \n    /**\n     * Mix targetCtx on this scope\n     * Mixed scope parents are NOT mapped\n     * @param targetCtx\n     */\n    mixin( targetCtx ) {\n        let parent = this.parent, lists;\n        this._._mixed.push(targetCtx)\n        targetCtx.retain(\"mixedTo\");\n        if ( !targetCtx._stable )\n            this.wait(targetCtx._id);\n        \n        this._._mixedList.push(lists = {\n            'stable'  : s => this.release(targetCtx._id),\n            'unstable': s => this.wait(targetCtx._id),\n            'update'  : s => this._propag()\n        });\n        \n        this.actions = {};\n        this.stores  = {};\n        this.state   = {};\n        this.data    = {};\n        targetCtx.on(lists);\n        __proto__push(this, 'actions', parent);\n        __proto__push(this, 'stores', parent);\n        __proto__push(this, 'state', parent);\n        __proto__push(this, 'data', parent);\n        \n        this.relink(this._._scope, this, false, true);\n        this._._mixed.forEach(\n            ctx => {\n                __proto__push(this, 'actions');\n                __proto__push(this, 'stores');\n                __proto__push(this, 'state');\n                __proto__push(this, 'data');\n                ctx.relink(ctx._._scope, this, true, true)\n            }\n        )\n    }\n    \n    /**\n     * Register stores in storesMap & link them in the protos\n     * @param storesMap\n     * @param state\n     * @param data\n     */\n    register( storesMap, state = {}, data = {} ) {\n        this.relink(storesMap, this, false, false);\n        Object.keys(storesMap).forEach(\n            id => {\n                if ( id == \"$parent\" ) return;\n                if ( storesMap[ id ].singleton || ( is.fn(storesMap[ id ]) && ( state[ id ] || data[ id ] ) ) ) {\n                    this._mount(id, undefined, state[ id ], data[ id ])\n                }\n                else if ( state[ id ] || data[ id ] ) {\n                    if ( data[ id ] ) {\n                        if ( state[ id ] )\n                            this.stores[ id ].state = state[ id ];\n                        this.stores[ id ].push(data[ id ]);\n                    }\n                    else if ( state[ id ] ) {\n                        this.stores[ id ].setState(state[ id ]);\n                    }\n                }\n                else {\n                    this._watchStore(id);\n                }\n            }\n        )\n        \n    }\n    \n    /**\n     * Map srcCtx store's on targetCtx headers proto's\n     * @param srcCtx\n     * @param targetCtx\n     * @param state\n     * @param data\n     */\n    relink( srcCtx, targetCtx = this, external, force ) {\n        let lctx = targetCtx._.stores.prototype;\n        Object.keys(srcCtx)\n              .forEach(\n                  id => {\n                      if ( !force && targetCtx._._scope[ id ] === srcCtx[ id ] ||\n                           targetCtx._._scope[ id ] && ( targetCtx._._scope[ id ].constructor === srcCtx[ id ] ) )\n                          return;\n                \n                      if ( !force && targetCtx._._scope[ id ] ) {\n                          if ( !external && !is.fn(targetCtx._._scope[ id ]) ) {\n                              console.info(\"Rescope Store : \", id, \" already exist in this scope ! ( try __proto__ hot patch )\");\n                              targetCtx._._scope[ id ].__proto__ = srcCtx[ id ].prototype;\n                        \n                          }\n                          if ( !external && is.fn(targetCtx._._scope[ id ]) )\n                              targetCtx._._scope[ id ] = srcCtx[ id ];\n                    \n                          return;\n                      }\n                      else if ( !force && !external )\n                          this._._scope[ id ] = srcCtx[ id ];\n                \n                      Object.defineProperty(\n                          lctx,\n                          id,\n                          {\n                              enumerable  : true,\n                              configurable: true,\n                              get         : () => this._._scope[ id ]\n                          }\n                      );\n                      if ( id == \"$parent\" ) return;\n                      Object.defineProperty(\n                          targetCtx._.state.prototype,\n                          id,\n                          {\n                              enumerable  : true,\n                              configurable: true,\n                              get         : () => ( this._._scope[ id ] && this._._scope[ id ].state ),\n                              set         : ( v ) => ( this._mount(id, undefined, v) )\n                          }\n                      );\n                      Object.defineProperty(\n                          targetCtx._.data.prototype,\n                          id,\n                          {\n                              enumerable  : true,\n                              configurable: true,\n                              get         : () => ( this._._scope[ id ] && this._._scope[ id ].data ),\n                              set         : ( v ) => ( this._mount(id, undefined, undefined, v) )\n                          }\n                      );\n                \n                      let actions       = srcCtx[ id ] instanceof Scope.Store\n                                          ? srcCtx[ id ].constructor.actions\n                                          : srcCtx[ id ].actions,\n                          activeActions = targetCtx._.actions.prototype;\n                      if ( is.rsScope(this._._scope[ id ].prototype) )\n                          this._mount(id);\n                      if ( is.rsScope(this._._scope[ id ]) ) {\n                          activeActions[ id ] = this._._scope[ id ].actions;\n                      }\n                      if ( !is.rsStore(this._._scope[ id ]) && !is.rsStore(this._._scope[ id ].prototype) )\n                          return;\n                \n                      actions &&\n                      Object.keys(actions)\n                            .forEach(\n                                ( act ) => {\n                                    if ( activeActions.hasOwnProperty(act) )\n                                        activeActions[ act ].__targetStores++;\n                                    else {\n                                        activeActions[ act ]                = this.dispatch.bind(this, act);\n                                        activeActions[ act ].__targetStores = 1;\n                                    }\n                                }\n                            )\n                  }\n              )\n    }\n    \n    /**\n     * Bind stores from this scope, his parents and mixed scope\n     *\n     * @param obj {React.Component|Store|function}\n     * @param key {string} stores keys to bind updates\n     * @param as\n     * @param setInitial {bool} false to not propag initial value (default : true)\n     */\n    bind( obj, key, as, setInitial = true ) {\n        let lastRevs, data, refKeys;\n        if ( key && !is.array(key) )\n            key = [ key ];\n        \n        if ( as === false || as === true ) {\n            setInitial = as;\n            as         = null;\n        }\n        \n        refKeys = key\n            .map(id => ( is.string(id) ? id : id.name ))\n            .map(id => ( this.parseRef(id) ));\n        \n        \n        this._.followers.push(\n            [\n                obj,\n                key,\n                as || undefined,\n                lastRevs = refKeys.reduce(( revs, ref ) => {\n                    revs[ ref.storeId ] = revs[ ref.storeId ] || {\n                        rev : 0,\n                        refs: []\n                    };\n                    revs[ ref.storeId ].refs.push(ref);\n                    return revs;\n                }, {})\n            ]);\n        \n        this.mount(key);\n        this.retainStores(Object.keys(lastRevs), 'listeners');\n        \n        if ( setInitial && this._stable ) {\n            data = this.getUpdates(lastRevs);\n            if ( !data ) return;\n            if ( typeof obj != \"function\" ) {\n                if ( as ) obj.setState({ [ as ]: data });\n                else obj.setState(data);\n            }\n            else {\n                obj(data);\n            }\n        }\n        return this;\n    }\n    \n    /**\n     * Un bind this scope off the given component-keys\n     * @param obj\n     * @param key\n     * @returns {Array.<*>}\n     */\n    unBind( obj, key, as ) {\n        var followers = this._.followers,\n            i         = followers && followers.length;\n        while ( followers && i-- )\n            if ( followers[ i ][ 0 ] === obj && ( '' + followers[ i ][ 1 ] ) == ( '' + key ) &&\n                 followers[ i ][ 2 ] == as ) {\n                this.disposeStores(Object.keys(followers[ i ][ 3 ]), 'listeners');\n                return followers.splice(i, 1);\n            }\n    }\n    \n    /**\n     * Mount the stores in storesList from this scope, its parents and mixed scope\n     * Bind them to 'to'\n     * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n     * @param to\n     * @param storesList\n     * @param bind\n     * @returns {Object} Initial outputs of the stores in 'storesList'\n     */\n    map( to, storesList, bind = true ) {\n        let Store   = this.constructor.Store;\n        storesList  = is.array(storesList) ? storesList : [ storesList ];\n        let refList = storesList.map(this.parseRef);\n        this.mount(storesList);\n        if ( bind && to instanceof Store ) {\n            Store.map(to, storesList, this, this, false)\n        }\n        else if ( bind ) {\n            this.bind(to, storesList, undefined, false);\n            \n            let mixedCWUnmount,\n                unMountKey = to.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n            \n            if ( to.hasOwnProperty(unMountKey) ) {\n                mixedCWUnmount = to[ unMountKey ];\n            }\n            \n            to[ unMountKey ] = ( ...argz ) => {\n                delete to[ unMountKey ];\n                if ( mixedCWUnmount )\n                    to[ unMountKey ] = mixedCWUnmount;\n                \n                this.unBind(to, storesList);\n                return to[ unMountKey ] && to[ unMountKey ](...argz);\n            }\n            \n        }\n        return refList.reduce(( data, ref ) => {\n            walknSet(data, ref.alias || ref.path, this.retrieve(ref.path))\n            return data;\n        }, {});\n    }\n    \n    /**\n     * Get current data value from json path\n     * @param path\n     * @returns {string|*}\n     */\n    retrieve( path = \"\" ) {\n        path = is.string(path) ? path.split('.') : path;\n        return path && this.stores[ path[ 0 ] ] &&\n               this.stores[ path[ 0 ] ].retrieve(path.slice(1));\n    }\n    \n    /**\n     * Get current store from json path\n     * @param path\n     * @returns {string|*}\n     */\n    retrieveStore( path = \"\" ) {\n        path = is.string(path) ? path.split('.') : path;\n        return path\n               && path.length\n               && (\n               path.length != 1 && this.stores[ path[ 0 ] ].retrieveStore\n               ? this.stores[ path[ 0 ] ].retrieveStore(path.slice(1))\n               : path.length == 1 && this.stores[ path[ 0 ] ]\n               );\n    }\n    \n    /**\n     * Get or update storesRevMap's revisions\n     * @param storesRevMap\n     * @param local\n     * @returns {{}}\n     */\n    getStoresRevs( storesRevMap = {}, local ) {\n        let ctx = this._._scope;\n        if ( !storesRevMap ) {\n            storesRevMap = {};\n        }\n        Object.keys(ctx).forEach(\n            id => {\n                if ( id == \"$parent\" ) return;\n                if ( !is.fn(ctx[ id ])\n                ) {\n                    storesRevMap[ id ] = ctx[ id ]._rev;\n                }\n                else if ( !storesRevMap.hasOwnProperty(id) )\n                    storesRevMap[ id ] = false\n            }\n        );\n        if ( !local ) {\n            this._._mixed.reduce(( updated, ctx ) => ( ctx.getStoresRevs(storesRevMap), storesRevMap ), storesRevMap);\n            this.parent && this.parent.getStoresRevs(storesRevMap);\n        }\n        return storesRevMap;\n    }\n    \n    /**\n     * Get or update output basing storesRevMap's revisions.\n     * If a store in 'storesRevMap' was updated; add it to 'output' & update storesRevMap\n     * @param storesRevMap\n     * @param output\n     * @param updated\n     * @returns {*|{}}\n     */\n    getUpdates( storesRevMap, output, updated ) {\n        let ctx = this._._scope;\n        \n        output = output || {};\n        Object.keys(ctx).forEach(\n            id => {\n                if ( id == \"$parent\" ) return;\n                if ( !output.hasOwnProperty(id) && !is.fn(ctx[ id ])\n                     && ( !storesRevMap\n                          || ( storesRevMap.hasOwnProperty(id) && storesRevMap[ id ] === undefined )\n                          || !( !storesRevMap.hasOwnProperty(id) || ctx[ id ]._rev <= storesRevMap[ id ].rev ) )\n                ) {\n                    \n                    updated      = true;\n                    output[ id ] = this.data[ id ];\n                    \n                    if ( storesRevMap && storesRevMap.hasOwnProperty(id) ) {\n                        storesRevMap[ id ].rev = ctx[ id ]._rev;\n                        storesRevMap[ id ].refs.forEach(\n                            ref => {\n                                //console.warn(\"update ref \", ref.ref,\n                                // this.retrieve(ref.path));\n                                output[ ref.alias ] = this.retrieve(ref.path)\n                                \n                            }\n                        )\n                    }\n                    else {\n                        //console.warn(\"update \", id, this.data[id]);\n                        output[ id ] = this.data[ id ];\n                    }\n                    \n                }\n            }\n        );\n        updated = this._._mixed.reduce(( updated, ctx ) => ( ctx.getUpdates(storesRevMap, output, updated) || updated ), updated);\n        updated = this.parent && this.parent.getUpdates(storesRevMap, output, updated) || updated;\n        return updated && output;\n    }\n    \n    /**\n     * Recursively get all child scopes\n     * @param childs\n     * @returns {Array}\n     * @private\n     */\n    _getAllChilds( childs = [] ) {\n        childs.push(...this._.childScopes);\n        this._.childScopes.forEach(\n            ctx => {\n                ctx._getAllChilds(childs);\n            }\n        );\n        return childs;\n    }\n    \n    /**\n     * Serialize all active stores state & data in every childs & mixed scopes\n     *\n     * Scopes without key or id are ignored\n     * @param output\n     * @returns {{}}\n     */\n    serialize( cfg = {}, output = {} ) {\n        let ctx                                                                 = this._._scope,\n            { alias, withChilds = true, withParents, withMixed = true, norefs } = cfg;\n        \n        if ( keyWalknGet(output, this._id) )\n            return output;\n        \n        //@todo : better serialize method\n        keyWalknSet(output, this._id, {});\n        \n        Object.keys(ctx).forEach(\n            id => {\n                if ( id == \"$parent\" || is.fn(ctx[ id ]) )\n                    return;\n                \n                ctx[ id ].serialize(cfg, output);\n            }\n        )\n        \n        withParents && this.parent && this.parent.serialize({\n                                                                withChild  : false,\n                                                                withParents: true,\n                                                                withMixed,\n                                                                norefs\n                                                            }, output);\n        \n        withChilds && this._.childScopes.forEach(\n            ctx => {\n                !ctx._.isLocalId && ctx.serialize({\n                                                      withChild  : true,\n                                                      withParents: false,\n                                                      withMixed,\n                                                      norefs\n                                                  }, output);\n            }\n        );\n        \n        withMixed && this._._mixed.forEach(\n            ctx => {\n                !ctx._.isLocalId && ctx.serialize({\n                                                      withChild  : false,\n                                                      withParents: false,\n                                                      withMixed,\n                                                      norefs\n                                                  }, output);\n            }\n        );\n        \n        if ( alias ) {\n            output = Object.keys(output)\n                           .reduce(\n                               ( h, k ) => (\n                                   h[ k.startsWith(alias)\n                                      ? alias + k.substr(alias.length)\n                                      : k ] = output[ k ],\n                                       h\n                               ),\n                               {}\n                           )\n        }\n        return output;\n    }\n    \n    /**\n     * Restore state & data from the serialize fn\n     * @param snapshot\n     * @param force\n     */\n    restore( snapshot, cfg = {}, force = is.bool(cfg) && cfg ) {\n        let ctx  = this._._scope, snap;\n        snapshot = snapshot\n                   && keyWalknGet(snapshot, this._id)\n                   || this.takeSnapshotByKey(this._id);\n        \n        if ( !snapshot )\n            return;\n        \n        this._.snapshot = snapshot;\n        \n        snap = snapshot[ '/' ];\n        \n        snap && Object.keys(snap).forEach(\n            name => {\n                if ( name == \"$parent\" ) return;\n                \n                if ( ctx[ name ] ) {\n                    \n                    if ( force && !is.fn(ctx[ name ]) )\n                        ctx[ name ].destroy();\n                    \n                    this._mount(name);// quiet\n                }\n                \n            }\n        )\n        \n        this._._mixed.forEach(\n            ctx => {\n                !ctx._.isLocalId && ctx.restore(undefined, force);\n            }\n        );\n        \n        this._.childScopes.forEach(\n            ctx => {\n                !ctx._.isLocalId && ctx.restore(undefined, force);\n            }\n        );\n        \n    }\n    \n    getSnapshotByKey( key, local ) {\n        // only have the local snap\n        if ( this._.snapshot && key.startsWith(this._id) ) {\n            let obj = keyWalknGet(this._.snapshot, key.substr(this._id.length))\n            //if ( obj ) {\n            //    this.deleteSnapshotByKey(key);\n            //}\n            return obj;\n        }\n        else return !local\n                    && this.parent\n                    && this.parent.getSnapshotByKey(key)\n                    ||\n                    this.stores.$parent\n                    && this.stores.$parent.getSnapshotByKey(key);\n        \n    }\n    \n    getSnapshotByKeyExt( snapshot, key, local ) {\n        // only have the local snap\n        if ( snapshot ) {\n            let obj = keyWalknGet(snapshot, key)\n            return obj;\n        }\n        \n    }\n    \n    takeSnapshotByKey( key, local ) {\n        if ( this._.snapshot && key.startsWith(this._id) ) {\n            let obj = keyWalknGet(this._.snapshot, key.substr(this._id.length))\n            if ( obj ) {\n                //this.deleteSnapshotByKey(key, true);\n            }\n            return obj;\n        }\n        else return !local\n                    && this.parent\n                    && this.parent.takeSnapshotByKey(key)\n                    ||\n                    this.stores.$parent\n                    && this.stores.$parent.takeSnapshotByKey(key);\n    }\n    \n    deleteSnapshotByKey( key, local ) {\n        if ( this._.snapshot && key.startsWith(this._id) ) {\n            let obj = keyWalknGet(this._.snapshot, key.substr(this._id.length).replace(/^(.*[\\>|\\/])[^\\>|\\/]+$/ig, '$1'))\n            if ( obj )\n                delete obj[ key.replace(/^.*[\\>|\\/]([^\\>|\\/]+)$/ig, '$1') ]\n        }\n        return !local\n               && this.parent\n               && this.parent.deleteSnapshotByKey(key)\n               ||\n               this.stores.$parent\n               && this.stores.$parent.deleteSnapshotByKey(key);\n    }\n    \n    setState( pState ) {\n        Object.keys(pState)\n              .forEach(k => ( this.state[ k ] = pState[ k ] ))\n    }\n    \n    /**\n     * get a parsed reference\n     * @param _ref\n     * @returns {{storeId, path, alias: *, ref: *}}\n     */\n    parseRef( _ref ) {\n        if ( typeof _ref !== 'string' ) {\n            this.register({ [ _ref.name ]: _ref.store });\n            _ref = _ref.name;\n        }\n        let ref  = _ref.split(':');\n        ref[ 0 ] = ref[ 0 ].split('.');\n        return {\n            storeId: ref[ 0 ][ 0 ],\n            path   : ref[ 0 ],\n            alias  : ref[ 1 ] || ref[ 0 ][ ref[ 0 ].length - 1 ],\n            ref    : _ref\n        };\n    }\n    \n    /**\n     * Dispatch an action to the top parent & mixed scopes, in all stores\n     *\n     * @param action\n     * @param data\n     * @returns {Scope}\n     */\n    dispatch( action, ...argz ) {\n        if ( this.dead ) {\n            console.warn(\"Dispatch was called on a dead scope, check you're async functions in this stack...\", ( new Error() ).stack);\n            return;\n        }\n        let bActs = this._._boundedActions;\n        Object.keys(this._._scope)\n              .forEach(\n                  id => {\n                      if ( id == \"$parent\" ) return;\n                      if ( !is.fn(this._._scope[ id ]) )\n                          this._._scope[ id ].trigger(action, ...argz);\n                  }\n              );\n        \n        if ( bActs && bActs.test(action) )\n            return;\n        \n        this._._mixed.forEach(( ctx ) => ( ctx.dispatch(action, ...argz) ));\n        this.parent && this.parent.dispatch(action, ...argz);\n        return this;\n    }\n    \n    //\n    trigger() {\n        this.dispatch(...arguments);\n    }\n    \n    /**\n     * once('stable', cb)\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    then( cb ) {\n        if ( this._stable )\n            return cb(this.data);\n        this.once('stable', e => cb(this.data));\n    }\n    \n    /**\n     * Call retain on the scoped stores basing given\n     *\n     * @param stores\n     * @param reason\n     */\n    retainStores( stores = [], reason ) {\n        stores.forEach(\n            id => ( this.stores[ id ] && this.stores[ id ].retain && this.stores[ id ].retain(reason) )\n        )\n    }\n    \n    /**\n     * Call retain on the scoped stores\n     *\n     * @param stores\n     * @param reason\n     */\n    disposeStores( stores = [], reason ) {\n        stores.forEach(\n            id => ( this.stores[ id ] && this.stores[ id ].dispose && this.stores[ id ].dispose(reason) )\n        )\n    }\n    \n    /**\n     * Keep the scope unstable until release is called\n     * @param reason\n     */\n    wait( reason ) {\n        //console.log(\"wait\", reason);\n        this._stable && !this.__locks.all && this.emit(\"unstable\", this);\n        this._stable = false;\n        this.__locks.all++;\n        if ( reason ) {\n            this.__locks[ reason ] = this.__locks[ reason ] || 0;\n            this.__locks[ reason ]++;\n        }\n    }\n    \n    \n    /**\n     * Stabilize the scope if no more locks remain (wait fn)\n     * @param reason\n     */\n    release( reason ) {\n        \n        if ( reason ) {\n            if ( this.__locks[ reason ] == 0 )\n                console.error(\"Release more than locking !\", reason);\n            this.__locks[ reason ] = this.__locks[ reason ] || 0;\n            this.__locks[ reason ]--;\n        }\n        if ( !reason && this.__locks.all == 0 )\n            console.error(\"Release more than locking !\");\n        \n        this.__locks.all--;\n        if ( !this.__locks.all ) {\n            this._.stabilizerTM && clearTimeout(this._.stabilizerTM);\n            \n            this._.stabilizerTM = setTimeout(\n                e => {\n                    this._.stabilizerTM = null;\n                    if ( this.__locks.all )\n                        return;\n                    \n                    this._.propagTM && clearTimeout(this._.propagTM);\n                    this._rev++;\n                    this._stable = true;\n                    this.emit(\"stable\", this);\n                    \n                    !this.dead && this._propag();// stability can induce destroy\n                }\n            );\n        }\n        \n    }\n    \n    /**\n     * Propag stores updates basing theirs last updates\n     */\n    propag() {\n        this._.propagTM && clearTimeout(this._.propagTM);\n        this._.propagTM = setTimeout(\n            e => {\n                this._.propagTM = null;\n                this._propag()\n            }, 2\n        );\n    }\n    \n    _propag() {\n        if ( this._.followers.length )\n            this._.followers.forEach(( { 0: obj, 1: key, 2: as, 3: lastRevs, 3: remaps } ) => {\n                let data = this.getUpdates(lastRevs);\n                if ( !data ) return;\n                if ( typeof obj != \"function\" ) {\n                    //console.log(\"setState \",obj, Object.keys(data))\n                    if ( as ) obj.setState({ [ as ]: data });\n                    else obj.setState(data);\n                }\n                else {\n                    obj(data, lastRevs && [ ...lastRevs ] || \"no revs\");\n                }\n                // lastRevs &&\n                // key.forEach(id => (lastRevs[id] = this.stores[id] &&\n                // this.stores[id]._rev || 0));\n            });\n        this.emit(\"update\", this.getUpdates());\n    }\n    \n    /**\n     * is stable\n     * @returns bool\n     */\n    isStable() {\n        return this._stable;\n    }\n    \n    _addChild( ctx ) {\n        this._.childScopes.push(ctx);\n        this._.seenChilds++;\n        let lists     = {\n                'stable'      : s => {\n                    this._.unStableChilds--;\n                    if ( !this._.unStableChilds )\n                        this.emit(\"stableTree\", this)\n                },\n                'unstable'    : s => {\n                    this._.unStableChilds++;\n                    if ( 1 == this._.unStableChilds )\n                        this.emit(\"unstableTree\", this)\n                },\n                'stableTree'  : s => {\n                    this._.unStableChilds--;\n                    if ( !this._.unStableChilds )\n                        this.emit(\"stableTree\", this)\n                },\n                'unstableTree': s => {\n                    this._.unStableChilds++;\n                    if ( 1 == this._.unStableChilds )\n                        this.emit(\"unstableTree\", this)\n                },\n                'destroy'     : ctx => {\n                    if ( ctx._.unStableChilds )\n                        this._.unStableChilds--;\n                    if ( !ctx.isStable() )\n                        this._.unStableChilds--;\n                \n                    if ( !this._.unStableChilds )\n                        this.emit(\"stableTree\", this)\n                }\n            },\n            wasStable = this._.unStableChilds;\n        //!ctx.isStable() && console.warn('add unstable child');\n        !ctx.isStable() && this._.unStableChilds++;\n        ctx._.unStableChilds && this._.unStableChilds++;\n        this._.childScopesList.push(lists);\n        if ( !wasStable && this._.unStableChilds )\n            this.emit(\"unstableTree\", this)\n        ctx.on(lists);\n    }\n    \n    _rmChild( ctx ) {\n        let i         = this._.childScopes.indexOf(ctx),\n            wasStable = this._.unStableChilds;\n        if ( i != -1 ) {\n            this._.childScopes.splice(i, 1);\n            !ctx.isStable() && this._.unStableChilds--;\n            ctx._.unStableChilds && this._.unStableChilds--;\n            ctx.un(this._.childScopesList.splice(i, 1)[ 0 ]);\n            if ( wasStable && !this._.unStableChilds )\n                this.emit(\"stableTree\")\n        }\n    }\n    \n    retain( reason ) {\n        this.__retains.all++;\n        //console.log(\"retain\", this._id, reason);\n        if ( reason ) {\n            this.__retains[ reason ] = this.__retains[ reason ] || 0;\n            this.__retains[ reason ]++;\n        }\n    }\n    \n    dispose( reason ) {\n        //console.log(\"dispose\", this._id, reason);\n        if ( reason ) {\n            if ( !this.__retains[ reason ] )\n                throw new Error(\"Dispose more than retaining : \" + reason);\n            this.__retains[ reason ]--;\n        }\n        \n        if ( !this.__retains.all )\n            throw new Error(\"Dispose more than retaining !\");\n        \n        this.__retains.all--;\n        \n        if ( !this.__retains.all ) {\n            //console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n            if ( this._.persistenceTm ) {\n                this._.destroyTM && clearTimeout(this._.destroyTM);\n                this._.destroyTM = setTimeout(\n                    e => {\n                        //this.then(s => {\n                        !this.__retains.all && !this.dead && this.destroy()\n                        //});\n                    },\n                    this._.persistenceTm\n                );\n            }\n            else {\n                //this.then(s =>\n                ( !this.__retains.all && !this.dead && this.destroy() )\n                //);\n            }\n        }\n    }\n    \n    /**\n     * order destroy of local stores\n     */\n    destroy() {\n        let ctx = this._._scope;\n        //console.warn(\"destroy\", this._id);\n        this._.stabilizerTM && clearTimeout(this._.stabilizerTM);\n        this._.propagTM && clearTimeout(this._.propagTM);\n        Object.keys(\n            this._._listening\n        ).forEach(\n            id => ( ( id !== \"$parent\" ) && this._._scope[ id ].removeListener(this._._listening[ id ]) )\n        );\n        while ( this._._mixedList.length ) {\n            this._._mixed[ 0 ].removeListener(this._._mixedList.shift());\n            this._._mixed.shift().dispose(\"mixedTo\");\n        }\n        [ ...this._.followers ].map(follower => this.unBind(...follower));\n        for ( let key in ctx )\n            if ( !is.fn(ctx[ key ]) ) {\n                if ( key == \"$parent\" ) continue;\n                !ctx[ key ]._autoDestroy && ctx[ key ].dispose(\"scoped\");\n            }\n        if ( this._._parentList ) {\n            this.parent._rmChild(this);\n            this.parent.removeListener(this._._parentList);\n            this.parent.dispose(\"isMyParent\");\n            this._._parentList = null;\n        }\n        this.dead = true;\n        this.emit(\"destroy\", this);\n        \n        \n        //if ( !this._.isLocalId )\n        delete openScopes[ this._id ];\n        \n        //this._ = null;\n        \n    }\n}\n\n\nis.rsScope = function ( obj ) {\n    return obj instanceof Scope\n}\n\nexport default Scope;\n\n\n// WEBPACK FOOTER //\n// ./src/Scope.js","var is = require('is');\r\n\r\nexport default {\r\n    ...is\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/is.js","module.exports = require(\"is\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"is\"\n// module id = 3\n// module chunks = 0","var is = require('./is');\r\n\r\nexport function walknSet( obj, path, value, stack ) {\r\n    if ( is.string(path) )\r\n        path = path.split('.');\r\n    if ( !path.length )\r\n        return false;\r\n    else if ( path.length == 1 )\r\n        return obj[ path[ 0 ] ] = stack\r\n                                  ? [ ...( obj[ path[ 0 ] ] || [] ), value ]\r\n                                  : value;\r\n    else\r\n        return walknSet(\r\n            obj[ path[ 0 ] ] =\r\n                obj[ path[ 0 ] ] || {},\r\n            path.slice(1),\r\n            value, stack\r\n        );\r\n}\r\n\r\nexport function walknGet( obj, path, isKey ) {\r\n    if ( is.string(path) )\r\n        path = path.split('.');\r\n    return path.length\r\n           ? obj[ path[ 0 ] ] && walknGet(obj[ path[ 0 ] ], path.slice(1))\r\n           : obj;\r\n}\r\n\r\n//@todo\r\nexport function keyWalknSet( obj, path, value, stack ) {\r\n    if ( is.string(path) )\r\n        path = path.split(/(\\>|\\/)/ig).filter(v => ( v !== '>' && v ));\r\n    return walknSet(obj, path, value);\r\n}\r\n\r\nexport function keyWalknGet( obj, path, isKey ) {\r\n    if ( is.string(path) )\r\n        path = path.split(/(\\>|\\/)/ig).filter(v => ( v !== '>' && v ));\r\n    return path.length\r\n           ? obj[ path[ 0 ] ] && walknGet(obj[ path[ 0 ] ], path.slice(1))\r\n           : obj;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *  \n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *  \n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *  \n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *  \n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\nvar is = require('is');\nexport default class Emitter {\n    _events = {};\n    \n    on( evt, cb ) {\n        if ( !is.string(evt) && evt )\n            return Object.keys(evt).forEach(k => this.on(k, evt[k]));\n        \n        this._events[evt] = this._events[evt] || [];\n        this._events[evt].push(cb);\n        \n    }\n    \n    un( evt, cb ) {\n        if ( !is.string(evt) && evt )\n            return Object.keys(evt).forEach(k => this.un(k, evt[k]));\n        \n        if ( !this._events[evt] ) return;\n        var i = this._events[evt].indexOf(cb);\n        this._events[evt].splice(i, 1);\n    }\n    \n    emit( evt, ...argz ) {\n        if ( !this._events[evt] ) return;\n        let lists = [...this._events[evt]];\n        \n        for ( var i = 0; i < lists.length; i++ )\n            lists[i](...argz)\n    }\n    \n    addListener() {\n        this.on(...arguments);\n    }\n    \n    removeListener() {\n        this.un(...arguments);\n    }\n    \n    removeAllListeners() {\n        this._events = {};\n    }\n    \n    once( evt, cb ) {\n        let fn;\n        this.on(evt, fn = ( ...argz ) => {\n            this.un(evt, fn);\n            cb(...argz)\n        });\n    }\n    \n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Emitter.js","module.exports = require(\"shortid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 6\n// module chunks = 0","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\nvar is                           = require('./utils/is'),\n    Scope                        = require('./Scope'),\n    { keyWalknSet, keyWalknGet } = require('./utils/utils'),\n    EventEmitter                 = require('./utils/Emitter'),\n    TaskSequencer                = require('./utils/TaskSequencer'),\n    shortid                      = require('shortid'),\n    objProto                     = Object.getPrototypeOf({});\n\nclass Store extends EventEmitter {\n    //static use                  = [];// overridable list of source stores\n    static follow;// overridable list of store that will allow push if updated\n    static require;\n    static staticScope          = new Scope({}, { id: \"static\" });\n    static state                = undefined;// default state\n    /**\n     * if retain goes to 0 :\n     * false to not destroy,\n     * 0 to sync auto destroy\n     * Ms to autodestroy after tm ms if no retain has been called\n     * @type {boolean|Int}\n     */\n           static persistenceTm = false;\n    \n    /**\n     * Constructor, will build a rescope store\n     *\n     * (scope, {require,use,apply,state, data})\n     * (scope)\n     *\n     * @param scope {object} scope where to find the other stores (default : static\n     *     staticScope )\n     * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\",\n     *     otherStore.as(\"otherKey\")]\n     */\n    constructor() {\n        super();\n        var argz         = [ ...arguments ],\n            _static      = this.constructor,\n            scope        = argz[ 0 ] instanceof Scope\n                           ? argz.shift()\n                           : _static.scope ? Scope.getScope(_static.scope)\n                                           : is.string(argz[ 0 ])\n                                             ? Scope.getScope(argz.shift())\n                                             : _static.staticScope,\n            cfg          = argz[ 0 ] && !is.array(argz[ 0 ]) && !is.string(argz[ 0 ])\n                           ? argz.shift()\n                           : {},\n            taskQueue    = is.array(argz[ 0 ]) ? argz.shift() : null,\n            name         = cfg.name || _static.name,\n            watchs       = cfg.use || [],\n            apply        = cfg.apply || null,\n            initialState = _static.state || _static.initialState || _static.defaultState,\n            applied;\n        \n        this._uid = cfg._uid || shortid.generate();\n        \n        this.__retains    = { all: 0 };\n        this.__locks      = { all: 0 };\n        this._onStabilize = [];\n        \n        // autoDestroyTm\n        this._autoDestroy   = !!this._persistenceTm;\n        this._persistenceTm = cfg.persistenceTm || _static.persistenceTm || ( cfg.autoDestroy || _static.autoDestroy ) && 5;\n        this._cfg           = cfg;\n        if ( cfg && cfg.on ) {\n            this.on(cfg.on);\n        }\n        \n        this.name = name;\n        \n        if ( scope.stores ) {\n            this.scopeObj = scope;\n            this.scope    = scope.stores;\n        }\n        else {\n            this.scopeObj = new Scope(scope);\n            this.scope    = scope.stores;\n        }\n        \n        // standardized scope access\n        this.$scope    = this.scopeObj;\n        this.$stores   = this.scopeObj.stores;\n        this.$actions  = this.scopeObj.actions;\n        this.$dispatch = this.scopeObj.dispatch.bind(this.scopeObj);\n        \n        this._rev     = this.constructor._rev || 0;\n        this._revs    = {};\n        this.stores   = {};\n        this._require = [];\n        this._sources = [ name ];\n        \n        if ( is.array(_static.use) ) {\n            this._use = [ ...watchs, ...( _static.use || [] ).map(\n                key => {\n                    let ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n                    if ( ref[ 1 ] ) {\n                        let ref2 = ref[ 2 ].split('.');\n                        this._require.push(ref[ 3 ] || ref2[ ref2.length - 1 ]);\n                    }\n                    return ref[ 2 ];\n                }\n            ) ];\n        }\n        else {\n            this._use = [ ...watchs, ...(\n                _static.use ? Object.keys(_static.use)\n                                    .map(\n                                        key => {\n                                            let ref = key.match(/^(\\!?)(.*)$/);\n                                            ref[ 1 ] && this._require.push(_static.use[ key ]);\n                                            return ref[ 2 ] + ( ( _static.use[ key ] === true )\n                                                                ? ''\n                                                                : ':' + _static.use[ key ] );\n                                        }\n                                    ) : []\n            ) ];\n        }\n        \n        if ( _static.require )\n            this._require.push(..._static.require);\n        if ( cfg.require )\n            this._require.push(...cfg.require);\n        \n        this._followers = [];\n        this._changesSW = initialState || {};\n        this.state      = initialState && {};\n        if ( apply )\n            this.apply = apply;\n        \n        /**\n         * Initial state isn't fully initialized ( childs constructors can set it )\n         * Scope based instance have taskQueue to delay init synchronously, if not\n         * present we use setTimeout\n         */\n        if ( taskQueue ) {\n            taskQueue.push(this._afterConstructor.bind(this))\n        }\n        else\n            setTimeout(this._afterConstructor.bind(this))\n    }\n    \n    /**\n     * Get the incoming state ( for immediate state relative actions )\n     * @returns {{}|*}\n     */\n    get nextState() {\n        return this._nextState || (\n            this._nextState = this._changesSW && { ...this.state, ...this._changesSW } || this.state\n        );\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get contextObj() {\n        return this.scopeObj;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get context() {\n        return this.scope;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get datas() {\n        return this.data;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    set datas( v ) {\n        //console.groupCollapsed(\"Rescope store : Setting datas is depreciated, use\n        // data\"); console.log(\"Rescope store : Setting datas is depreciated, use data\",\n        // (new Error()).stack); console.groupEnd();\n        \n        this.data = v;\n    }\n    \n    /**\n     * Get the incoming state ( for immediate state relative actions )\n     * @returns {{}|*}\n     */\n    get nextState() {\n        return this._changesSW && { ...this.state, ...this._changesSW } || this.state;\n    }\n    \n    _afterConstructor() {\n        let cfg          = this._cfg,\n            _static      = this.constructor,\n            snapshot     = this.restore(undefined, true),\n            initialState = this.state,\n            initialData  = this.data,\n            applied;\n        {\n            \n            if ( initialData )\n                this.data = initialData;\n            else if ( _static.data !== undefined )\n                this.data = { ..._static.data };\n            else if ( cfg.hasOwnProperty(\"data\") )\n                this.data = cfg.data;\n            \n            if ( cfg.hasOwnProperty(\"state\") && cfg.state !== undefined )\n                initialState = { ...initialState, ...cfg.state };\n            \n            if ( this.data === undefined ) {\n                if ( initialState || this._use.length ) {// sync apply\n                    this._changesSW = {\n                        ...this._changesSW,\n                        ...( initialState || {} ),\n                        ...this.$scope.map(this, this._use)\n                    };\n                    this.state      = {};\n                    if ( this.shouldApply(this._changesSW) && this.data === undefined ) {\n                        this.data       = this.apply(this.data, this._changesSW, this._changesSW);\n                        applied         = true;\n                        this.state      = this._changesSW;\n                        this._changesSW = {};\n                    }\n                }\n            }\n            else {\n                applied         = true;\n                this.state      = {// assume this state is sync with initial data\n                    ...this._changesSW,\n                    ...( initialState || {} ),\n                    ...this.$scope.map(this, this._use)\n                }\n                this._changesSW = {};\n            }\n        }\n        if ( ( this.data !== undefined || applied ) && !this.__locks.all ) {\n            this._stable = true;\n            this._rev++;\n        }\n        else {\n            this._stable = false;\n            if ( !_static.managed && !this.state && ( !this._use || !this._use.length ) ) {\n                console.warn(\"ReScope store '\", this.name, \"' have no initial data, state or use. It can't stabilize...\");\n            }\n        }\n        !this._stable && this.emit('unstable', this.state);\n        \n    }\n    \n    /**\n     * Overridable method to know if a data change should be propag to the listening\n     * stores & components\n     */\n    shouldPropag( nDatas ) {\n        \n        return true;\n    }\n    \n    hasDataChange( nDatas ) {\n        var _static = this.constructor, r,\n            cDatas  = this.data;\n        r           = !cDatas && nDatas || cDatas !== nDatas;\n        !r && cDatas && Object.keys(cDatas).forEach(\n            ( key ) => {\n                r = r || ( nDatas\n                           ? cDatas[ key ] !== nDatas[ key ]\n                           : cDatas && cDatas[ key ] )\n            }\n        );\n        !r && nDatas && Object.keys(nDatas).forEach(\n            ( key ) => {\n                r = r || ( nDatas\n                           ? cDatas[ key ] !== nDatas[ key ]\n                           : cDatas && cDatas[ key ] )\n            }\n        );\n        return r;\n    }\n    \n    /**\n     * Overridable method to know if a state change should be applied\n     */\n    shouldApply( state = this.state ) {\n        var _static = this.constructor;\n        \n        return (\n                   !!this.isComplete(state)\n               ) && ( is.array(_static.follow)\n                      ? _static.follow\n                               .reduce(( r, i ) => ( r || state && state[ i ] ), false)\n                      : _static.follow\n                        ? Object.keys(_static.follow)\n                                .reduce(( r, i ) => (\n                                    r\n                                    || state && is.fn(_static.follow[ i ]) && _static.follow[ i ].call(this, state[ i ])\n                                    || _static.follow[ i ] && state[ i ] !== this.state[ i ]\n                                ), false) : true\n               );\n    }\n    \n    /**\n     * Overridable applier / remapper\n     * If state or lastPublicState are simple hash maps apply will return {...data,\n     * ...state} if not it will return the last private state\n     * @param data\n     * @param state\n     * @returns {*}\n     */\n    apply( data, state, changes ) {\n        state = state || this.state;\n        \n        if ( this.refine )\n            return this.refine(...arguments);\n        \n        if ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n            return state;\n        else\n            return { ...data, ...state }\n    }\n    \n    /**\n     * @depreciated\n     * @param data\n     * @param state\n     * @param changes\n     * @returns {*}\n     */\n    refine( data, state, changes ) {\n        state = state || this.state;\n        \n        if ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n            return state;\n        else\n            return { ...data, ...state }\n    }\n    \n    /**\n     * Debounce this store propagation ( & reducing )\n     * @param cb\n     */\n    stabilize( cb ) {\n        cb && this.once('stable', cb);\n        this._stable && this.emit('unstable', this.state, this.data);\n        \n        this._stable = false;\n        \n        if ( this._stabilizer )\n            return;\n        \n        this._stabilizer = TaskSequencer.pushTask(this, 'pushState');\n    }\n    \n    retrieve( path, i = 0, obj = this.data ) {\n        path = is.string(path) ? path.split('.') : path;\n        return !obj || !path || !path.length\n               ? obj\n               : path.length == i + 1\n                 ? obj[ path[ i ] ]\n                 : this.retrieve(path, i + 1, obj[ path[ i ] ]);\n    }\n    \n    dispatch( action, ...argz ) {\n        this.scopeObj.dispatch(action, ...argz);\n    }\n    \n    trigger( action, ...argz ) {\n        let { actions } = this.constructor;\n        if ( actions && actions[ action ] ) {\n            let ns = actions[ action ].call(this, ...argz);\n            ns && this.setState(ns);\n        }\n    }\n    \n    /**\n     * Pull stores in the private state\n     * @param stores  {Array} (passed to Store::map) Ex : [\"session\",\n     *     \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n     */\n    pull( stores, doWait, origin ) {\n        let initialOutputs = this.scopeObj.map(this, stores);\n        if ( doWait ) {\n            this.wait();\n            stores.forEach(( s ) => this.scope[ s ] && this.wait(this.scope[ s ]));\n            this.release();\n        }\n        return initialOutputs;\n    }\n    \n    /**\n     * Set & Push the result data to followers if stable\n     * @param cb\n     */\n    push( data, force, cb ) {\n        cb    = force === true ? cb : force;\n        force = force === true;\n        if ( !force &&\n             (\n                 !this.hasDataChange(data)\n             )\n        ) {\n            cb && cb();\n            if ( !this.__locks.all ) {\n                let stable   = this._stable;\n                this._stable = true;\n                !stable && this.emit('stable', this.state, this.data);\n                this._stabilizer = null;\n            }\n            return false;\n        }\n        \n        this.data = data;\n        this.wait();\n        this.release(cb);\n        \n    }\n    \n    /**\n     * Call the apply fn using the current accumulated state update then, push the\n     * resulting data if stable\n     * @param force\n     * @returns {boolean}\n     */\n    pushState( force ) {\n        \n        if ( !force && !this._changesSW && this.data )\n            return;\n        \n        var nextState = this._nextState || { ...this.state, ...( this._changesSW || {} ) },\n            nextData  = this.apply(this.data, nextState, this._changesSW);\n        \n        this._stabilizer = null;\n        this.state       = nextState;\n        this._changesSW  = null;\n        \n        if ( !force &&\n             (\n                 !this.hasDataChange(nextData)\n             )\n        ) {\n            if ( !this.__locks.all ) {\n                let stable   = this._stable;\n                this._stable = true;\n                !stable && this.emit('stable', this.state, this.data);\n                this._stabilizer = null;\n            }\n            return false;\n        }\n        \n        this.data = nextData;\n        this.wait();\n        this.release();\n        \n    }\n    \n    /**\n     * Add 'pState' to the current accumulated state updates\n     * & wait source stores stabilization before pushing these state updates\n     * @param pState\n     * @param cb\n     */\n    setState( pState, cb, sync ) {\n        var i       = 0, change,\n            changes = this._changesSW = this._changesSW || {};\n        for ( var k in pState )\n            if ( !this.state\n                 || changes.hasOwnProperty(k)// todo\n                 && (\n                     pState[ k ] !== changes[ k ]\n                 ) || pState.hasOwnProperty(k)\n                 && (\n                 pState[ k ] !== this.state[ k ]\n                 ||\n                 ( this.state[ k ] && pState[ k ] && ( pState[ k ]._rev != this._revs[ k ] ) )// rev/hash update\n                 ) ) {\n                change          = true;\n                this._revs[ k ] = pState[ k ] && pState[ k ]._rev || true;\n                changes[ k ]    = pState[ k ];\n            }\n        \n        this._nextState = { ...this.state, ...changes };\n        if ( !this.shouldApply(this._nextState) ) {\n            return;\n        }\n        \n        if ( sync ) {\n            this.pushState();\n            cb && cb();\n        }\n        else {\n            if ( change ) {\n                this.stabilize(cb);\n            }\n            else cb && cb();\n        }\n        return this;\n    }\n    \n    /**\n     * Update the current state & push it\n     * @param pState\n     * @param cb\n     */\n    setStateSync( pState ) {\n        var i       = 0, change,\n            changes = this._changesSW = this._changesSW || {};\n        for ( var k in pState )\n            if ( !this.state || pState.hasOwnProperty(k)\n                 && (\n                 pState[ k ] != this.state[ k ]\n                 ||\n                 ( this.state[ k ] && pState[ k ] && ( pState[ k ]._rev != this._revs[ k ] ) )// rev/hash update\n                 ) ) {\n                change          = true;\n                this._revs[ k ] = pState[ k ] && pState[ k ]._rev || true;\n                changes[ k ]    = pState[ k ];\n            }\n        this.shouldApply({ ...( this.state || {} ), ...changes }) && this.pushState();\n        return this.data;\n    }\n    \n    /**\n     * get a store-key pair for Store::map\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    as( name ) {\n        return { store: this, name };\n    }\n    \n    on( lists ) {\n        if ( !is.string(lists) && lists )\n            Object.keys(lists).forEach(k => super.on(k, lists[ k ]));\n        else super.on(...arguments);\n    }\n    \n    removeListener( lists ) {\n        if ( !is.string(lists) && lists )\n            Object.keys(lists).forEach(k => super.removeListener(k, lists[ k ]));\n        else super.removeListener(...arguments);\n    }\n    \n    /**\n     * is complete (all requiered keys are here)\n     * @returns bool\n     */\n    isComplete( state = this.state ) {\n        var _static = this.constructor;\n        return (\n            !this._require\n            || !this._require.length\n            || state && this._require.reduce(\n                ( r, key ) => ( r && state[ key ] ),\n                true\n            )\n        );\n    }\n    \n    /**\n     * is stable\n     * @returns bool\n     */\n    isStable() {\n        return this._stable;\n    }\n    \n    /**\n     * Serialize state & data with sources refs\n     * @returns bool\n     */\n    serialize( cfg = {}, output = {} ) {\n        let refs =\n                !cfg.norefs && is.array(this._use) && this._use.reduce(\n                ( map, key ) => {//todo\n                    let name,\n                        alias, path,\n                        store;\n                    if ( key.store && key.name ) {\n                        alias = name = key.name;\n                        store = this.scopeObj.stores[ name ];\n                    }\n                    else if ( is.fn(key) ) {\n                        name = alias = key.name || key.defaultName;\n                        store = this.scopeObj.stores[ name ];\n                    }\n                    else {\n                        key   = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                        name  = key[ 1 ];\n                        path  = key[ 2 ] && key[ 2 ].substr(1);\n                        alias = key[ 3 ] || path && path.match(/([^\\.]*)$/)[ 0 ] || key[ 1 ];\n                        store = this.scopeObj.retrieveStore(path);\n                    }\n                    if ( store && !store.scopeObj._.isLocalId )\n                        map[ alias ] = store.scopeObj._id + '/' + name;\n                \n                    return map;\n                }, {}\n                            ) || {};\n        \n        keyWalknSet(\n            output,\n            ( this.scopeObj._id + '/' + this.name ),\n            {\n                state: this.state &&\n                       (\n                           cfg.norefs\n                           ? { ...this.state }\n                           : Object.keys(this.state).reduce(( h, k ) => ( !refs[ k ] && ( h[ k ] = this.state[ k ] ), h ), {})\n                       ),\n                data : (\n                           this.data &&\n                           this.data.__proto__ === objProto ?\n                           this.data:\n                           ( is.bool(this.data)\n                             || is.number(this.data)\n                             || is.string(this.data) ) && this.data\n                       )\n                       || undefined\n                \n                ,\n                refs\n            }\n        );\n        return output;\n    }\n    \n    /**\n     * restore state & data\n     * @returns bool\n     */\n    restore( snapshot, immediate ) {\n        snapshot = snapshot\n                   && keyWalknGet(snapshot, this.scopeObj._id + '/' + this.name)\n                   || this.$scope.takeSnapshotByKey(this.scopeObj._id + '/' + this.name);\n        \n        if ( !snapshot )\n            return;\n        \n        if ( snapshot ) {\n            if ( !this.isStable() && !immediate )\n                this.then(() => restore(snapshot))\n            let snap;\n            this.state = { ...snapshot.state };\n            Object.keys(snapshot.refs).forEach(\n                ( key ) => {//todo\n                    if ( snap = this.$scope.getSnapshotByKey(snapshot.refs[ key ]) )\n                        this.state[ key ] = snap.data;\n                    else\n                        console.warn('not found : ', key, snap.refs[ key ])\n                }\n            )\n            \n            this.data = snapshot.data;\n            \n        }\n    }\n    \n    /**\n     * Un bind this store off the given component-key\n     * @param obj\n     * @param key\n     * @returns {Array.<*>}\n     */\n    unBind( obj, key, path ) {\n        var followers = this._followers,\n            i         = followers && followers.length;\n        while ( followers && i-- )\n            if ( followers[ i ][ 0 ] === obj && followers[ i ][ 1 ] === key && followers[ i ][ 2 ] === path )\n                return followers.splice(i, 1);\n    }\n    \n    /**\n     * Bind this store changes to the given component-key\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    bind( obj, key, setInitial = true, path ) {\n        this._followers.push([ obj, key, path ]);\n        if ( setInitial && this.data && this._stable ) {\n            let data = path ? this.retrieve(path) : this.data;\n            if ( typeof obj != \"function\" ) {\n                if ( key ) obj.setState({ [ key ]: data });\n                else obj.setState(data);\n            }\n            else {\n                obj(data);\n            }\n        }\n    }\n    \n    /**\n     * once('stable', cb)\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    then( cb ) {\n        if ( this._stable )\n            return cb(this.data);\n        this.once('stable', e => cb(this.data));\n    }\n    \n    /**\n     * Add a lock so the store will not propag it data untill release() is call\n     * @param previous {Store|number|Array} @optional wf to wait, releases to wait or\n     *     array of stuff to wait\n     * @returns {this}\n     */\n    wait( previous ) {\n        if ( typeof previous == \"number\" )\n            return this.__locks.all += previous;\n        if ( is.array(previous) )\n            return previous.map(this.wait.bind(this));\n        \n        this._stable && this.emit('unstable', this.state, this.data);\n        this._stable = false;\n        this.__locks.all++;\n        \n        let reason = is.string(previous) ? previous : null;\n        if ( reason ) {\n            this.__locks[ reason ] = this.__locks[ reason ] || 0;\n            this.__locks[ reason ]++;\n        }\n        if ( previous && is.fn(previous.then) ) {\n            previous.then(this.release.bind(this, null));\n        }\n        return this;\n    }\n    \n    /**\n     * Decrease locks for this store, if it reach 0 ,\n     * it will be propagated to the followers,\n     * then, all stuff passed to \"then\" call back will be exec / released\n     * @param desync\n     * @returns {*}\n     */\n    release( reason, cb ) {\n        var _static = this.constructor, me = this;\n        let i       = 0, wasStable = this._stable;\n        \n        if ( is.fn(reason) ) {\n            cb     = reason;\n            reason = null;\n        }\n        \n        if ( reason ) {\n            if ( this.__locks[ reason ] == 0 )\n                console.error(\"Release more than locking !\", reason);\n            this.__locks[ reason ] = this.__locks[ reason ] || 0;\n            this.__locks[ reason ]--;\n        }\n        \n        if ( !reason && this.__locks.all == 0 )\n            console.error(\"Release more than locking !\");\n        \n        if ( !--this.__locks.all && this.isComplete() ) {\n            let propag   = this.shouldPropag(this.data);\n            this._stable = true;\n            propag && this._rev++;//\n            if ( propag && this._followers.length )\n                this._followers.forEach(function propag( follower ) {\n                    let data = follower[ 2 ] ? me.retrieve(follower[ 2 ]) : me.data;\n                    //if ( !data ) return;\n                    \n                    if ( typeof follower[ 0 ] == \"function\" ) {\n                        follower[ 0 ](data);\n                    }\n                    else {\n                        //cb && i++;\n                        follower[ 0 ].setState(\n                            ( follower[ 1 ] ) ? { [ follower[ 1 ] ]: data }\n                                              : data\n                            //,\n                            //cb && (\n                            //    () => (!(--i) && cb())\n                            //)\n                        );\n                    }\n                });\n            //else\n            !wasStable && this.emit('stable', this.data);\n            propag && this.emit('update', this.data);\n            cb && cb()\n        }\n        else cb && this.then(cb);\n        return this;\n    }\n    \n    propag( data ) {\n        this.emit('update', data);\n    }\n    \n    retain( reason ) {\n        this.__retains.all++;\n        if ( reason ) {\n            this.__retains[ reason ] = this.__retains[ reason ] || 0;\n            this.__retains[ reason ]++;\n        }\n    }\n    \n    dispose( reason ) {\n        //console.warn(\"dispose\", reason, this.__retains);\n        if ( reason ) {\n            if ( !this.__retains[ reason ] )\n                throw new Error(\"Dispose more than retaining : \" + reason);\n            \n            this.__retains[ reason ]--;\n        }\n        if ( this.__retains.all == 0 )\n            throw new Error(\"Dispose more than retaining !\");\n        \n        this.__retains.all--;\n        \n        if ( !this.__retains.all ) {\n            if ( this._persistenceTm ) {\n                this._destroyTM && clearTimeout(this._destroyTM);\n                this._destroyTM = setTimeout(\n                    e => {\n                        this._destroyTM = null;\n                        //this.then(s => {\n                        !this.__retains.all && !this.dead && this.destroy()\n                        //});\n                    },\n                    this._persistenceTm\n                );\n            }\n            else {\n                //this.then(s =>\n                ( !this.__retains.all && !this.dead && this.destroy() )\n                //);\n            }\n        }\n    }\n    \n    destroy() {\n        //  console.log(\"destroy\", this._uid);\n        \n        this.emit('destroy', this);\n        if ( this._stabilizer )\n            clearTimeout(this._stabilizer);\n        \n        if ( this._followers.length )\n            this._followers.forEach(\n                ( follower ) => {\n                    if ( typeof follower[ 0 ] !== \"function\" ) {\n                        if ( follower[ 0 ].stores )\n                            delete follower[ 0 ].stores[ follower[ 1 ] ];\n                    }\n                }\n            );\n        this._followers.length = 0;\n        this.constructor._rev  = this.rev;\n        this.dead              = true;\n        this._revs             = this.data = this.state = this.scope = null;\n        this.removeAllListeners();\n    }\n}\n\n/**\n * get a static aliased reference of a store\n * @param {string} name\n * @returns {{store: Store, name: *}}\n */\nStore.as = function ( name ) {\n    return { store: this, name };\n}\n\n/**\n * Map all named stores in {keys} to the {object}'s state\n * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n * @static\n * @param object {Object} target state aware object (React.Component|Store|...)\n * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\",\n *     store.as('anotherKey')]\n */\nStore.map = function ( component, keys, scope, origin, setInitial = false ) {\n    var targetRevs     = component._revs || {};\n    var targetScope    = component.stores || ( component.stores = {} );\n    var initialOutputs = {};\n    keys               = is.array(keys) ? [ ...keys ] : [ keys ];\n    \n    \n    scope = scope || Store.staticScope;\n    \n    keys = keys.filter(\n        // @todo : use query refs\n        // (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n        ( key ) => {\n            if ( !key ) {\n                console.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n                return false;\n            }\n            let name,\n                alias,\n                path,\n                store, _key;\n            if ( key.store && key.name ) {\n                alias = name = key.name;\n                store = key.store;\n            }\n            else if ( is.fn(key) ) {\n                name = alias = key.name || key.defaultName;\n                store = key;\n            }\n            else {\n                _key  = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                name  = _key[ 1 ];\n                path  = _key[ 2 ] && _key[ 2 ].substr(1);\n                store = scope.stores[ _key[ 1 ] ];\n                alias = _key[ 3 ] || path && path.match(/([^\\.]*)$/)[ 0 ] || _key[ 1 ];\n            }\n            \n            if ( is.rsScope(store.prototype) ) scope._mount(name);\n            if ( is.rsScope(store) ) {\n                store = scope._mount(key);\n            }\n            else if ( targetRevs[ name ] ) return false;// ignore dbl uses for now\n            \n            if ( !store ) {\n                console.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + ( component.name || component ) + ' !!', store);\n                return false;\n            }\n            else if ( is.fn(store) ) {\n                scope._mount(name)\n                scope.stores[ name ].bind(component, alias, setInitial, path);\n            }\n            else {\n                store.bind(component, alias, setInitial, path);\n            }\n            \n            // give initial store weight basing sources\n            scope.stores[ name ]._sources && component._sources.push(...scope.stores[ name ]._sources);\n            \n            targetRevs[ alias ] = targetRevs[ alias ] || true;\n            !targetScope[ name ] && ( targetScope[ name ] = scope.stores[ name ] );\n            if ( scope.stores[ name ].hasOwnProperty('data') )\n                initialOutputs[ name ] = scope.data[ name ];\n            return true;\n        }\n    );\n    \n    // ... @todo\n    var mixedCWUnmount,\n        unMountKey = component.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n    \n    if ( component.hasOwnProperty(unMountKey) ) {\n        mixedCWUnmount = component[ unMountKey ];\n    }\n    \n    component[ unMountKey ] = ( ...argz ) => {\n        delete component[ unMountKey ];\n        if ( mixedCWUnmount )\n            component[ unMountKey ] = mixedCWUnmount;\n        \n        keys.map(\n            ( key ) => {\n                let name,\n                    alias, path,\n                    store;\n                if ( key.store && key.name ) {\n                    alias = name = key.name;\n                    store = key.store;\n                }\n                else if ( is.fn(key) ) {\n                    name = alias = key.name || key.defaultName;\n                    store = scope.stores[ name ];\n                }\n                else {\n                    key   = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                    name  = key[ 1 ];\n                    path  = key[ 2 ] && key[ 2 ].substr(1);\n                    store = scope.stores[ key[ 1 ] ];\n                    alias = key[ 3 ] || path && path.match(/([^\\.]*)$/)[ 0 ] || key[ 1 ];\n                }\n                \n                store && !is.fn(store) && store.unBind(component, alias, path)\n            }\n        );\n        return component[ unMountKey ] && component[ unMountKey ](...argz);\n    }\n    \n    return initialOutputs;\n};\n\n\nis.rsStore = function ( obj ) {\n    return obj instanceof Store\n}\n\nexport default Store;\n\n\n// WEBPACK FOOTER //\n// ./src/Store.js","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\n//import index from \"./index\";// will use as external the index in dist\nimport is from \"is\";\n\n/**\n * Minimal push sequencer, apply stores specific task in the right order (root stores\n * first)\n */\nlet taskQueue      = [],\n    curWeight      = 0,\n    maxWeight      = 0,\n    minWeight      = 0,\n    taskCount      = 0,\n    deSync         = false,\n    deSyncMaxTasks = 10,\n    task,\n    isRunning,\n    errorCatcher   = {\n        lastError: null,\n        dispatch : function ( error ) {\n            errorCatcher.disable();\n            if ( task && task[ 0 ].handleError ) {\n                task[ 0 ].handleError(error, task);\n            }\n            else if ( task )\n                console.error(\"ReScope : A task has failed !!\", task[ 1 ], \" on \", task[ 0 ].name || task[ 0 ].constructor.name)\n        \n            isRunning = false;\n            task      = null;\n            runNow();\n        },\n        enable   : ( typeof window !== 'undefined' )\n                   ? () => {\n                window.addEventListener('error', errorCatcher.dispatch)\n            } : () => {\n                process.on('uncaughtException', errorCatcher.dispatch);\n            },\n        disable  : ( typeof window !== 'undefined' )\n                   ? () => {\n                window.removeEventListener('error', errorCatcher.dispatch)\n            } : () => {\n                process.removeListener('uncaughtException', errorCatcher.dispatch);\n            }\n    }\n;\n\nfunction runNow() {\n    if ( !isRunning ) {\n        run();\n    }\n}\n\nfunction run() {\n    let from  = Date.now();\n    isRunning = true;\n    errorCatcher.enable();\n    while ( taskCount ) {\n        \n        // try for the current weight\n        while ( !( taskQueue[ curWeight ] && taskQueue[ curWeight ].length ) )\n            curWeight++;\n        \n        taskCount--;\n        task = taskQueue[ curWeight ].shift();\n        //console.log(\"Task : \", task[1], \" on \", task[0].name);\n        task[ 0 ][ task[ 1 ] ].apply(task[ 0 ], task[ 2 ]);\n    }\n    task = undefined;\n    errorCatcher.disable();\n    \n    isRunning = false;\n    if ( taskCount ) {\n        setTimeout(runNow);\n    }\n}\n\n//\n//index.setTaskDeSync = ( nb ) => {\n//    if ( nb === false )\n//        return deSync = false;\n//    else if ( nb === true ) {\n//        deSync         = true;\n//        deSyncMaxTasks = 10;\n//    }\n//    else (is.int(nb))\n//    {\n//        deSync         = true;\n//        deSyncMaxTasks = nb;\n//    }\n//};\n\nexport default {\n    pushTask( obj, fn, argz ) {\n        /**\n         * The more a store have sources, the more it should be processed first\n         * So leafs stores stay sync, root stores get merged state updates and global\n         * state stay coherent\n         * @type {*|number}\n         */\n        let weight = obj._sources && obj._sources.length || 1,\n            stack  = taskQueue[ weight ] =\n                taskQueue[ weight ] || [];\n        \n        maxWeight = Math.max(maxWeight, weight);\n        curWeight = Math.min(curWeight, weight);\n        taskCount++;\n        \n        //console.log(\"Push Task : \", fn, \" on \", obj.name, weight);\n        stack.push([ obj, fn, argz ]);\n        setTimeout(runNow, 0);\n        return stack.length;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/TaskSequencer.js","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\nimport is    from 'is'\n\nconst SimpleObjectProto = ( {} ).constructor;\n\nlet scopables = [];\n\nfunction addScopableType( test, handle, member = false, stateScope = false ) {\n    scopables.push(\n        {\n            test,\n            member,\n            stateScope,\n            handle\n        }\n    )\n}\n\n//\nfunction isScopableType( Comp, member, stateScope ) {\n    \n    for ( let i = 0; i < scopables.length; i++ )\n        if (\n            ( member === undefined || member == scopables[ i ].member )\n            && stateScope == scopables[ i ].stateScope\n            && scopables[ i ].test(Comp)\n        )\n            return true;\n    \n    return false;\n    \n}\n\nfunction applyScopableType( Comp, argz, member, stateScope ) {\n    \n    for ( let i = 0; i < scopables.length; i++ )\n        if ( member == scopables[ i ].member && stateScope == scopables[ i ].stateScope && scopables[ i ].test(Comp) )\n            return scopables[ i ].handle(Comp, ...argz);\n    \n    console.warn(\"reScope : Unknown type\", Comp)\n    \n    return false;\n    \n}\n\nfunction reScope( ...argz ) {\n    // are we decorating a member / without argz\n    if ( argz[ 0 ] instanceof SimpleObjectProto && argz[ 2 ] instanceof SimpleObjectProto && argz[ 0 ].hasOwnProperty(argz[ 1 ]) ) {\n        argz[ 2 ].value = applyScopableType(argz[ 0 ], [], true, false);\n        return argz[ 0 ];\n    }\n    else if ( !isScopableType(argz[ 0 ], undefined, false) ) {\n        return ( ...argz2 ) => {\n            // are we decorating a member / with argz\n            if ( argz2[ 0 ] instanceof SimpleObjectProto && argz2[ 2 ] instanceof SimpleObjectProto && argz2[ 0 ].hasOwnProperty(argz2[ 1 ]) ) {\n                argz2[ 2 ].value = applyScopableType(argz2[ 0 ], argz, true, false);\n                return argz2[ 0 ];\n            }\n            else\n                return reScope(argz2[ 0 ], ...argz);\n        }\n    }\n    return applyScopableType(argz[ 0 ], argz.slice(1), false, false);\n}\n\nfunction scopeToState( ...argz ) {\n    // are we decorating a member / without argz\n    if ( argz[ 0 ] instanceof SimpleObjectProto && argz[ 2 ] instanceof SimpleObjectProto && argz[ 0 ].hasOwnProperty(argz[ 1 ]) ) {\n        argz[ 2 ].value = applyScopableType(argz[ 0 ], [], true, true);\n        return argz[ 0 ];\n    }\n    else if ( !isScopableType(argz[ 0 ], undefined, true) ) {\n        return ( ...argz2 ) => {\n            // are we decorating a member / with argz\n            if ( argz2[ 0 ] instanceof SimpleObjectProto && argz2[ 2 ] instanceof SimpleObjectProto && argz2[ 0 ].hasOwnProperty(argz2[ 1 ]) ) {\n                argz2[ 2 ].value = applyScopableType(argz2[ 0 ], argz, true, true);\n                return argz2[ 0 ];\n            }\n            else\n                return scopeToState(argz2[ 0 ], ...argz);\n        }\n    }\n    return applyScopableType(argz[ 0 ], argz.slice(1), false, true);\n}\n\n//\n//addScopableType(\n//    ( Comp ) => (Comp && Comp.prototype instanceof Store),\n//    function reScope( ...argz ) {\n//        let BaseStore    = (!argz[0] || argz[0].prototype instanceof Store) &&\n// argz.shift(), scope        = (!argz[0] || argz[0] instanceof Scope || is.fn(argz[0]))\n// && argz.shift(), use          = (is.array(argz[0])) && argz.shift(), stateMap     =\n// !use && (!argz[0] || argz[0] instanceof SimpleObjectProto) && argz.shift(),\n// initialState = {};  let compName = BaseStore.displayName || BaseStore.name;  use =\n// [...(BaseStore.use || []), ...(use || [])]; stateMap &&\n// Scope.stateMapToRefList(stateMap, initialState, use);  class StateScopedStore extends\n// BaseStore { static use         = use; static displayName = \"stateScoped(\" + compName +\n// \")\";  constructor( ...argz ) { super(scope, argz.slice(argz[0] instanceof Scope ? 1 :\n// 0)) } }  return StateScopedStore; }, false, true )\n\n\nexport {\n    addScopableType,\n    reScope,\n    scopeToState\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/scopable.js"],"sourceRoot":""}
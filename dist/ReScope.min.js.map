{"version":3,"sources":["webpack:///../../dist/ReScope.min.js","webpack:///webpack/bootstrap c3be4199270c791333e7","webpack:///./src/index.js","webpack:///external \"is\"","webpack:///./src/Scope.js","webpack:///./src/utils/Emitter.js","webpack:///./src/utils/utils.js","webpack:///external \"shortid\"","webpack:///./src/Store.js","webpack:///./src/utils/TaskSequencer.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Scope","_Scope2","_Store","_Store2","$global","window","global","RS","___rescope","Scope","Store","scopeRef","map","key","require","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_class","_temp","_extends","assign","target","arguments","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_is","_is2","_shortid","_shortid2","_Emitter","_Emitter2","_utils","__proto__push","parent","fn","_","allScopes","_EventEmitter","storesMap","_ref2","undefined","upperScope","snapshot","state","data","_ref2$incrementId","incrementId","persistenceTm","autoDestroy","rootEmitter","boundedActions","this","_this","getPrototypeOf","keyPID","_id","shortid","generate","baseId","isLocalId","_ret","register","_rev","actions","stores","_autoDestroy","dead","Error","sources","childScopes","childScopesList","unStableChilds","seenChilds","_listening","_scope","_mixed","_mixedList","followers","__retains","all","__locks","_boundedActions","is","array","test","includes","bind","retain","on","_parentList","update","s","_propag","_stable","wait","stable","release","unstable","_addChild","restore","setTimeout","tm","dispose","sm","_refs","path","applier","keys","forEach","cpath","push","Function","as","scopes","skey","sort","a","b","firstname","join","storeIdList","_this2","storeId","_mount","apply","ref","parseRef","_parent","reduceRight","mounted","ctx","store","taskQueue","isStoreClass","name","shift","isScopeClass","$parent","mount","slice","isStore","setState","_watchStore","_this3","relink","singleton","srcCtx","targetCtx","_this4","external","force","hotReloading","tmp","nextState","destroy","get","set","v","activeActions","isScope","act","__targetStores","dispatch","_this5","isStable","propag","_this6","lists","__origin","_this7","setInitial","revMap","lastRevs","refKeys","string","reduce","revs","rev","refs","retainStores","getUpdates","disposeStores","splice","_this8","refList","mixedCWUnmount","unMountKey","isReactComponent","unBind","walknSet","alias","retrieve","split","cScope","retrieveStore","storesRevMap","local","updated","getStoresRevs","_getRevMap","output","_this9","_this10","childs","_getAllChilds","cfg","_ref3","parentAlias","sid","serialize_ex","_this11","exclude","_cfg$withChilds","withChilds","_cfg$withMixed","withMixed","norefs","keyWalknGet","keyWalknSet","serialize","withChild","withParents","h","k","_this12","bool","snap","takeSnapshotByKey","startsWith","substr","getSnapshotByKey","deleteSnapshotByKey","replace","pState","_this13","_ref","action","_parent2","_this14","_len","argz","_key","bActs","_$_scope$id","trigger","concat","cb","_this15","once","e","then","_this16","onceStableTree","_this17","reason","_this18","emit","_this19","stabilizerTM","clearTimeout","propagTM","_this20","_this21","_ref4","scope","_this22","stableTree","unstableTree","wasStable","indexOf","un","_this23","destroyTM","_this24","removeListener","follower","_rmChild","EventEmitter","isPrototypeOf","Emitter","_events","evt","stack","walknGet","isKey","filter","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getter","_require","TaskSequencer","objProto","_this$_require","_this$_require2","_static","getScope","staticScope","watchs","use","initialState","defaultState","_uid","_onStabilize","_persistenceTm","_cfg","scopeObj","$scope","$stores","$actions","$dispatch","_revs","_sources","_use","match","ref2","_followers","_changesSW","_afterConstructor","initialData","applied","shouldApply","managed","nDatas","r","cDatas","isComplete","follow","changes","_stabilizer","pushTask","_scopeObj","_key2","_actions$action","_len2","_key3","ns","hasDataChange","_nextState","nextData","sync","change","pushState","stabilize","sId","refsCount","persistent","shouldSerialize","dataRefs","stateKeys","stateRefs","inRefsCount","inRefs","number","_restore","_x","_x2","toString","immediate","restoreRefPath","previous","me","shouldPropag","_destroyTM","removeAllListeners","cStore","origin","targetRevs","targetScope","initialOutputs","_cStore$_sources","defaultName","o","runNow","isRunning","run","Date","now","errorCatcher","enable","taskCount","curWeight","task","disable","maxWeight","lastError","error","handleError","addEventListener","process","removeEventListener","weight","Math","max","min"],"mappings":"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","file":"../../dist/ReScope.min.js","sourcesContent":["/*!\n * MIT License\n * \n * Copyright (c) 2018 Wise Wild Web\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Scope = __webpack_require__(2);\n\t\n\tvar _Scope2 = _interopRequireDefault(_Scope);\n\t\n\tvar _Store = __webpack_require__(6);\n\t\n\tvar _Store2 = _interopRequireDefault(_Store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t * The MIT License (MIT)\n\t * Copyright (c) 2019. Wise Wild Web\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t *  @author : Nathanael Braun\n\t *  @contact : n8tz.js@gmail.com\n\t */\n\t\n\tvar $global = typeof window !== 'undefined' ? window : global;\n\t\n\tvar RS = $global.___rescope || {};\n\t\n\tif ($global.___rescope) {\n\t  console.warn(\"ReScope is defined multiple times !! \\nCheck you're packaging\");\n\t} else {\n\t\n\t  $global.___rescope = RS;\n\t  _Scope2.default.Store = _Store2.default;\n\t  RS.Scope = _Scope2.default;\n\t  RS.Store = _Store2.default;\n\t  RS.scopeRef = function scopeRef(map, key) {\n\t    map[key] = new _Scope2.default.scopeRef(map[key]);\n\t    return map;\n\t  };\n\t}\n\texports.default = RS;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"is\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _class, _temp; /*\n\t                    * The MIT License (MIT)\n\t                    * Copyright (c) 2019. Wise Wild Web\n\t                    *\n\t                    * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t                    *\n\t                    * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t                    *\n\t                    * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t                    *\n\t                    *  @author : Nathanael Braun\n\t                    *  @contact : n8tz.js@gmail.com\n\t                    */\n\t\n\tvar _is = __webpack_require__(1);\n\t\n\tvar _is2 = _interopRequireDefault(_is);\n\t\n\tvar _shortid = __webpack_require__(5);\n\t\n\tvar _shortid2 = _interopRequireDefault(_shortid);\n\t\n\tvar _Emitter = __webpack_require__(3);\n\t\n\tvar _Emitter2 = _interopRequireDefault(_Emitter);\n\t\n\tvar _utils = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar __proto__push = function __proto__push(target, id, parent) {\n\t\tvar fn = function fn() {};\n\t\tfn.prototype = parent ? new parent._[id]() : target[id] || {};\n\t\ttarget[id] = new fn();\n\t\ttarget._[id] = fn;\n\t},\n\t    allScopes = {};\n\t\n\t/**\n\t * Base Scope object\n\t */\n\tvar Scope = (_temp = _class = function (_EventEmitter) {\n\t\t_inherits(Scope, _EventEmitter);\n\t\n\t\t_createClass(Scope, null, [{\n\t\t\tkey: \"stateMapToRefList\",\n\t\t\t// all active scopes\n\t\t\t/**\n\t   * get a parsed reference list from stateMap\n\t   * @param _ref\n\t   * @returns {{storeId, path, alias: *, ref: *}}\n\t   */\n\t\t\tvalue: function stateMapToRefList(sm) {\n\t\t\t\tvar state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t\t\t\tvar _refs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\t\n\t\t\t\tvar actions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\t\t\tvar path = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n\t\n\t\t\t\tvar applier = void 0;\n\t\t\t\tObject.keys(sm).forEach(function (key) {\n\t\t\t\t\tvar cpath = path ? path + '.' + key : key;\n\t\n\t\t\t\t\tsm[key] instanceof Scope.scopeRef ? _refs.push(sm[key].path + ':' + cpath) : sm[key] && sm[key] instanceof Function ? key == \"$apply\" ? applier = sm[key] : actions[key] = sm[key] : sm[key] && sm[key].prototype instanceof Scope.Store ? _refs.push(sm[key].as(cpath)) : state[cpath] = sm[key];\n\t\t\t\t\t//: this.stateMapToRefList(sm[key], _refs, path + '.' + key)\n\t\t\t\t});\n\t\t\t\treturn applier;\n\t\t\t} // if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n\t\n\t\t}, {\n\t\t\tkey: \"getScope\",\n\t\t\tvalue: function getScope(scopes) {\n\t\t\t\tvar skey = _is2.default.array(scopes) ? scopes.sort(function (a, b) {\n\t\t\t\t\tif (a.firstname < b.firstname) return -1;\n\t\t\t\t\tif (a.firstname > b.firstname) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t}).join('+') : scopes;\n\t\t\t\treturn allScopes[skey] = allScopes[skey] || new Scope({}, { id: skey });\n\t\t\t}\n\t\t}]);\n\t\n\t\t/**\n\t  * Init a ReScope scope\n\t  *\n\t  * @param storesMap {Object} Object with the initial stores definition / instances\n\t  * @param config {Object} Scope config\n\t  * {\n\t  *     parent {scope} @optional parent scope\n\t  *\n\t  *     id {string} @optional id ( if this id exist storesMap will be merge on the 'id'\n\t  *     scope)\n\t  *     key {string} @optional key of the scope ( if no id is set, the scope id will be (parent.id+'>'+key)\n\t  *     incrementId {bool} @optional true to add a suffix id, if the provided key or id globally exist\n\t  *\n\t  *     state {Object} @optional initial state by store alias\n\t  *     data {Object} @optional initial data by store alias\n\t  *\n\t  *     rootEmitter {bool} @optional true to not being destabilized by parent\n\t  *     boundedActions {array | regexp} @optional list or regexp of actions not propagated to the parent\n\t  *     autoDestroy {true | false | 'inherit'}\n\t  *     persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when\n\t  *     dispose reach 0 autoDestroy  {bool} will trigger retain & dispose after start\n\t  *  }\n\t  * @returns {Scope}\n\t  */\n\t\tfunction Scope(storesMap) {\n\t\t\tvar _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t\t\t    parent = _ref2.parent,\n\t\t\t    upperScope = _ref2.upperScope,\n\t\t\t    key = _ref2.key,\n\t\t\t    id = _ref2.id,\n\t\t\t    snapshot = _ref2.snapshot,\n\t\t\t    state = _ref2.state,\n\t\t\t    data = _ref2.data,\n\t\t\t    _ref2$incrementId = _ref2.incrementId,\n\t\t\t    incrementId = _ref2$incrementId === undefined ? !!key : _ref2$incrementId,\n\t\t\t    persistenceTm = _ref2.persistenceTm,\n\t\t\t    autoDestroy = _ref2.autoDestroy,\n\t\t\t    rootEmitter = _ref2.rootEmitter,\n\t\t\t    boundedActions = _ref2.boundedActions;\n\t\n\t\t\t_classCallCheck(this, Scope);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Scope.__proto__ || Object.getPrototypeOf(Scope)).call(this));\n\t\n\t\t\tvar _ = {\n\t\t\t\tkeyPID: upperScope && upperScope._id || parent && parent._id || _shortid2.default.generate(),\n\t\t\t\tkey: key,\n\t\t\t\tincrementId: incrementId,\n\t\t\t\tbaseId: id\n\t\t\t};\n\t\n\t\t\t// generate / set this scope id\n\t\t\tid = id || key && _.keyPID + '>' + key;\n\t\n\t\t\t_.isLocalId = !id;\n\t\n\t\t\tid = id || \"_____\" + _shortid2.default.generate();\n\t\n\t\t\tif (allScopes[id] && !incrementId) {\n\t\t\t\tvar _ret;\n\t\n\t\t\t\t// overwrite existing scope\n\t\t\t\t_this._id = id;\n\t\t\t\tallScopes[id].register(storesMap);\n\t\t\t\treturn _ret = allScopes[id], _possibleConstructorReturn(_this, _ret);\n\t\t\t} else if (allScopes[id] && incrementId) {\n\t\t\t\t// generate key id\n\t\t\t\tvar i = -1;\n\t\t\t\twhile (allScopes[id + '[' + ++i + ']']) {}\n\t\t\t\tid = id + '[' + i + ']';\n\t\t\t}\n\t\n\t\t\t// register this scope in the static Scope.scopes\n\t\t\tallScopes[id] = _this;\n\t\n\t\t\t_this._id = id;\n\t\t\t_this._rev = 0;\n\t\n\t\t\t_this._ = _;\n\t\n\t\t\t_this.actions = {};\n\t\t\t_this.stores = {};\n\t\t\t_this.state = {};\n\t\t\t_this.data = {};\n\t\n\t\t\t_this.parent = parent;\n\t\n\t\t\tif (autoDestroy == 'inherit') autoDestroy = parent && parent._autoDestroy;\n\t\n\t\t\t_this._autoDestroy = autoDestroy;\n\t\t\t_.persistenceTm = persistenceTm || _this.constructor.persistenceTm;\n\t\n\t\t\tif (parent && parent.dead) throw new Error(\"Can't use a dead scope as parent !\");\n\t\n\t\t\t__proto__push(_this, 'actions', parent);\n\t\t\t__proto__push(_this, 'stores', parent);\n\t\t\t__proto__push(_this, 'state', parent);\n\t\t\t__proto__push(_this, 'data', parent);\n\t\n\t\t\t_this.sources = [];\n\t\t\t_.childScopes = [];\n\t\t\t_.childScopesList = [];\n\t\t\t_.unStableChilds = 0;\n\t\t\t_.seenChilds = 0;\n\t\t\t_._listening = {};\n\t\t\t_._scope = {};\n\t\t\t_._mixed = [];\n\t\t\t_._mixedList = [];\n\t\t\t_.followers = [];\n\t\n\t\t\t_this.__retains = { all: 0 };\n\t\t\t_this.__locks = { all: 1 };\n\t\n\t\t\t// todo\n\t\t\t_._boundedActions = _is2.default.array(boundedActions) ? { test: boundedActions.includes.bind(boundedActions) } : boundedActions;\n\t\n\t\t\t// register to the parent scope\n\t\t\tif (parent) {\n\t\t\t\tparent.retain(\"isMyParent\");\n\t\t\t\tif (!rootEmitter) {\n\t\t\t\t\t!parent._stable && _this.wait(\"waitingParent\");\n\t\t\t\t\tparent.on(_._parentList = {\n\t\t\t\t\t\t'stable': function stable(s) {\n\t\t\t\t\t\t\treturn _this.release(\"waitingParent\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'unstable': function unstable(s) {\n\t\t\t\t\t\t\treturn _this.wait(\"waitingParent\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'update': function update(s) {\n\t\t\t\t\t\t\treturn _this._propag();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tparent.on(_._parentList = {\n\t\t\t\t\t\t'update': function update(s) {\n\t\t\t\t\t\t\treturn _this._propag();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// this.register(parent.__scope, state, data);\n\t\t\t}\n\t\n\t\t\t// register this scope stores\n\t\t\t_this.register(storesMap, state, data);\n\t\t\t_this.__locks.all--;\n\t\t\t_this._stable = !_this.__locks.all;\n\t\n\t\t\tif (parent) {\n\t\t\t\tparent._addChild(_this);\n\t\t\t}\n\t\n\t\t\t// restore snapshots\n\t\t\t_this.restore(snapshot);\n\t\n\t\t\tif (autoDestroy) setTimeout(function (tm) {\n\t\t\t\t_this.retain(\"autoDestroy\");\n\t\t\t\t_this.dispose(\"autoDestroy\");\n\t\t\t});\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t/**\n\t  *\n\t  * Mount the stores in storesList, in this scope or in its parents or mixed scopes\n\t  *\n\t  * @param storeIdList {string|storeRef} Store name, Array of Store names, or Rescope\n\t  *     store ref from Store::as or Store:as\n\t  * @param state\n\t  * @param data\n\t  * @returns {Scope}\n\t  */\n\t\n\t\n\t\t_createClass(Scope, [{\n\t\t\tkey: \"mount\",\n\t\t\tvalue: function mount(storeIdList, snapshot, state, data) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (_is2.default.array(storeIdList)) {\n\t\t\t\t\tstoreIdList.forEach(function (storeId) {\n\t\t\t\t\t\treturn _this2._mount(storeId, snapshot, state, data);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._mount.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"_mount\",\n\t\t\tvalue: function _mount(id, snapshot, state, data) {\n\t\t\t\tvar ref = void 0,\n\t\t\t\t    _ = this._;\n\t\n\t\t\t\tref = this.parseRef(id);\n\t\n\t\t\t\tif (id == \"$parent\") return;\n\t\t\t\tif (!_._scope[ref.storeId]) {\n\t\t\t\t\tvar _parent;\n\t\n\t\t\t\t\t//ask mixed || parent\n\t\t\t\t\tif (_._mixed.reduceRight(function (mounted, ctx) {\n\t\t\t\t\t\treturn mounted || ctx._mount(id, snapshot, state, data);\n\t\t\t\t\t}, false) || !this.parent) return;\n\t\t\t\t\treturn (_parent = this.parent)._mount.apply(_parent, arguments);\n\t\t\t\t} else {\n\t\t\t\t\tvar store = _._scope[ref.storeId],\n\t\t\t\t\t    taskQueue = [];\n\t\t\t\t\tif (Scope.isStoreClass(store)) {\n\t\t\t\t\t\t_._scope[ref.storeId] = new store(this, {\n\t\t\t\t\t\t\t//snapshot,\n\t\t\t\t\t\t\tname: ref.storeId,\n\t\t\t\t\t\t\tstate: state,\n\t\t\t\t\t\t\tdata: data\n\t\t\t\t\t\t}, taskQueue);\n\t\t\t\t\t\twhile (taskQueue.length) {\n\t\t\t\t\t\t\ttaskQueue.shift()();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Scope.isScopeClass(store)) {\n\t\t\t\t\t\tstore = _._scope[ref.storeId] = new store({ $parent: this }, {\n\t\t\t\t\t\t\tkey: ref.storeId,\n\t\t\t\t\t\t\tincrementId: true,\n\t\t\t\t\t\t\tupperScope: this\n\t\t\t\t\t\t\t//autoDestroy: true\n\t\t\t\t\t\t\t//parent: this\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//_._scope[ ref.storeId ].retain(\"scopedChildScope\");\n\t\t\t\t\t\t//_watchStore(ref.storeId);\n\t\t\t\t\t\tif (ref.path.length > 1) _._scope[ref.storeId].mount(ref.path.slice(1).join('.'), snapshot, state, data);\n\t\t\t\t\t\t//else return _._scope[ ref.storeId ];\n\t\t\t\t\t}\n\t\t\t\t\tif (Scope.isStore(store)) {\n\t\t\t\t\t\tif (state !== undefined && data === undefined) store.setState(state);else if (state !== undefined) store.state = state;\n\t\n\t\t\t\t\t\tif (data !== undefined) store.push(data);\n\t\t\t\t\t}\n\t\t\t\t\tthis._watchStore(ref.storeId);\n\t\t\t\t}\n\t\n\t\t\t\treturn _._scope[ref.storeId];\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Register stores in storesMap & link them in the protos\n\t   * @param storesMap\n\t   * @param state\n\t   * @param data\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"register\",\n\t\t\tvalue: function register(storesMap) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tvar state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\t\tvar data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t\t\t\tthis.relink(storesMap, this, false, false);\n\t\t\t\tObject.keys(storesMap).forEach(function (id) {\n\t\t\t\t\tif (id == \"$parent\") return;\n\t\t\t\t\tif (storesMap[id].singleton || _is2.default.fn(storesMap[id]) && (state[id] || data[id])) {\n\t\t\t\t\t\t_this3._mount(id, undefined, state[id], data[id]);\n\t\t\t\t\t} else if (state[id] || data[id]) {\n\t\t\t\t\t\tif (data[id]) {\n\t\t\t\t\t\t\tif (state[id]) _this3.stores[id].state = state[id];\n\t\t\t\t\t\t\t_this3.stores[id].push(data[id]);\n\t\t\t\t\t\t} else if (state[id]) {\n\t\t\t\t\t\t\t_this3.stores[id].setState(state[id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this3._watchStore(id);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Map srcCtx store's on targetCtx headers proto's\n\t   * @param srcCtx\n\t   * @param targetCtx\n\t   * @param state\n\t   * @param data\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"relink\",\n\t\t\tvalue: function relink(srcCtx) {\n\t\t\t\tvar targetCtx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\t\n\t\t\t\tvar _this4 = this;\n\t\n\t\t\t\tvar external = arguments[2];\n\t\t\t\tvar force = arguments[3];\n\t\n\t\t\t\tvar _ = this._;\n\t\t\t\tObject.keys(srcCtx).forEach(function (id) {\n\t\t\t\t\tvar hotReloading = void 0;\n\t\n\t\t\t\t\t// same store def : ignore\n\t\t\t\t\tif (!force && targetCtx._._scope[id] === srcCtx[id] || targetCtx._._scope[id] && targetCtx._._scope[id].constructor === srcCtx[id]) return;\n\t\n\t\t\t\t\t// hot switch\n\t\t\t\t\tif (!force && targetCtx._._scope[id]) {\n\t\n\t\t\t\t\t\tif (!external && !_is2.default.fn(targetCtx._._scope[id])) {\n\t\t\t\t\t\t\tconsole.info(\"Rescope Store : \", id, \" already exist in this scope ! ( Hot switching the store ) !!!\");\n\t\t\t\t\t\t\tvar tmp = targetCtx._._scope[id];\n\t\t\t\t\t\t\ttargetCtx._._scope[id] = srcCtx[id];\n\t\t\t\t\t\t\thotReloading = tmp.nextState;\n\t\t\t\t\t\t\ttmp.destroy();\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (!external && _is2.default.fn(targetCtx._._scope[id])) targetCtx._._scope[id] = srcCtx[id];\n\t\t\t\t\t} else if (!force && !external) _._scope[id] = srcCtx[id];\n\t\n\t\t\t\t\t// map the store id\n\t\t\t\t\tObject.defineProperty(targetCtx._.stores.prototype, id, {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tget: function get() {\n\t\t\t\t\t\t\treturn _._scope[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// not mapping hierarchic scopes\n\t\t\t\t\tif (id === \"$parent\") return;\n\t\n\t\t\t\t\t// map state & data\n\t\t\t\t\tObject.defineProperty(targetCtx._.state.prototype, id, {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tget: function get() {\n\t\t\t\t\t\t\treturn _._scope[id] && _._scope[id].state;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: function set(v) {\n\t\t\t\t\t\t\treturn _this4._mount(id, undefined, v);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tObject.defineProperty(targetCtx._.data.prototype, id, {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tget: function get() {\n\t\t\t\t\t\t\treturn _._scope[id] && _._scope[id].data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: function set(v) {\n\t\t\t\t\t\t\treturn _this4._mount(id, undefined, undefined, v);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// action mapping\n\t\t\t\t\tvar actions = srcCtx[id] instanceof Scope.Store ? srcCtx[id].constructor.actions : srcCtx[id].actions,\n\t\t\t\t\t    activeActions = targetCtx._.actions.prototype;\n\t\t\t\t\tif (Scope.isScope(_._scope[id].prototype)) _this4._mount(id);\n\t\t\t\t\tif (Scope.isScope(_._scope[id])) {\n\t\t\t\t\t\tactiveActions[id] = _._scope[id].actions;\n\t\t\t\t\t}\n\t\t\t\t\tif (!Scope.isStore(_._scope[id]) && !Scope.isStoreClass(_._scope[id])) return;\n\t\n\t\t\t\t\tactions && Object.keys(actions).forEach(function (act) {\n\t\t\t\t\t\tif (activeActions.hasOwnProperty(act)) activeActions[act].__targetStores++;else {\n\t\t\t\t\t\t\tactiveActions[act] = _this4.dispatch.bind(_this4, act);\n\t\t\t\t\t\t\tactiveActions[act].__targetStores = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// remount the store if it was hot reloaded\n\t\t\t\t\tif (hotReloading) _this4._mount(id, null, hotReloading);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Make this scope watching the local store 'id'\n\t   * @param id\n\t   * @returns {boolean}\n\t   * @private\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"_watchStore\",\n\t\t\tvalue: function _watchStore(id) {\n\t\t\t\tvar _this5 = this;\n\t\n\t\t\t\tvar _ = this._;\n\t\t\t\tif (!_._listening[id] && !_is2.default.fn(_._scope[id])) {\n\t\t\t\t\t!_._scope[id]._autoDestroy && _._scope[id].retain(\"scoped\");\n\t\t\t\t\t!_._scope[id].isStable() && this.wait(id);\n\t\t\t\t\t_._scope[id].on(_._listening[id] = {\n\t\t\t\t\t\t'destroy': function destroy(s) {\n\t\t\t\t\t\t\tdelete _._listening[id];\n\t\t\t\t\t\t\t_._scope[id] = _._scope[id].constructor;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'update': function update(s) {\n\t\t\t\t\t\t\treturn _this5.propag();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'stable': function stable(s) {\n\t\t\t\t\t\t\treturn _this5.release(id);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'unstable': function unstable(s) {\n\t\t\t\t\t\t\treturn _this5.wait(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Mix targetCtx on this scope\n\t   * Mixed scope parents are NOT mapped\n\t   * @param targetCtx\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"mixin\",\n\t\t\tvalue: function mixin(targetCtx) {\n\t\t\t\tvar _this6 = this;\n\t\n\t\t\t\tvar parent = this.parent,\n\t\t\t\t    lists = void 0,\n\t\t\t\t    _ = this._;\n\t\n\t\t\t\t_._mixed.push(targetCtx);\n\t\n\t\t\t\ttargetCtx.retain(\"mixedTo\");\n\t\n\t\t\t\tif (!targetCtx._stable) this.wait(targetCtx._id);\n\t\n\t\t\t\t_._mixedList.push(lists = {\n\t\t\t\t\t'stable': function stable(s) {\n\t\t\t\t\t\treturn _this6.release(targetCtx._id);\n\t\t\t\t\t},\n\t\t\t\t\t'unstable': function unstable(s) {\n\t\t\t\t\t\treturn _this6.wait(targetCtx._id);\n\t\t\t\t\t},\n\t\t\t\t\t'update': function update(s) {\n\t\t\t\t\t\treturn _this6._propag();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\ttargetCtx.on(lists);\n\t\n\t\t\t\t// reset protos\n\t\t\t\t// push new proto with parent\n\t\t\t\t__proto__push(this, 'actions', parent);\n\t\t\t\t__proto__push(this, 'stores', parent);\n\t\t\t\t__proto__push(this, 'state', parent);\n\t\t\t\t__proto__push(this, 'data', parent);\n\t\n\t\t\t\t// bind local accessors in the new proto\n\t\t\t\tthis.relink(_._scope, this, false, true);\n\t\n\t\t\t\t_._mixed.forEach(function (ctx) {\n\t\t\t\t\t// push protos\n\t\t\t\t\t__proto__push(_this6, 'actions');\n\t\t\t\t\t__proto__push(_this6, 'stores');\n\t\t\t\t\t__proto__push(_this6, 'state');\n\t\t\t\t\t__proto__push(_this6, 'data');\n\t\t\t\t\t_this6.stores.__origin = \"mixed \" + ctx._id;\n\t\t\t\t\t// write mixed accessors\n\t\t\t\t\tctx.relink(ctx._._scope, _this6, true, true);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Bind stores from this scope, his parents or mixed scopes to obj\n\t   *\n\t   * @param target {React.Component|Store|function}\n\t   * @param key {string} stores keys to bind updates\n\t   * @param as\n\t   * @param setInitial {boolean} false to not propag initial value (default : true)\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"bind\",\n\t\t\tvalue: function bind(target, key, as) {\n\t\t\t\tvar _this7 = this;\n\t\n\t\t\t\tvar setInitial = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\t\t\t\tvar revMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t\t\t\tvar lastRevs = void 0,\n\t\t\t\t    data = void 0,\n\t\t\t\t    refKeys = void 0;\n\t\t\t\tif (key && !_is2.default.array(key)) key = [key];\n\t\n\t\t\t\tif (as === false || as === true) {\n\t\t\t\t\tsetInitial = as;\n\t\t\t\t\tas = null;\n\t\t\t\t}\n\t\n\t\t\t\trefKeys = key.map(function (id) {\n\t\t\t\t\treturn _is2.default.string(id) ? id : id.name;\n\t\t\t\t}).map(function (id) {\n\t\t\t\t\treturn _this7.parseRef(id);\n\t\t\t\t});\n\t\n\t\t\t\tthis._.followers.push([target, key, as || undefined, lastRevs = refKeys.reduce(function (revs, ref) {\n\t\t\t\t\trevs[ref.storeId] = revs[ref.storeId] || {\n\t\t\t\t\t\trev: 0,\n\t\t\t\t\t\trefs: []\n\t\t\t\t\t};\n\t\t\t\t\trevs[ref.storeId].refs.push(ref);\n\t\t\t\t\treturn revs;\n\t\t\t\t}, revMap)]);\n\t\n\t\t\t\tthis.mount(key);\n\t\t\t\tthis.retainStores(Object.keys(lastRevs), 'listeners');\n\t\n\t\t\t\tif (setInitial && this._stable) {\n\t\t\t\t\tdata = this.getUpdates(lastRevs);\n\t\t\t\t\tif (!data) return this;\n\t\t\t\t\tif (typeof target != \"function\") {\n\t\t\t\t\t\tif (as) target.setState(_defineProperty({}, as, data));else target.setState(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Un bind this scope off the given component-keys\n\t   * @param target\n\t   * @param key\n\t   * @returns {Array.<*>}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"unBind\",\n\t\t\tvalue: function unBind(target, key, as) {\n\t\t\t\tvar followers = this._.followers,\n\t\t\t\t    i = followers && followers.length;\n\t\t\t\twhile (followers && i--) {\n\t\t\t\t\tif (followers[i][0] === target && '' + followers[i][1] == '' + key && followers[i][2] == as) {\n\t\t\t\t\t\tthis.disposeStores(Object.keys(followers[i][3]), 'listeners');\n\t\t\t\t\t\treturn followers.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Mount the stores in storeIdList from this scope, its parents and mixed scope\n\t   * Bind them to 'to'\n\t   * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n\t   * @param target\n\t   * @param storeIdList\n\t   * @param bind\n\t   * @returns {Object} Initial outputs of the stores in 'storesList'\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"map\",\n\t\t\tvalue: function map(target, storeIdList) {\n\t\t\t\tvar _this8 = this;\n\t\n\t\t\t\tvar bind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\t\t\tvar revMap = arguments[3];\n\t\n\t\t\t\tvar Store = this.constructor.Store;\n\t\t\t\tstoreIdList = _is2.default.array(storeIdList) ? storeIdList : [storeIdList];\n\t\t\t\tvar refList = storeIdList.map(this.parseRef);\n\t\t\t\tthis.mount(storeIdList);\n\t\t\t\tif (bind && target instanceof Store) {\n\t\t\t\t\tStore.map(target, storeIdList, this, this, false);\n\t\t\t\t} else if (bind) {\n\t\t\t\t\tthis.bind(target, storeIdList, undefined, false);\n\t\n\t\t\t\t\tvar mixedCWUnmount = void 0,\n\t\t\t\t\t    unMountKey = target.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n\t\n\t\t\t\t\tif (target.hasOwnProperty(unMountKey)) {\n\t\t\t\t\t\tmixedCWUnmount = target[unMountKey];\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttarget[unMountKey] = function () {\n\t\t\t\t\t\tdelete target[unMountKey];\n\t\t\t\t\t\tif (mixedCWUnmount) target[unMountKey] = mixedCWUnmount;\n\t\n\t\t\t\t\t\t_this8.unBind(target, storeIdList);\n\t\t\t\t\t\treturn target[unMountKey] && target[unMountKey].apply(target, arguments);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn revMap && this.getUpdates(revMap) || refList.reduce(function (data, ref) {\n\t\t\t\t\t(0, _utils.walknSet)(data, ref.alias || ref.path, _this8.retrieve(ref.path));\n\t\t\t\t\treturn data;\n\t\t\t\t}, {});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Get current data value from json path\n\t   * @param path\n\t   * @returns {string|*}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"retrieve\",\n\t\t\tvalue: function retrieve() {\n\t\t\t\tvar path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t\t\t\tpath = _is2.default.string(path) ? path.split('.') : path;\n\t\n\t\t\t\treturn path && this.stores[path[0]] && this.stores[path[0]].retrieve && this.stores[path[0]].retrieve(path.slice(1));\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Restore all nodes in a jsonPath\n\t   * @param path\n\t   * @returns {string|*}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"restoreRefPath\",\n\t\t\tvalue: function restoreRefPath() {\n\t\t\t\tvar path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t\t\t\tpath = _is2.default.string(path) ? path.split('.') : path;\n\t\n\t\t\t\tvar obj = void 0,\n\t\t\t\t    i = 0,\n\t\t\t\t    cScope = this;\n\t\n\t\t\t\twhile (i < path.length) {\n\t\t\t\t\tobj = cScope.stores[path[i]];\n\t\t\t\t\tif (Scope.isScopeClass(obj) || Scope.isStoreClass(obj)) {\n\t\t\t\t\t\tcScope.mount(path[0]);\n\t\t\t\t\t\tobj = cScope.stores[path[i]];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (Scope.isScope(obj)) {\n\t\t\t\t\t\tcScope = obj;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else if (Scope.isStore(obj)) {\n\t\t\t\t\t\tobj.restore();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Get target store from json path\n\t   * @param path\n\t   * @returns {string|*}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"retrieveStore\",\n\t\t\tvalue: function retrieveStore() {\n\t\t\t\tvar path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t\t\t\tpath = _is2.default.string(path) ? path.split('.') : path;\n\t\t\t\treturn path && path.length && (path.length != 1 && this.stores[path[0]].retrieveStore ? this.stores[path[0]].retrieveStore(path.slice(1)) : path.length == 1 && this.stores[path[0]]);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Get or update stores revisions in 'storesRevMap'\n\t   * @param storesRevMap\n\t   * @param local\n\t   * @returns {{}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"getStoresRevs\",\n\t\t\tvalue: function getStoresRevs() {\n\t\t\t\tvar storesRevMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\t\t\tvar local = arguments[1];\n\t\n\t\t\t\tvar ctx = this._._scope;\n\t\t\t\tif (!storesRevMap) {\n\t\t\t\t\tstoresRevMap = {};\n\t\t\t\t}\n\t\t\t\tObject.keys(ctx).forEach(function (id) {\n\t\t\t\t\tif (id == \"$parent\") return;\n\t\t\t\t\tif (!_is2.default.fn(ctx[id])) {\n\t\t\t\t\t\tstoresRevMap[id] = ctx[id]._rev;\n\t\t\t\t\t} else if (!storesRevMap.hasOwnProperty(id)) storesRevMap[id] = false;\n\t\t\t\t});\n\t\t\t\tif (!local) {\n\t\t\t\t\tthis._._mixed.reduce(function (updated, ctx) {\n\t\t\t\t\t\treturn ctx.getStoresRevs(storesRevMap), storesRevMap;\n\t\t\t\t\t}, storesRevMap);\n\t\t\t\t\tthis.parent && this.parent.getStoresRevs(storesRevMap);\n\t\t\t\t}\n\t\t\t\treturn storesRevMap;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Recursively get all stores revs\n\t   * @param childs\n\t   * @returns {Array}\n\t   * @private\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"_getRevMap\",\n\t\t\tvalue: function _getRevMap() {\n\t\t\t\tvar storesRevMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t\t\t\tvar ctx = this._._scope;\n\t\t\t\tObject.keys(ctx).forEach(function (id) {\n\t\t\t\t\tif (id == \"$parent\" || storesRevMap[id]) return;\n\t\t\t\t\tstoresRevMap[id] = { rev: ctx[id]._rev, refs: [] };\n\t\t\t\t});\n\t\t\t\tthis._._mixed.reduceRight(function (storesRevMap, ctx) {\n\t\t\t\t\treturn ctx._getRevMap(storesRevMap);\n\t\t\t\t}, storesRevMap);\n\t\t\t\tthis.parent && this.parent._getRevMap(storesRevMap);\n\t\t\t\treturn storesRevMap;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Get updated output basing storesRevMap's revisions.\n\t   * If a store in 'storesRevMap' was updated; add it to 'output' & update storesRevMap\n\t   * @param storesRevMap\n\t   * @param output\n\t   * @param updated\n\t   * @returns {*|{}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"getRefsUpdates\",\n\t\t\tvalue: function getRefsUpdates(refs, revMap, output) {\n\t\t\t\tvar _this9 = this;\n\t\n\t\t\t\trevMap = revMap || refs.map(function (id) {\n\t\t\t\t\treturn _is2.default.string(id) ? id : id.name;\n\t\t\t\t}).map(function (id) {\n\t\t\t\t\treturn _this9.parseRef(id);\n\t\t\t\t}).reduce(function (revs, ref) {\n\t\t\t\t\trevs[ref.storeId] = revs[ref.storeId] || {\n\t\t\t\t\t\trev: 0,\n\t\t\t\t\t\trefs: []\n\t\t\t\t\t};\n\t\t\t\t\trevs[ref.storeId].refs.push(ref);\n\t\t\t\t\treturn revs;\n\t\t\t\t}, {});\n\t\n\t\t\t\treturn this.getUpdates(revMap, output);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Get or update output basing storesRevMap's revisions.\n\t   * If a store in 'storesRevMap' was updated; add it to 'output' & update storesRevMap\n\t   * @param storesRevMap\n\t   * @param output\n\t   * @param updated\n\t   * @returns {*|{}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"getUpdates\",\n\t\t\tvalue: function getUpdates(storesRevMap, output, updated) {\n\t\t\t\tvar _this10 = this;\n\t\n\t\t\t\toutput = output || {};\n\t\t\t\tstoresRevMap = storesRevMap || this._getRevMap();\n\t\t\t\tObject.keys(storesRevMap).forEach(function (id) {\n\t\t\t\t\tvar store = _this10.stores[id];\n\t\t\t\t\tstoresRevMap[id] = storesRevMap[id] || { rev: 0, refs: [] };\n\t\n\t\t\t\t\tif (store && _is2.default.fn(store)) {\n\t\t\t\t\t\tupdated = true;\n\t\t\t\t\t\toutput[id] = undefined;\n\t\t\t\t\t} else if (store && store._rev > storesRevMap[id].rev) {\n\t\t\t\t\t\tstoresRevMap[id].rev = store._rev;\n\t\t\t\t\t\tupdated = true;\n\t\t\t\t\t\tstoresRevMap[id].refs.forEach(function (ref) {\n\t\n\t\t\t\t\t\t\toutput[ref.alias] = _this10.retrieve(ref.path);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn updated && output;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Recursively get all child scopes\n\t   * @param childs\n\t   * @returns {Array}\n\t   * @private\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"_getAllChilds\",\n\t\t\tvalue: function _getAllChilds() {\n\t\t\t\tvar childs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t\t\t\tchilds.push.apply(childs, _toConsumableArray(this._.childScopes));\n\t\t\t\tthis._.childScopes.forEach(function (ctx) {\n\t\t\t\t\tctx._getAllChilds(childs);\n\t\t\t\t});\n\t\t\t\treturn childs;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Serialize all active stores state & data in every childs & mixed scopes\n\t   *\n\t   * Scopes without key or id are ignored\n\t   * @param output\n\t   * @returns {{}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"serialize\",\n\t\t\tvalue: function serialize() {\n\t\t\t\tvar cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\t\t\tvar output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\t\tvar ctx = this._._scope,\n\t\t\t\t    _ref3 = this._,\n\t\t\t\t    baseId = _ref3.baseId,\n\t\t\t\t    key = _ref3.key,\n\t\t\t\t    keyPID = _ref3.keyPID,\n\t\t\t\t    incrementId = _ref3.incrementId,\n\t\t\t\t    alias = cfg.alias,\n\t\t\t\t    parentAlias = cfg.parentAlias,\n\t\t\t\t    sid = key ? (parentAlias || keyPID) + '>' + key : alias || parentAlias && parentAlias + '/' + baseId || this._id;\n\t\n\t\t\t\t//alias = alias || baseId;\n\t\t\t\treturn this.serialize_ex(cfg, output, sid, alias, [\"$parent\"]);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"serialize_ex\",\n\t\t\tvalue: function serialize_ex() {\n\t\t\t\tvar cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\t\t\tvar output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\t\tvar sid = arguments[2];\n\t\n\t\t\t\tvar _this11 = this;\n\t\n\t\t\t\tvar alias = arguments[3];\n\t\t\t\tvar exclude = arguments[4];\n\t\t\t\tvar _ = this._,\n\t\t\t\t    ctx = _._scope,\n\t\t\t\t    incrementId = _.incrementId,\n\t\t\t\t    _cfg$withChilds = cfg.withChilds,\n\t\t\t\t    withChilds = _cfg$withChilds === undefined ? true : _cfg$withChilds,\n\t\t\t\t    _cfg$withMixed = cfg.withMixed,\n\t\t\t\t    withMixed = _cfg$withMixed === undefined ? true : _cfg$withMixed,\n\t\t\t\t    norefs = cfg.norefs;\n\t\n\t\n\t\t\t\tif ((0, _utils.keyWalknGet)(output, sid)) {\n\t\t\t\t\tif (!incrementId) // done\n\t\t\t\t\t\treturn output;else if (incrementId) {\n\t\t\t\t\t\t// generate key id\n\t\t\t\t\t\tvar i = -1;\n\t\t\t\t\t\twhile ((0, _utils.keyWalknGet)(output, sid + '[' + ++i + ']')) {}\n\t\t\t\t\t\tsid = sid + '[' + i + ']';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t(0, _utils.keyWalknSet)(output, sid, {});\n\t\n\t\t\t\tObject.keys(ctx).forEach(function (id) {\n\t\t\t\t\tif (exclude.includes(id) || Scope.isStoreClass(ctx[id]) || Scope.isScopeClass(ctx[id])) return;\n\t\n\t\t\t\t\tctx[id].serialize(_extends({}, cfg, { parentAlias: sid }), output);\n\t\t\t\t});\n\t\n\t\t\t\twithChilds && _.childScopes.forEach(function (ctx) {\n\t\t\t\t\t!ctx._.isLocalId && ctx.serialize({\n\t\t\t\t\t\twithChild: true,\n\t\t\t\t\t\twithParents: false,\n\t\t\t\t\t\tparentAlias: sid,\n\t\t\t\t\t\twithMixed: withMixed,\n\t\t\t\t\t\tnorefs: norefs\n\t\t\t\t\t}, output);\n\t\t\t\t});\n\t\n\t\t\t\twithMixed && _._mixed.forEach(function (ctx) {\n\t\t\t\t\t!ctx._.isLocalId && ctx.serialize({\n\t\t\t\t\t\twithChild: false,\n\t\t\t\t\t\twithParents: false,\n\t\t\t\t\t\twithMixed: withMixed,\n\t\t\t\t\t\tnorefs: norefs\n\t\t\t\t\t}, output);\n\t\t\t\t});\n\t\n\t\t\t\tif (alias) {\n\t\t\t\t\toutput = Object.keys(output).reduce(function (h, k) {\n\t\t\t\t\t\treturn h[k === _this11._id ? alias : k] = output[k], h;\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\t\t\t\treturn output;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Restore state & data from the serialize fn\n\t   * @param snapshot\n\t   * @param force\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"restore\",\n\t\t\tvalue: function restore(snapshot) {\n\t\t\t\tvar _this12 = this;\n\t\n\t\t\t\tvar cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\t\tvar force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _is2.default.bool(cfg) && cfg;\n\t\n\t\t\t\tvar ctx = this._._scope,\n\t\t\t\t    snap = void 0;\n\t\n\t\t\t\tif (snapshot && cfg && cfg.alias && cfg.alias != this._id) {\n\t\t\t\t\tsnap = _extends({}, snapshot, _defineProperty({}, this._id, snapshot[cfg.alias]));\n\t\t\t\t\tdelete snap[cfg.alias];\n\t\t\t\t\tsnapshot = snap;\n\t\t\t\t}\n\t\t\t\tsnapshot = snapshot && (0, _utils.keyWalknGet)(snapshot, this._id) || this.takeSnapshotByKey(this._id);\n\t\n\t\t\t\tif (!snapshot) return;\n\t\n\t\t\t\tthis._.snapshot = _extends({}, snapshot);\n\t\n\t\t\t\tsnap = snapshot['/'];\n\t\t\t\tsnapshot['/'] = _extends({}, snap);\n\t\t\t\tsnap && Object.keys(snap).forEach(function (name) {\n\t\t\t\t\tif (name == \"$parent\") return;\n\t\n\t\t\t\t\tif (ctx[name]) {\n\t\n\t\t\t\t\t\tif (force && !_is2.default.fn(ctx[name])) ctx[name].destroy();\n\t\n\t\t\t\t\t\t_this12._mount(name); // quiet\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tthis._._mixed.forEach(function (ctx) {\n\t\t\t\t\t!ctx._.isLocalId && ctx.restore(undefined, force);\n\t\t\t\t});\n\t\n\t\t\t\tthis._.childScopes.forEach(function (ctx) {\n\t\t\t\t\t!ctx._.isLocalId && ctx.restore(undefined, force);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"getSnapshotByKey\",\n\t\t\tvalue: function getSnapshotByKey(key, local) {\n\t\t\t\t// only have the local snap\n\t\t\t\tif (this._.snapshot && key.startsWith(this._id)) {\n\t\t\t\t\tvar obj = (0, _utils.keyWalknGet)(this._.snapshot, key.substr(this._id.length));\n\t\t\t\t\treturn obj;\n\t\t\t\t} else return !local && this.parent && this.parent.getSnapshotByKey(key) || this.stores.$parent && this.stores.$parent.getSnapshotByKey(key);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"getSnapshotByKeyExt\",\n\t\t\tvalue: function getSnapshotByKeyExt(snapshot, key, local) {\n\t\t\t\t// only have the local snap\n\t\t\t\tif (snapshot) {\n\t\t\t\t\tvar obj = (0, _utils.keyWalknGet)(snapshot, key);\n\t\t\t\t\treturn obj;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"takeSnapshotByKey\",\n\t\t\tvalue: function takeSnapshotByKey(key, local) {\n\t\t\t\tif (this._.snapshot && key.startsWith(this._id)) {\n\t\t\t\t\tvar obj = (0, _utils.keyWalknGet)(this._.snapshot, key.substr(this._id.length));\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.deleteSnapshotByKey(key, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn obj;\n\t\t\t\t} else return !local && this.parent && this.parent.takeSnapshotByKey(key) || this.stores.$parent && this.stores.$parent.takeSnapshotByKey(key);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"deleteSnapshotByKey\",\n\t\t\tvalue: function deleteSnapshotByKey(key, local) {\n\t\t\t\tif (this._.snapshot && key.startsWith(this._id)) {\n\t\t\t\t\tvar obj = (0, _utils.keyWalknGet)(this._.snapshot, key.substr(this._id.length).replace(/^(.*[\\>|\\/])[^\\>|\\/]+$/ig, '$1'));\n\t\t\t\t\tif (obj) delete obj[key.replace(/^.*[\\>|\\/]([^\\>|\\/]+)$/ig, '$1')];\n\t\t\t\t}\n\t\t\t\treturn !local && this.parent && this.parent.deleteSnapshotByKey(key) || this.stores.$parent && this.stores.$parent.deleteSnapshotByKey(key);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"setState\",\n\t\t\tvalue: function setState(pState) {\n\t\t\t\tvar _this13 = this;\n\t\n\t\t\t\tObject.keys(pState).forEach(function (k) {\n\t\t\t\t\treturn _this13.state[k] = pState[k];\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * get a parsed reference\n\t   * @param _ref\n\t   * @returns {{storeId, path, alias: *, ref: *}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"parseRef\",\n\t\t\tvalue: function parseRef(_ref) {\n\t\t\t\tif (typeof _ref !== 'string') {\n\t\t\t\t\t// @todo : rm this\n\t\t\t\t\tthis.register(_defineProperty({}, _ref.name, _ref.store));\n\t\t\t\t\t_ref = _ref.name;\n\t\t\t\t}\n\t\t\t\tvar ref = _ref.split(':');\n\t\t\t\tref[0] = ref[0].split('.');\n\t\t\t\treturn {\n\t\t\t\t\tstoreId: ref[0][0],\n\t\t\t\t\tpath: ref[0],\n\t\t\t\t\talias: ref[1] || ref[0][ref[0].length - 1],\n\t\t\t\t\tref: _ref\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Dispatch an action to the top parent & mixed scopes, in all stores\n\t   *\n\t   * @param action\n\t   * @param data\n\t   * @returns {Scope}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"dispatch\",\n\t\t\tvalue: function dispatch(action) {\n\t\t\t\tvar _this14 = this,\n\t\t\t\t    _parent2;\n\t\n\t\t\t\tfor (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\t\targz[_key - 1] = arguments[_key];\n\t\t\t\t}\n\t\n\t\t\t\tif (this.dead) {\n\t\t\t\t\tconsole.warn(\"Dispatch was called on a dead scope, check you're async functions in this stack...\", new Error().stack);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar bActs = this._._boundedActions;\n\t\t\t\tObject.keys(this._._scope).forEach(function (id) {\n\t\t\t\t\tvar _$_scope$id;\n\t\n\t\t\t\t\tif (id == \"$parent\") return;\n\t\t\t\t\tif (!_is2.default.fn(_this14._._scope[id])) (_$_scope$id = _this14._._scope[id]).trigger.apply(_$_scope$id, [action].concat(argz));\n\t\t\t\t});\n\t\n\t\t\t\tif (bActs && bActs.test(action)) return this;\n\t\n\t\t\t\tthis._._mixed.forEach(function (ctx) {\n\t\t\t\t\treturn ctx.dispatch.apply(ctx, [action].concat(argz));\n\t\t\t\t});\n\t\t\t\tthis.parent && (_parent2 = this.parent).dispatch.apply(_parent2, [action].concat(argz));\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"trigger\",\n\t\t\tvalue: function trigger() {\n\t\t\t\tthis.dispatch.apply(this, arguments);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * once('stable', cb)\n\t   * @param obj {React.Component|Store|function)\n\t   * @param key {string} optional key where to map the public state\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"then\",\n\t\t\tvalue: function then(cb) {\n\t\t\t\tvar _this15 = this;\n\t\n\t\t\t\tif (!this._stable) return this.once('stable', function (e) {\n\t\t\t\t\treturn _this15.then(cb);\n\t\t\t\t});\n\t\n\t\t\t\treturn cb(this.data);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"onceStableTree\",\n\t\t\tvalue: function onceStableTree(cb) {\n\t\t\t\tvar _this16 = this;\n\t\n\t\t\t\tif (this._.unStableChilds) return this.once('stableTree', function (e) {\n\t\t\t\t\treturn _this16.onceStableTree(cb);\n\t\t\t\t});\n\t\t\t\treturn cb(this.data);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Call retain on the scoped stores basing the given list\n\t   *\n\t   * @param stores\n\t   * @param reason\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"retainStores\",\n\t\t\tvalue: function retainStores() {\n\t\t\t\tvar _this17 = this;\n\t\n\t\t\t\tvar stores = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\t\t\tvar reason = arguments[1];\n\t\n\t\t\t\tstores.forEach(function (id) {\n\t\t\t\t\treturn _this17.stores[id] && _this17.stores[id].retain && _this17.stores[id].retain(reason);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Call retain on the scoped stores\n\t   *\n\t   * @param stores\n\t   * @param reason\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"disposeStores\",\n\t\t\tvalue: function disposeStores() {\n\t\t\t\tvar _this18 = this;\n\t\n\t\t\t\tvar stores = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\t\t\tvar reason = arguments[1];\n\t\n\t\t\t\tstores.forEach(function (id) {\n\t\t\t\t\treturn _this18.stores[id] && _this18.stores[id].dispose && _this18.stores[id].dispose(reason);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Keep the scope unstable until release is called\n\t   * @param reason\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"wait\",\n\t\t\tvalue: function wait(reason) {\n\t\t\t\t//console.log(\"wait\", reason);\n\t\t\t\tthis._stable && !this.__locks.all && this.emit(\"unstable\", this);\n\t\t\t\tthis._stable = false;\n\t\t\t\tthis.__locks.all++;\n\t\t\t\tif (reason) {\n\t\t\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\t\t\tthis.__locks[reason]++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Stabilize the scope if no more locks remain (wait fn)\n\t   * @param reason\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"release\",\n\t\t\tvalue: function release(reason) {\n\t\t\t\tvar _this19 = this;\n\t\n\t\t\t\tif (reason) {\n\t\t\t\t\tif (this.__locks[reason] == 0) console.error(\"Release more than locking !\", reason);\n\t\t\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\t\t\tthis.__locks[reason]--;\n\t\t\t\t}\n\t\t\t\tif (!reason && this.__locks.all == 0) console.error(\"Release more than locking !\");\n\t\n\t\t\t\tthis.__locks.all--;\n\t\t\t\tif (!this.__locks.all) {\n\t\t\t\t\tif (this._.stabilizerTM) return;\n\t\t\t\t\tthis._.stabilizerTM && clearTimeout(this._.stabilizerTM);\n\t\n\t\t\t\t\tthis._.stabilizerTM = setTimeout(function (e) {\n\t\t\t\t\t\t_this19._.stabilizerTM = null;\n\t\t\t\t\t\tif (_this19.__locks.all) return;\n\t\n\t\t\t\t\t\t_this19._.propagTM && clearTimeout(_this19._.propagTM);\n\t\t\t\t\t\t_this19._rev++;\n\t\t\t\t\t\t_this19._stable = true;\n\t\t\t\t\t\t_this19.emit(\"stable\", _this19);\n\t\n\t\t\t\t\t\t!_this19.dead && _this19._propag(); // stability can induce destroy\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Propag stores updates basing theirs last updates\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"propag\",\n\t\t\tvalue: function propag() {\n\t\t\t\tvar _this20 = this;\n\t\n\t\t\t\tthis._.propagTM && clearTimeout(this._.propagTM);\n\t\t\t\tthis._.propagTM = setTimeout(function (e) {\n\t\t\t\t\t_this20._.propagTM = null;\n\t\t\t\t\t_this20._propag();\n\t\t\t\t}, 2);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"_propag\",\n\t\t\tvalue: function _propag() {\n\t\t\t\tvar _this21 = this;\n\t\n\t\t\t\tif (this._.followers.length) this._.followers.forEach(function (_ref4) {\n\t\t\t\t\tvar obj = _ref4[0],\n\t\t\t\t\t    key = _ref4[1],\n\t\t\t\t\t    as = _ref4[2],\n\t\t\t\t\t    lastRevs = _ref4[3],\n\t\t\t\t\t    remaps = _ref4[3];\n\t\n\t\t\t\t\tvar data = _this21.getUpdates(lastRevs);\n\t\t\t\t\tif (!data) return;\n\t\t\t\t\t//console.log(data, lastRevs)\n\t\t\t\t\tif (typeof obj != \"function\") {\n\t\t\t\t\t\t//console.log(\"setState \",obj, Object.keys(data))\n\t\t\t\t\t\tif (as) obj.setState(_defineProperty({}, as, data));else obj.setState(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj(data, lastRevs && [].concat(_toConsumableArray(lastRevs)) || \"no revs\");\n\t\t\t\t\t}\n\t\t\t\t\t// lastRevs &&\n\t\t\t\t\t// key.forEach(id => (lastRevs[id] = this.stores[id] &&\n\t\t\t\t\t// this.stores[id]._rev || 0));\n\t\t\t\t});\n\t\t\t\tthis.emit(\"update\", this.getUpdates());\n\t\t\t}\n\t\n\t\t\t/**\n\t   * is stable\n\t   * @returns bool\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"isStable\",\n\t\t\tvalue: function isStable() {\n\t\t\t\treturn this._stable;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * is stable tree\n\t   * @returns bool\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"isStableTree\",\n\t\t\tvalue: function isStableTree() {\n\t\t\t\treturn !this._.unStableChilds;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Register children\n\t   * @param scope\n\t   * @private\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"_addChild\",\n\t\t\tvalue: function _addChild(scope) {\n\t\t\t\tvar _this22 = this;\n\t\n\t\t\t\tthis._.childScopes.push(scope);\n\t\t\t\tthis._.seenChilds++;\n\t\t\t\tvar lists = {\n\t\t\t\t\t'stable': function stable(s) {\n\t\t\t\t\t\t_this22._.unStableChilds--;\n\t\t\t\t\t\tif (!_this22._.unStableChilds) _this22.emit(\"stableTree\", _this22);\n\t\t\t\t\t},\n\t\t\t\t\t'unstable': function unstable(s) {\n\t\t\t\t\t\t_this22._.unStableChilds++;\n\t\t\t\t\t\tif (1 == _this22._.unStableChilds) _this22.emit(\"unstableTree\", _this22);\n\t\t\t\t\t},\n\t\t\t\t\t'stableTree': function stableTree(s) {\n\t\t\t\t\t\t_this22._.unStableChilds--;\n\t\t\t\t\t\tif (!_this22._.unStableChilds) _this22.emit(\"stableTree\", _this22);\n\t\t\t\t\t},\n\t\t\t\t\t'unstableTree': function unstableTree(s) {\n\t\t\t\t\t\t_this22._.unStableChilds++;\n\t\t\t\t\t\tif (1 == _this22._.unStableChilds) _this22.emit(\"unstableTree\", _this22);\n\t\t\t\t\t},\n\t\t\t\t\t'destroy': function destroy(ctx) {\n\t\t\t\t\t\tif (ctx._.unStableChilds) _this22._.unStableChilds--;\n\t\t\t\t\t\tif (!ctx.isStable()) _this22._.unStableChilds--;\n\t\n\t\t\t\t\t\tif (!_this22._.unStableChilds) _this22.emit(\"stableTree\", _this22);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t    wasStable = this._.unStableChilds;\n\t\n\t\t\t\t!scope.isStable() && this._.unStableChilds++;\n\t\t\t\tscope._.unStableChilds && this._.unStableChilds++;\n\t\t\t\tthis._.childScopesList.push(lists);\n\t\n\t\t\t\tif (!wasStable && this._.unStableChilds) this.emit(\"unstableTree\", this);\n\t\n\t\t\t\tscope.on(lists);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"_rmChild\",\n\t\t\tvalue: function _rmChild(ctx) {\n\t\t\t\tvar i = this._.childScopes.indexOf(ctx),\n\t\t\t\t    wasStable = this._.unStableChilds;\n\t\t\t\tif (i != -1) {\n\t\t\t\t\tthis._.childScopes.splice(i, 1);\n\t\t\t\t\t!ctx.isStable() && this._.unStableChilds--;\n\t\t\t\t\tctx._.unStableChilds && this._.unStableChilds--;\n\t\t\t\t\tctx.un(this._.childScopesList.splice(i, 1)[0]);\n\t\t\t\t\tif (wasStable && !this._.unStableChilds) this.emit(\"stableTree\");\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"retain\",\n\t\t\tvalue: function retain(reason) {\n\t\t\t\tthis.__retains.all++;\n\t\t\t\t//console.log(\"retain\", this._id, reason);\n\t\t\t\tif (reason) {\n\t\t\t\t\tthis.__retains[reason] = this.__retains[reason] || 0;\n\t\t\t\t\tthis.__retains[reason]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"dispose\",\n\t\t\tvalue: function dispose(reason) {\n\t\t\t\tvar _this23 = this;\n\t\n\t\t\t\t//console.log(\"dispose\", this._id, reason);\n\t\t\t\tif (reason) {\n\t\t\t\t\tif (!this.__retains[reason]) throw new Error(\"Dispose more than retaining : \" + reason);\n\t\t\t\t\tthis.__retains[reason]--;\n\t\t\t\t}\n\t\n\t\t\t\tif (!this.__retains.all) throw new Error(\"Dispose more than retaining !\");\n\t\n\t\t\t\tthis.__retains.all--;\n\t\n\t\t\t\tif (!this.__retains.all) {\n\t\t\t\t\t//console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n\t\t\t\t\tif (this._.persistenceTm) {\n\t\t\t\t\t\tthis._.destroyTM && clearTimeout(this._.destroyTM);\n\t\t\t\t\t\tthis._.destroyTM = setTimeout(function (e) {\n\t\t\t\t\t\t\t_this23.then(function (s) {\n\t\t\t\t\t\t\t\t!_this23.__retains.all && !_this23.dead && _this23.destroy();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, this._.persistenceTm);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.then(function (s) {\n\t\t\t\t\t\t\treturn !_this23.__retains.all && !_this23.dead && _this23.destroy();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * order destroy of local stores\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"destroy\",\n\t\t\tvalue: function destroy() {\n\t\t\t\tvar _this24 = this;\n\t\n\t\t\t\tvar ctx = this._._scope;\n\t\t\t\t//console.warn(\"destroy\", this._id);\n\t\t\t\tthis._getAllChilds().map(function (scope) {\n\t\t\t\t\treturn scope.destroy();\n\t\t\t\t});\n\t\t\t\tfor (var key in ctx) {\n\t\t\t\t\tif (!_is2.default.fn(ctx[key])) {\n\t\t\t\t\t\tif (key == \"$parent\") continue;\n\t\t\t\t\t\t!ctx[key]._autoDestroy && ctx[key].dispose(\"scoped\");\n\t\t\t\t\t}\n\t\t\t\t}this._.stabilizerTM && clearTimeout(this._.stabilizerTM);\n\t\t\t\tthis._.propagTM && clearTimeout(this._.propagTM);\n\t\t\t\tObject.keys(this._._listening).forEach(function (id) {\n\t\t\t\t\treturn id !== \"$parent\" && _this24._._scope[id].removeListener(_this24._._listening[id]);\n\t\t\t\t});\n\t\t\t\twhile (this._._mixedList.length) {\n\t\t\t\t\tthis._._mixed[0].removeListener(this._._mixedList.shift());\n\t\t\t\t\tthis._._mixed.shift().dispose(\"mixedTo\");\n\t\t\t\t}\n\t\t\t\t[].concat(_toConsumableArray(this._.followers)).map(function (follower) {\n\t\t\t\t\treturn _this24.unBind.apply(_this24, _toConsumableArray(follower));\n\t\t\t\t});\n\t\t\t\tif (this._._parentList) {\n\t\t\t\t\tthis.parent._rmChild(this);\n\t\t\t\t\tthis.parent.removeListener(this._._parentList);\n\t\t\t\t\tthis.parent.dispose(\"isMyParent\");\n\t\t\t\t\tthis._._parentList = null;\n\t\t\t\t}\n\t\t\t\tthis.dead = true;\n\t\t\t\tdelete allScopes[this._id];\n\t\t\t\tthis.emit(\"destroy\", this);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Scope;\n\t}(_Emitter2.default), _class.persistenceTm = 1, _class.Store = null, _class.scopeRef = function scopeRef(path) {\n\t\tthis.path = path;\n\t}, _class.scopes = allScopes, _temp);\n\t\n\t\n\tScope.isScope = function (obj) {\n\t\treturn obj instanceof Scope;\n\t};\n\t\n\tScope.isScopeClass = function (obj) {\n\t\treturn Scope.isPrototypeOf(obj) || obj === Scope;\n\t};\n\texports.default = Scope;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\the MIT License (MIT)\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (c) 2019. Wise Wild Web\n\tn\termission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\tn\t“AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\tn\tauthor : Nathanael Braun\n\tcontact : n8tz.js@gmail.com\n\tn\t\n\tvar _is = __webpack_require__(1);\n\t\n\tvar _is2 = _interopRequireDefault(_is);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Emitter = function () {\n\t\tfunction Emitter() {\n\t\t\t_classCallCheck(this, Emitter);\n\t\n\t\t\tthis._events = {};\n\t\t}\n\t\n\t\t_createClass(Emitter, [{\n\t\t\tkey: 'on',\n\t\t\tvalue: function on(evt, cb) {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tif (!_is2.default.string(evt) && evt) return Object.keys(evt).forEach(function (k) {\n\t\t\t\t\treturn _this.on(k, evt[k]);\n\t\t\t\t});\n\t\n\t\t\t\tthis._events[evt] = this._events[evt] || [];\n\t\t\t\tthis._events[evt].push(cb);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'un',\n\t\t\tvalue: function un(evt, cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (!_is2.default.string(evt) && evt) return Object.keys(evt).forEach(function (k) {\n\t\t\t\t\treturn _this2.un(k, evt[k]);\n\t\t\t\t});\n\t\n\t\t\t\tif (!this._events[evt]) return;\n\t\t\t\tvar i = this._events[evt].indexOf(cb);\n\t\t\t\tthis._events[evt].splice(i, 1);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'emit',\n\t\t\tvalue: function emit(evt) {\n\t\t\t\tif (!this._events[evt]) return;\n\t\t\t\tvar lists = [].concat(_toConsumableArray(this._events[evt]));\n\t\n\t\t\t\tfor (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\t\targz[_key - 1] = arguments[_key];\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i = 0; i < lists.length; i++) {\n\t\t\t\t\tlists[i].apply(lists, argz);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'addListener',\n\t\t\tvalue: function addListener() {\n\t\t\t\tthis.on.apply(this, arguments);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeListener',\n\t\t\tvalue: function removeListener() {\n\t\t\t\tthis.un.apply(this, arguments);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeAllListeners',\n\t\t\tvalue: function removeAllListeners() {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'once',\n\t\t\tvalue: function once(evt, cb) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tvar _fn = void 0;\n\t\t\t\tthis.on(evt, _fn = function fn() {\n\t\t\t\t\t_this3.un(evt, _fn);\n\t\t\t\t\tcb.apply(undefined, arguments);\n\t\t\t\t});\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Emitter;\n\t}();\n\t\n\texports.default = Emitter;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.walknSet = walknSet;\n\texports.walknGet = walknGet;\n\texports.keyWalknSet = keyWalknSet;\n\texports.keyWalknGet = keyWalknGet;\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/*\n\t * The MIT License (MIT)\n\t * Copyright (c) 2019. Wise Wild Web\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t *  @author : Nathanael Braun\n\t *  @contact : n8tz.js@gmail.com\n\t */\n\t\n\tvar is = __webpack_require__(1);\n\t\n\tfunction walknSet(obj, path, value, stack) {\n\t\tif (is.string(path)) path = path.split('.');\n\t\tif (!path.length) return false;else if (path.length == 1) return obj[path[0]] = stack ? [].concat(_toConsumableArray(obj[path[0]] || []), [value]) : value;else return walknSet(obj[path[0]] = obj[path[0]] || {}, path.slice(1), value, stack);\n\t}\n\t\n\tfunction walknGet(obj, path, isKey) {\n\t\tif (is.string(path)) path = path.split('.');\n\t\treturn path.length ? obj[path[0]] && walknGet(obj[path[0]], path.slice(1)) : obj;\n\t}\n\t\n\t//@todo\n\tfunction keyWalknSet(obj, path, value, stack) {\n\t\tif (is.string(path)) path = path.split(/(\\>|\\/)/ig).filter(function (v) {\n\t\t\treturn v !== '>' && v;\n\t\t});\n\t\treturn walknSet(obj, path, value);\n\t}\n\t\n\tfunction keyWalknGet(obj, path, isKey) {\n\t\tif (is.string(path)) path = path.split(/(\\>|\\/)/ig).filter(function (v) {\n\t\t\treturn v !== '>' && v;\n\t\t});\n\t\treturn path.length ? obj[path[0]] && walknGet(obj[path[0]], path.slice(1)) : obj;\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"shortid\");\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _class, _temp;\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/*\n\t * The MIT License (MIT)\n\t * Copyright (c) 2019. Wise Wild Web\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t *  @author : Nathanael Braun\n\t *  @contact : n8tz.js@gmail.com\n\t */\n\t\n\tvar is = __webpack_require__(1),\n\t    Scope = __webpack_require__(2),\n\t    _require = __webpack_require__(4),\n\t    keyWalknSet = _require.keyWalknSet,\n\t    keyWalknGet = _require.keyWalknGet,\n\t    EventEmitter = __webpack_require__(3),\n\t    TaskSequencer = __webpack_require__(7),\n\t    shortid = __webpack_require__(5),\n\t    objProto = Object.getPrototypeOf({});\n\tvar Store = (_temp = _class = function (_EventEmitter) {\n\t\t_inherits(Store, _EventEmitter);\n\t\n\t\t/**\n\t  * Constructor, will build a rescope store\n\t  *\n\t  * (scope, {require,use,apply,state, data})\n\t  * (scope)\n\t  *\n\t  * @param scope {object} scope where to find the other stores (default : static\n\t  *     staticScope )\n\t  * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\",\n\t  *     otherStore.as(\"otherKey\")]\n\t  */\n\t\t// overridable list of store that will allow push if updated\n\t\tfunction Store() {\n\t\t\tvar _this$_require, _this$_require2;\n\t\n\t\t\t_classCallCheck(this, Store);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));\n\t\n\t\t\tvar argz = [].concat(Array.prototype.slice.call(arguments)),\n\t\t\t    _static = _this.constructor,\n\t\t\t    scope = argz[0] instanceof Scope ? argz.shift() : _static.scope ? Scope.getScope(_static.scope) : is.string(argz[0]) ? Scope.getScope(argz.shift()) : _static.staticScope,\n\t\t\t    cfg = argz[0] && !is.array(argz[0]) && !is.string(argz[0]) ? argz.shift() : {},\n\t\t\t    taskQueue = is.array(argz[0]) ? argz.shift() : null,\n\t\t\t    name = cfg.name || _static.name,\n\t\t\t    watchs = cfg.use || [],\n\t\t\t    apply = cfg.apply || null,\n\t\t\t    initialState = _static.state || _static.initialState || _static.defaultState;\n\t\n\t\t\t_this._uid = cfg._uid || shortid.generate();\n\t\n\t\t\t_this.__retains = { all: 0 };\n\t\t\t_this.__locks = { all: 0 };\n\t\t\t_this._onStabilize = [];\n\t\n\t\t\t// autoDestroyTm\n\t\t\t_this._autoDestroy = !!_this._persistenceTm;\n\t\t\t_this._persistenceTm = cfg.persistenceTm || _static.persistenceTm || (cfg.autoDestroy || _static.autoDestroy) && 5;\n\t\t\t_this._cfg = cfg;\n\t\n\t\t\tif (cfg && cfg.on) {\n\t\t\t\t_this.on(cfg.on);\n\t\t\t}\n\t\n\t\t\t_this.name = name;\n\t\n\t\t\tif (scope.stores) {\n\t\t\t\t_this.scopeObj = scope;\n\t\t\t\t_this.scope = scope.stores;\n\t\t\t} else {\n\t\t\t\t_this.scopeObj = new Scope(scope);\n\t\t\t\t_this.scope = scope.stores;\n\t\t\t}\n\t\n\t\t\t// standardized scope access\n\t\t\t_this.$scope = _this.scopeObj;\n\t\t\t_this.$stores = _this.scopeObj.stores;\n\t\t\t_this.$actions = _this.scopeObj.actions;\n\t\t\t_this.$dispatch = _this.scopeObj.dispatch.bind(_this.scopeObj);\n\t\n\t\t\t_this._rev = _this.constructor._rev || 0;\n\t\t\t_this._revs = {};\n\t\t\t_this.stores = {};\n\t\t\t_this._require = [];\n\t\t\t_this._sources = [name];\n\t\n\t\t\t// register source stores\n\t\t\tif (is.array(_static.use)) {\n\t\t\t\t_this._use = [].concat(_toConsumableArray(watchs), _toConsumableArray((_static.use || []).map(function (key) {\n\t\t\t\t\tvar ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n\t\t\t\t\tif (ref[1]) {\n\t\t\t\t\t\tvar ref2 = ref[2].split('.');\n\t\t\t\t\t\t_this._require.push(ref[3] || ref2[ref2.length - 1]); // require check value of the aliased\n\t\t\t\t\t\t// imported value\n\t\t\t\t\t\treturn key.substr(1);\n\t\t\t\t\t}\n\t\t\t\t\treturn key;\n\t\t\t\t})));\n\t\t\t} else {\n\t\t\t\t_this._use = [].concat(_toConsumableArray(watchs), _toConsumableArray(_static.use ? Object.keys(_static.use).map(function (key) {\n\t\t\t\t\tvar ref = key.match(/^(\\!?)(.*)$/);\n\t\t\t\t\tref[1] && _this._require.push(_static.use[key]);\n\t\t\t\t\treturn ref[2] + (_static.use[key] === true ? '' : ':' + _static.use[key]);\n\t\t\t\t}) : []));\n\t\t\t}\n\t\n\t\t\tif (_static.require) (_this$_require = _this._require).push.apply(_this$_require, _toConsumableArray(_static.require));\n\t\t\tif (cfg.require) (_this$_require2 = _this._require).push.apply(_this$_require2, _toConsumableArray(cfg.require));\n\t\n\t\t\t_this._followers = [];\n\t\t\t_this._changesSW = initialState || {};\n\t\t\t_this.state = initialState && {};\n\t\n\t\t\tif (apply) _this.apply = apply;\n\t\n\t\t\t/**\n\t   * Initial state isn't fully initialized ( childs constructors can set it )\n\t   * Scope based instance have taskQueue to delay init synchronously, if not\n\t   * present we use setTimeout\n\t   */\n\t\t\tif (taskQueue) {\n\t\t\t\ttaskQueue.push(_this._afterConstructor.bind(_this));\n\t\t\t} else setTimeout(_this._afterConstructor.bind(_this));\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t/**\n\t  * Get the incoming state ( for immediate state relative actions )\n\t  * @returns {{}|*}\n\t  */\n\t\t// default state\n\t\t/**\n\t  * if retain goes to 0 :\n\t  * false to not destroy,\n\t  * 0 to sync auto destroy\n\t  * Ms to autodestroy after tm ms if no retain has been called\n\t  * @type {boolean|Int}\n\t  */\n\t\n\t\t//static use                  = [];// overridable list of source stores\n\t\n\t\n\t\t_createClass(Store, [{\n\t\t\tkey: '_afterConstructor',\n\t\t\tvalue: function _afterConstructor() {\n\t\t\t\tvar cfg = this._cfg,\n\t\t\t\t    _static = this.constructor,\n\t\t\t\t    snapshot = this.restore(undefined, true),\n\t\t\t\t    initialState = this.state,\n\t\t\t\t    initialData = this.data,\n\t\t\t\t    applied = void 0;\n\t\t\t\t{\n\t\n\t\t\t\t\tif (initialData) this.data = initialData;else if (_static.data !== undefined) this.data = _extends({}, _static.data);else if (cfg.hasOwnProperty(\"data\")) this.data = cfg.data;\n\t\n\t\t\t\t\tif (cfg.hasOwnProperty(\"state\") && cfg.state !== undefined) initialState = _extends({}, initialState, cfg.state);\n\t\n\t\t\t\t\tif (this.data === undefined) {\n\t\t\t\t\t\tif (initialState || this._use.length) {\n\t\t\t\t\t\t\t// sync apply\n\t\t\t\t\t\t\tthis._changesSW = _extends({}, this._changesSW, initialState || {}, this.$scope.map(this, this._use));\n\t\t\t\t\t\t\tthis.state = {};\n\t\t\t\t\t\t\tif (this.shouldApply(this._changesSW) && this.data === undefined) {\n\t\t\t\t\t\t\t\tthis.data = this.apply(this.data, this._changesSW, this._changesSW);\n\t\t\t\t\t\t\t\tapplied = true;\n\t\t\t\t\t\t\t\tthis.state = this._changesSW;\n\t\t\t\t\t\t\t\tthis._changesSW = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapplied = true;\n\t\t\t\t\t\tthis.state = _extends({}, this._changesSW, initialState || {}, this.$scope.map(this, this._use));\n\t\t\t\t\t\tthis._changesSW = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((this.data !== undefined || applied) && !this.__locks.all) {\n\t\t\t\t\tthis._stable = true;\n\t\t\t\t\tthis._rev++;\n\t\t\t\t} else {\n\t\t\t\t\tthis._stable = false;\n\t\t\t\t\tif (!_static.managed && !this.state && (!this._use || !this._use.length)) {\n\t\t\t\t\t\tconsole.warn(\"ReScope store '\", this.name, \"' have no initial data, state or use. It can't stabilize...\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t!this._stable && this.emit('unstable', this.state);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Overridable method to know if a data change should be propag to the listening\n\t   * stores & components\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'shouldPropag',\n\t\t\tvalue: function shouldPropag(nDatas) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Overridable method to choose if this store should be serialized,\n\t   * If not it will be applied normally when restoring\n\t   * @returns {boolean}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'shouldSerialize',\n\t\t\tvalue: function shouldSerialize() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'hasDataChange',\n\t\t\tvalue: function hasDataChange(nDatas) {\n\t\t\t\tvar _static = this.constructor,\n\t\t\t\t    r = void 0,\n\t\t\t\t    cDatas = this.data;\n\t\t\t\tr = !cDatas && nDatas || cDatas !== nDatas;\n\t\t\t\t!r && cDatas && Object.keys(cDatas).forEach(function (key) {\n\t\t\t\t\tr = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key]);\n\t\t\t\t});\n\t\t\t\t!r && nDatas && Object.keys(nDatas).forEach(function (key) {\n\t\t\t\t\tr = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key]);\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Overridable method to know if a state change should be applied\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'shouldApply',\n\t\t\tvalue: function shouldApply() {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\t\n\t\t\t\tvar _static = this.constructor;\n\t\n\t\t\t\treturn !!this.isComplete(state) && (is.array(_static.follow) ? _static.follow.reduce(function (r, i) {\n\t\t\t\t\treturn r || state && state[i];\n\t\t\t\t}, false) : _static.follow ? Object.keys(_static.follow).reduce(function (r, i) {\n\t\t\t\t\treturn r || state && is.fn(_static.follow[i]) && _static.follow[i].call(_this2, state[i]) || _static.follow[i] && state[i] !== _this2.state[i];\n\t\t\t\t}, false) : true);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Overridable applier / remapper\n\t   * If state or lastPublicState are simple hash maps apply will return {...data,\n\t   * ...state} if not it will return the last private state\n\t   * @param data\n\t   * @param state\n\t   * @returns {*}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'apply',\n\t\t\tvalue: function apply(data, state, changes) {\n\t\t\t\tstate = state || this.state;\n\t\n\t\t\t\tif (!data || data.__proto__ !== objProto || state.__proto__ !== objProto) return state;else return _extends({}, data, state);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Debounce this store propagation ( & reducing )\n\t   * @param cb\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'stabilize',\n\t\t\tvalue: function stabilize(cb) {\n\t\t\t\tcb && this.once('stable', cb);\n\t\t\t\tthis._stable && this.emit('unstable', this.state, this.data);\n\t\n\t\t\t\tthis._stable = false;\n\t\n\t\t\t\tif (this._stabilizer) return;\n\t\n\t\t\t\tthis._stabilizer = TaskSequencer.pushTask(this, 'pushState');\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Walk n get\n\t   * @param path\n\t   * @param i\n\t   * @param obj\n\t   * @returns {*|{}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'retrieve',\n\t\t\tvalue: function retrieve(path) {\n\t\t\t\tvar i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\t\t\tvar obj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.data;\n\t\n\t\t\t\tpath = is.string(path) ? path.split('.') : path;\n\t\t\t\treturn !obj || !path || !path.length ? obj : path.length == i + 1 ? obj[path[i]] : this.retrieve(path, i + 1, obj[path[i]]);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'dispatch',\n\t\t\tvalue: function dispatch(action) {\n\t\t\t\tvar _scopeObj;\n\t\n\t\t\t\tfor (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n\t\t\t\t\targz[_key2 - 1] = arguments[_key2];\n\t\t\t\t}\n\t\n\t\t\t\t(_scopeObj = this.scopeObj).dispatch.apply(_scopeObj, [action].concat(argz));\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'trigger',\n\t\t\tvalue: function trigger(action) {\n\t\t\t\tvar actions = this.constructor.actions;\n\t\n\t\t\t\tif (actions && actions[action]) {\n\t\t\t\t\tvar _actions$action;\n\t\n\t\t\t\t\tfor (var _len2 = arguments.length, argz = Array(_len2 > 1 ? _len2 - 1 : 0), _key3 = 1; _key3 < _len2; _key3++) {\n\t\t\t\t\t\targz[_key3 - 1] = arguments[_key3];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar ns = (_actions$action = actions[action]).call.apply(_actions$action, [this].concat(argz));\n\t\t\t\t\tns && this.setState(ns);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Set & Push the result data to followers if stable\n\t   * @param cb\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'push',\n\t\t\tvalue: function push(data, force, cb) {\n\t\t\t\tcb = force === true ? cb : force;\n\t\t\t\tforce = force === true;\n\t\t\t\tif (!force && !this.hasDataChange(data)) {\n\t\t\t\t\tcb && cb();\n\t\t\t\t\tif (!this.__locks.all) {\n\t\t\t\t\t\tvar stable = this._stable;\n\t\t\t\t\t\tthis._stable = true;\n\t\t\t\t\t\t!stable && this.emit('stable', this.state, this.data);\n\t\t\t\t\t\tthis._stabilizer = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tthis.data = data;\n\t\t\t\tthis.wait();\n\t\t\t\tthis.release(cb);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Call the apply fn using the current accumulated state update then, push the\n\t   * resulting data if stable\n\t   * @param force\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'pushState',\n\t\t\tvalue: function pushState(force) {\n\t\n\t\t\t\tif (!force && !this._changesSW && this.data) return;\n\t\n\t\t\t\tvar nextState = this._nextState || _extends({}, this.state, this._changesSW || {}),\n\t\t\t\t    nextData = this.apply(this.data, nextState, this._changesSW);\n\t\n\t\t\t\tthis._stabilizer = null;\n\t\t\t\tthis.state = nextState;\n\t\t\t\tthis._changesSW = null;\n\t\n\t\t\t\tif (!force && !this.hasDataChange(nextData)) {\n\t\t\t\t\tif (!this.__locks.all) {\n\t\t\t\t\t\tvar stable = this._stable;\n\t\t\t\t\t\tthis._stable = true;\n\t\t\t\t\t\t!stable && this.emit('stable', this.state, this.data);\n\t\t\t\t\t\tthis._stabilizer = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tthis.data = nextData;\n\t\t\t\tthis.wait();\n\t\t\t\tthis.release();\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Add 'pState' to the current accumulated state updates\n\t   * & wait source stores stabilization before pushing these state updates\n\t   * @param pState\n\t   * @param cb\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setState',\n\t\t\tvalue: function setState(pState, cb, sync) {\n\t\t\t\tvar i = 0,\n\t\t\t\t    change = void 0,\n\t\t\t\t    changes = this._changesSW = this._changesSW || {};\n\t\t\t\tfor (var k in pState) {\n\t\t\t\t\tif (!this.state || changes.hasOwnProperty(k) // todo\n\t\t\t\t\t&& pState[k] !== changes[k] || pState.hasOwnProperty(k) && pState[k] !== this.state[k]\n\t\t\t\t\t//||\n\t\t\t\t\t//(this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n\t\t\t\t\t) {\n\t\t\t\t\t\tchange = true;\n\t\t\t\t\t\t//this._revs[k] = pState[k] && pState[k]._rev || true;\n\t\t\t\t\t\tchanges[k] = pState[k];\n\t\t\t\t\t}\n\t\t\t\t}this._nextState = _extends({}, this.state, changes);\n\t\t\t\tif (!this.shouldApply(this._nextState)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (sync) {\n\t\t\t\t\tthis.pushState();\n\t\t\t\t\tcb && cb();\n\t\t\t\t} else {\n\t\t\t\t\tif (change) {\n\t\t\t\t\t\tthis.stabilize(cb);\n\t\t\t\t\t} else cb && cb();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Update the current state & push it\n\t   * @param pState\n\t   * @param cb\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setStateSync',\n\t\t\tvalue: function setStateSync(pState) {\n\t\t\t\tvar i = 0,\n\t\t\t\t    change = void 0,\n\t\t\t\t    changes = this._changesSW = this._changesSW || {};\n\t\t\t\tfor (var k in pState) {\n\t\t\t\t\tif (!this.state || pState.hasOwnProperty(k) && pState[k] !== this.state[k]\n\t\t\t\t\t//||\n\t\t\t\t\t//(this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n\t\t\t\t\t) {\n\t\t\t\t\t\tchange = true;\n\t\t\t\t\t\tthis._revs[k] = pState[k] && pState[k]._rev || true;\n\t\t\t\t\t\tchanges[k] = pState[k];\n\t\t\t\t\t}\n\t\t\t\t}this.shouldApply(_extends({}, this.state || {}, changes)) && this.pushState();\n\t\t\t\treturn this.data;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * get a store-key pair for Store::map\n\t   * @param {string} name\n\t   * @returns {{store: Store, name: *}}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'as',\n\t\t\tvalue: function as(name) {\n\t\t\t\treturn { store: this, name: name };\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'on',\n\t\t\tvalue: function on(lists) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tif (!is.string(lists) && lists) Object.keys(lists).forEach(function (k) {\n\t\t\t\t\treturn _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'on', _this3).call(_this3, k, lists[k]);\n\t\t\t\t});else _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'on', this).apply(this, arguments);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeListener',\n\t\t\tvalue: function removeListener(lists) {\n\t\t\t\tvar _this4 = this;\n\t\n\t\t\t\tif (!is.string(lists) && lists) Object.keys(lists).forEach(function (k) {\n\t\t\t\t\treturn _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'removeListener', _this4).call(_this4, k, lists[k]);\n\t\t\t\t});else _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'removeListener', this).apply(this, arguments);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * is complete (all requiered keys are here)\n\t   * @returns bool\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'isComplete',\n\t\t\tvalue: function isComplete() {\n\t\t\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\t\n\t\t\t\treturn !this._require || !this._require.length || state && this._require.reduce(function (r, key) {\n\t\t\t\t\treturn r && state[key];\n\t\t\t\t}, true);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * is stable\n\t   * @returns bool\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'isStable',\n\t\t\tvalue: function isStable() {\n\t\t\t\treturn this._stable;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Serialize state & data with sources refs\n\t   * @returns bool\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'serialize',\n\t\t\tvalue: function serialize() {\n\t\t\t\tvar _this5 = this;\n\t\n\t\t\t\tvar cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\t\t\tvar output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t\n\t\t\t\tvar sId = cfg.parentAlias || this.scopeObj._id,\n\t\t\t\t    refsCount = 0,\n\t\t\t\t    refs = !cfg.norefs && is.array(this._use) && this._use.reduce(function (map, key) {\n\t\t\t\t\tvar ref = _this5.$scope.parseRef(key),\n\t\t\t\t\t    store = _this5.$stores[ref.storeId];\n\t\t\t\t\tif (store && Store.isStore(store) && !store.scopeObj._.isLocalId) refsCount++, map[ref.alias] = ref.path;\n\t\n\t\t\t\t\treturn map;\n\t\t\t\t}, {}),\n\t\t\t\t    state = this.state || {},\n\t\t\t\t    persistent = this.shouldSerialize();\n\t\n\t\t\t\tif (!persistent) {\n\t\t\t\t\tkeyWalknSet(output, sId + '/' + this.name, {\n\t\t\t\t\t\tdataRefs: cfg.dataRefs,\n\t\t\t\t\t\trefs: refs\n\t\t\t\t\t});\n\t\t\t\t\treturn output;\n\t\t\t\t}\n\t\n\t\t\t\tvar stateKeys = Object.keys(state) || [],\n\t\t\t\t    stateRefs = stateKeys.map(function (k) {\n\t\t\t\t\treturn state[k];\n\t\t\t\t}),\n\t\t\t\t    inRefsCount = 0,\n\t\t\t\t    dataRefs = cfg.dataRefs || {},\n\t\t\t\t    inRefs = !cfg.norefs && this.data && Object.keys(this.data).reduce(function (map, key) {\n\t\t\t\t\tvar ref = stateRefs.indexOf(_this5.data[key]);\n\t\t\t\t\tif (ref != -1) inRefsCount++, map[key] = stateKeys[ref];\n\t\t\t\t\treturn map;\n\t\t\t\t}, {}),\n\t\t\t\t    snap = {\n\t\t\t\t\tdataRefs: cfg.dataRefs,\n\t\t\t\t\tstate: state && (cfg.norefs ? _extends({}, state) : Object.keys(state).reduce(function (h, k) {\n\t\t\t\t\t\treturn !refs[k] && (h[k] = state[k]), h;\n\t\t\t\t\t}, {})),\n\t\t\t\t\tdata: (this.data && this.data.__proto__ === objProto ? Object.keys(this.data).reduce(function (h, k) {\n\t\t\t\t\t\tif (!inRefs[k] && !dataRefs[k]) {\n\t\t\t\t\t\t\th[k] = _this5.data[k];\n\t\t\t\t\t\t\tinRefsCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn h;\n\t\t\t\t\t}, {}) : (is.bool(this.data) || is.number(this.data) || is.string(this.data)) && this.data) || undefined\n\t\n\t\t\t\t};\n\t\n\t\t\t\trefs && refsCount && (snap.refs = refs);\n\t\t\t\tinRefs && inRefsCount && (snap.inRefs = inRefs);\n\t\n\t\t\t\tkeyWalknSet(output, sId + '/' + this.name, snap);\n\t\t\t\treturn output;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * restore state & data\n\t   * @returns bool\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'restore',\n\t\t\tvalue: function (_restore) {\n\t\t\t\tfunction restore(_x, _x2) {\n\t\t\t\t\treturn _restore.apply(this, arguments);\n\t\t\t\t}\n\t\n\t\t\t\trestore.toString = function () {\n\t\t\t\t\treturn _restore.toString();\n\t\t\t\t};\n\t\n\t\t\t\treturn restore;\n\t\t\t}(function (snapshot, immediate) {\n\t\t\t\tvar _this6 = this;\n\t\n\t\t\t\tsnapshot = snapshot && keyWalknGet(snapshot, this.scopeObj._id + '/' + this.name) || this.$scope.takeSnapshotByKey(this.scopeObj._id + '/' + this.name);\n\t\n\t\t\t\tif (!snapshot) return;\n\t\n\t\t\t\tif (snapshot) {\n\t\n\t\t\t\t\tif (!this.isStable() && !immediate) this.then(function () {\n\t\t\t\t\t\treturn restore(snapshot);\n\t\t\t\t\t});\n\t\n\t\t\t\t\tthis.state = _extends({}, snapshot.state);\n\t\t\t\t\tsnapshot.refs && Object.keys(snapshot.refs).forEach(function (key) {\n\t\t\t\t\t\t//todo\n\t\t\t\t\t\t_this6.state[key] = _this6.$scope.retrieve(snapshot.refs[key]);\n\t\t\t\t\t});\n\t\n\t\t\t\t\tif (snapshot.inRefs === true) {\n\t\t\t\t\t\tthis.data = _extends({}, this.state);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.data = snapshot.data;\n\t\t\t\t\t\tsnapshot.inRefs && Object.keys(snapshot.inRefs).forEach(function (key) {\n\t\t\t\t\t\t\t//todo\n\t\t\t\t\t\t\t_this6.data[key] = _this6.state[snapshot.inRefs[key]];\n\t\t\t\t\t\t\t//else\n\t\t\t\t\t\t\t//    console.warn('not found : ', key, snap && snap.refs[ key ])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (snapshot.dataRefs) {\n\t\t\t\t\t\tthis.data = this.data || {};\n\t\t\t\t\t\tObject.keys(snapshot.dataRefs).forEach(function (key) {\n\t\t\t\t\t\t\t//todo\n\t\t\t\t\t\t\t_this6.$scope.restoreRefPath(snapshot.dataRefs[key]);\n\t\t\t\t\t\t\t_this6.data[key] = _this6.$scope.retrieve(snapshot.dataRefs[key]);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\n\t\t\t/**\n\t   * Bind this store changes to the given component-key\n\t   * @param obj {React.Component|Store|function)\n\t   * @param key {string} optional key where to map the public state\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'bind',\n\t\t\tvalue: function bind(obj, key) {\n\t\t\t\tvar setInitial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\t\t\tvar path = arguments[3];\n\t\n\t\t\t\tthis._followers.push([obj, key, path]);\n\t\t\t\tif (setInitial && this.data && this._stable) {\n\t\t\t\t\tvar data = path ? this.retrieve(path) : this.data;\n\t\t\t\t\tif (typeof obj != \"function\") {\n\t\t\t\t\t\tif (key) obj.setState(_defineProperty({}, key, data));else obj.setState(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Un bind this store off the given component-key\n\t   * @param obj\n\t   * @param key\n\t   * @returns {Array.<*>}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'unBind',\n\t\t\tvalue: function unBind(obj, key, path) {\n\t\t\t\tvar followers = this._followers,\n\t\t\t\t    i = followers && followers.length;\n\t\t\t\twhile (followers && i--) {\n\t\t\t\t\tif (followers[i][0] === obj && followers[i][1] === key && followers[i][2] === path) return followers.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * once('stable', cb)\n\t   * @param obj {React.Component|Store|function)\n\t   * @param key {string} optional key where to map the public state\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'then',\n\t\t\tvalue: function then(cb) {\n\t\t\t\tvar _this7 = this;\n\t\n\t\t\t\tif (this._stable) return cb(this.data);\n\t\t\t\tthis.once('stable', function (e) {\n\t\t\t\t\treturn cb(_this7.data);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Add a lock so the store will not propag it data untill release() is call\n\t   * @param previous {Store|number|Array} @optional wf to wait, releases to wait or\n\t   *     array of stuff to wait\n\t   * @returns {this}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'wait',\n\t\t\tvalue: function wait(previous) {\n\t\t\t\tif (typeof previous == \"number\") return this.__locks.all += previous;\n\t\t\t\tif (is.array(previous)) return previous.map(this.wait.bind(this));\n\t\n\t\t\t\tthis._stable && this.emit('unstable', this.state, this.data);\n\t\t\t\tthis._stable = false;\n\t\t\t\tthis.__locks.all++;\n\t\n\t\t\t\tvar reason = is.string(previous) ? previous : null;\n\t\t\t\tif (reason) {\n\t\t\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\t\t\tthis.__locks[reason]++;\n\t\t\t\t}\n\t\t\t\tif (previous && is.fn(previous.then)) {\n\t\t\t\t\tprevious.then(this.release.bind(this, null));\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Decrease locks for this store, if it reach 0 ,\n\t   * it will be propagated to the followers,\n\t   * then, all stuff passed to \"then\" call back will be exec / released\n\t   * @param desync\n\t   * @returns {*}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'release',\n\t\t\tvalue: function release(reason, cb) {\n\t\t\t\tvar _static = this.constructor,\n\t\t\t\t    me = this;\n\t\t\t\tvar i = 0,\n\t\t\t\t    wasStable = this._stable;\n\t\n\t\t\t\tif (is.fn(reason)) {\n\t\t\t\t\tcb = reason;\n\t\t\t\t\treason = null;\n\t\t\t\t}\n\t\n\t\t\t\tif (reason) {\n\t\t\t\t\tif (this.__locks[reason] == 0) console.error(\"Release more than locking !\", reason);\n\t\t\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\t\t\tthis.__locks[reason]--;\n\t\t\t\t}\n\t\n\t\t\t\tif (!reason && this.__locks.all == 0) console.error(\"Release more than locking !\");\n\t\n\t\t\t\tif (! --this.__locks.all && this.isComplete()) {\n\t\t\t\t\tvar propag = this.shouldPropag(this.data);\n\t\t\t\t\tthis._stable = true;\n\t\t\t\t\tpropag && this._rev++; //\n\t\t\t\t\tif (propag && this._followers.length) this._followers.forEach(function propag(follower) {\n\t\t\t\t\t\tvar data = follower[2] ? me.retrieve(follower[2]) : me.data;\n\t\t\t\t\t\t//if ( !data ) return;\n\t\n\t\t\t\t\t\tif (typeof follower[0] == \"function\") {\n\t\t\t\t\t\t\tfollower[0](data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//cb && i++;\n\t\t\t\t\t\t\tfollower[0].setState(follower[1] ? _defineProperty({}, follower[1], data) : data\n\t\t\t\t\t\t\t//,\n\t\t\t\t\t\t\t//cb && (\n\t\t\t\t\t\t\t//    () => (!(--i) && cb())\n\t\t\t\t\t\t\t//)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t//else\n\t\t\t\t\t!wasStable && this.emit('stable', this.data);\n\t\t\t\t\tpropag && this.emit('update', this.data);\n\t\t\t\t\tcb && cb();\n\t\t\t\t} else cb && this.then(cb);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'propag',\n\t\t\tvalue: function propag(data) {\n\t\t\t\tthis.emit('update', data);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'retain',\n\t\t\tvalue: function retain(reason) {\n\t\t\t\tthis.__retains.all++;\n\t\t\t\tif (reason) {\n\t\t\t\t\tthis.__retains[reason] = this.__retains[reason] || 0;\n\t\t\t\t\tthis.__retains[reason]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'dispose',\n\t\t\tvalue: function dispose(reason) {\n\t\t\t\tvar _this8 = this;\n\t\n\t\t\t\t//console.warn(\"dispose\", reason, this.__retains);\n\t\t\t\tif (reason) {\n\t\t\t\t\tif (!this.__retains[reason]) throw new Error(\"RS : Dispose more than retaining on store '\" + this.name + \"' : \" + reason);\n\t\n\t\t\t\t\tthis.__retains[reason]--;\n\t\t\t\t}\n\t\t\t\tif (this.__retains.all == 0) throw new Error(\"RS : Dispose more than retaining on store \" + this.name);\n\t\n\t\t\t\tthis.__retains.all--;\n\t\n\t\t\t\tif (!this.__retains.all) {\n\t\t\t\t\tif (this._persistenceTm) {\n\t\t\t\t\t\tthis._destroyTM && clearTimeout(this._destroyTM);\n\t\t\t\t\t\tthis._destroyTM = setTimeout(function (e) {\n\t\t\t\t\t\t\t_this8._destroyTM = null;\n\t\t\t\t\t\t\t//this.then(s => {\n\t\t\t\t\t\t\t!_this8.__retains.all && !_this8.dead && _this8.destroy();\n\t\t\t\t\t\t\t//});\n\t\t\t\t\t\t}, this._persistenceTm);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//this.then(s =>\n\t\t\t\t\t\t!this.__retains.all && !this.dead && this.destroy();\n\t\t\t\t\t\t//);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'destroy',\n\t\t\tvalue: function destroy() {\n\t\t\t\t//  console.log(\"destroy\", this._uid);\n\t\n\t\t\t\tthis.emit('destroy', this);\n\t\t\t\tif (this._stabilizer) clearTimeout(this._stabilizer);\n\t\n\t\t\t\tif (this._followers.length) this._followers.forEach(function (follower) {\n\t\t\t\t\tif (typeof follower[0] !== \"function\") {\n\t\t\t\t\t\tif (follower[0].stores) delete follower[0].stores[follower[1]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._followers.length = 0;\n\t\t\t\tthis.constructor._rev = this.rev;\n\t\t\t\tthis.dead = true;\n\t\t\t\tthis._revs = this.data = this.state = this.scope = null;\n\t\t\t\tthis.removeAllListeners();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'nextState',\n\t\t\tget: function get() {\n\t\t\t\treturn this._changesSW && _extends({}, this.state, this._changesSW) || this.state;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Store;\n\t}(EventEmitter), _class.staticScope = new Scope({}, { id: \"static\" }), _class.state = undefined, _class.persistenceTm = false, _temp);\n\t\n\t/**\n\t * get a static aliased reference of a store\n\t * @param {string} name\n\t * @returns {{store: Store, name: *}}\n\t */\n\t\n\tStore.as = function (name) {\n\t\treturn { store: this, name: name };\n\t};\n\t\n\t/**\n\t * @todo\n\t * Map all named stores in {keys} to the {object}'s state\n\t * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n\t * @static\n\t * @param object {Object} target state aware object (React.Component|Store|...)\n\t * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\",\n\t *     store.as('anotherKey')]\n\t */\n\tStore.map = function (cStore, keys, scope, origin) {\n\t\tvar setInitial = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\t\n\t\tvar targetRevs = cStore._revs || {};\n\t\tvar targetScope = cStore.stores || (cStore.stores = {});\n\t\tvar initialOutputs = {};\n\t\tkeys = is.array(keys) ? [].concat(_toConsumableArray(keys)) : [keys];\n\t\n\t\tscope = scope || Store.staticScope;\n\t\n\t\tkeys = keys.filter(\n\t\t// @todo : use query refs\n\t\t// (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n\t\tfunction (key) {\n\t\t\tvar _cStore$_sources;\n\t\n\t\t\tif (!key) {\n\t\t\t\tconsole.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar name = void 0,\n\t\t\t    alias = void 0,\n\t\t\t    path = void 0,\n\t\t\t    store = void 0,\n\t\t\t    _key = void 0;\n\t\t\tif (key.store && key.name) {\n\t\t\t\talias = name = key.name;\n\t\t\t\tstore = key.store;\n\t\t\t} else if (is.fn(key)) {\n\t\t\t\tname = alias = key.name || key.defaultName;\n\t\t\t\tstore = key;\n\t\t\t} else {\n\t\t\t\t_key = key.match(/([^\\.\\:]+)((?:\\.[^\\.\\:]+)*)(?:\\:([^\\.\\:]+))?/);\n\t\t\t\tname = _key[1];\n\t\t\t\tpath = _key[2] && _key[2].substr(1);\n\t\t\t\tstore = scope.stores[_key[1]];\n\t\t\t\talias = _key[3] || path && path.match(/([^\\.]*)$/)[0] || _key[1];\n\t\t\t}\n\t\t\tif (!store) {\n\t\t\t\tvar i = [];\n\t\t\t\tfor (var o in scope.stores) {\n\t\t\t\t\ti.push(o);\n\t\t\t\t}console.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + (cStore.name || cStore) + ' !!', store, _key, scope.stores, i);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (Scope.isScopeClass(store)) scope._mount(name);\n\t\t\tif (Scope.isScope(store)) {\n\t\t\t\tstore = scope._mount(key);\n\t\t\t} else if (targetRevs[name]) return false; // ignore dbl uses for now\n\t\n\t\n\t\t\tif (is.fn(store)) {\n\t\t\t\tscope._mount(name);\n\t\t\t\tscope.stores[name].bind(cStore, alias, setInitial, path);\n\t\t\t} else {\n\t\t\t\tstore.bind(cStore, alias, setInitial, path);\n\t\t\t}\n\t\n\t\t\t// give initial store weight basing sources\n\t\t\tscope.stores[name]._sources && (_cStore$_sources = cStore._sources).push.apply(_cStore$_sources, _toConsumableArray(scope.stores[name]._sources));\n\t\n\t\t\ttargetRevs[alias] = targetRevs[alias] || true;\n\t\t\t!targetScope[name] && (targetScope[name] = scope.stores[name]);\n\t\t\tif (scope.stores[name].hasOwnProperty('data')) initialOutputs[name] = scope.data[name];\n\t\t\treturn true;\n\t\t});\n\t\n\t\t// ... @todo\n\t\tcStore.once('destroy', function () {\n\t\t\tkeys.map(function (key) {\n\t\t\t\tvar name = void 0,\n\t\t\t\t    alias = void 0,\n\t\t\t\t    path = void 0,\n\t\t\t\t    store = void 0;\n\t\t\t\tif (key.store && key.name) {\n\t\t\t\t\talias = name = key.name;\n\t\t\t\t\tstore = key.store;\n\t\t\t\t} else if (is.fn(key)) {\n\t\t\t\t\tname = alias = key.name || key.defaultName;\n\t\t\t\t\tstore = scope.stores[name];\n\t\t\t\t} else {\n\t\t\t\t\tkey = key.match(/([^\\.\\:]+)((?:\\.[^\\.\\:]+)*)(?:\\:([^\\.\\:]+))?/);\n\t\t\t\t\tname = key[1];\n\t\t\t\t\tpath = key[2] && key[2].substr(1);\n\t\t\t\t\tstore = scope.stores[key[1]];\n\t\t\t\t\talias = key[3] || path && path.match(/([^\\.]*)$/)[0] || key[1];\n\t\t\t\t}\n\t\n\t\t\t\tstore && !is.fn(store) && store.unBind(cStore, alias, path);\n\t\t\t});\n\t\t});\n\t\n\t\treturn initialOutputs;\n\t};\n\t\n\tStore.isStore = Scope.isStore = function (obj) {\n\t\treturn obj instanceof Store;\n\t};\n\tStore.isStoreClass = Scope.isStoreClass = function (obj) {\n\t\treturn Store.isPrototypeOf(obj) || obj === Store;\n\t};\n\t\n\texports.default = Store;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _is = __webpack_require__(1);\n\t\n\tvar _is2 = _interopRequireDefault(_is);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Minimal push sequencer, apply stores specific task in the right order\n\t */\n\tvar taskQueue = [],\n\t    curWeight = 0,\n\t    maxWeight = 0,\n\t    minWeight = 0,\n\t    taskCount = 0,\n\t    deSync = false,\n\t    deSyncMaxTasks = 10,\n\t    task = void 0,\n\t    isRunning = void 0,\n\t    errorCatcher = {\n\t    lastError: null,\n\t    dispatch: function dispatch(error) {\n\t        errorCatcher.disable();\n\t        if (task && task[0].handleError) {\n\t            task[0].handleError(error, task);\n\t        } else if (task) console.error(\"ReScope : An apply task has failed !!\", task[1], \" on \", task[0].name || task[0].constructor.name);\n\t\n\t        isRunning = false;\n\t        task = null;\n\t        runNow();\n\t    },\n\t    enable: typeof window !== 'undefined' ? function () {\n\t        window.addEventListener('error', errorCatcher.dispatch);\n\t    } : function () {\n\t        process.on('uncaughtException', errorCatcher.dispatch);\n\t    },\n\t    disable: typeof window !== 'undefined' ? function () {\n\t        window.removeEventListener('error', errorCatcher.dispatch);\n\t    } : function () {\n\t        process.removeListener('uncaughtException', errorCatcher.dispatch);\n\t    }\n\t}; /*\n\t    * The MIT License (MIT)\n\t    * Copyright (c) 2019. Wise Wild Web\n\t    *\n\t    * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t    *\n\t    * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t    *\n\t    * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t    *\n\t    *  @author : Nathanael Braun\n\t    *  @contact : n8tz.js@gmail.com\n\t    */\n\t\n\tfunction runNow() {\n\t    if (!isRunning) {\n\t        run();\n\t    }\n\t}\n\t\n\tfunction run() {\n\t    var from = Date.now();\n\t    isRunning = true;\n\t    errorCatcher.enable();\n\t    while (taskCount) {\n\t\n\t        // try for the current weight\n\t        while (!(taskQueue[curWeight] && taskQueue[curWeight].length)) {\n\t            curWeight++;\n\t        }taskCount--;\n\t        task = taskQueue[curWeight].shift();\n\t        //console.log(\"Task : \", task[1], \" on \", task[0].name);\n\t        task[0][task[1]].apply(task[0], task[2]);\n\t    }\n\t    task = undefined;\n\t    errorCatcher.disable();\n\t\n\t    isRunning = false;\n\t    if (taskCount) {\n\t        setTimeout(runNow);\n\t    }\n\t}\n\t\n\t//\n\t//index.setTaskDeSync = ( nb ) => {\n\t//    if ( nb === false )\n\t//        return deSync = false;\n\t//    else if ( nb === true ) {\n\t//        deSync         = true;\n\t//        deSyncMaxTasks = 10;\n\t//    }\n\t//    else (is.int(nb))\n\t//    {\n\t//        deSync         = true;\n\t//        deSyncMaxTasks = nb;\n\t//    }\n\t//};\n\t\n\texports.default = {\n\t    pushTask: function pushTask(obj, fn, argz) {\n\t        /**\n\t         * The more a store have sources, the more it should be processed first\n\t         * So leafs stores stay sync, and root stores receive merged state updates;\n\t         * global state stay coherent\n\t         *\n\t         * This mean whatever the number of stores & the complexity of the deps,\n\t         * updating a store state will update its synchrone child stores immediately\n\t         *\n\t         *\n\t         * @type {*|number}\n\t         */\n\t        var weight = obj._sources && obj._sources.length || 1,\n\t            stack = taskQueue[weight] = taskQueue[weight] || [];\n\t\n\t        maxWeight = Math.max(maxWeight, weight);\n\t        curWeight = Math.min(curWeight, weight);\n\t        taskCount++;\n\t\n\t        //console.log(\"Push Task : \", fn, \" on \", obj.name, weight);\n\t        stack.push([obj, fn, argz]);\n\t        setTimeout(runNow, 0);\n\t        return stack.length;\n\t    }\n\t};\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ../../dist/ReScope.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c3be4199270c791333e7","/*\n * The MIT License (MIT)\n * Copyright (c) 2019. Wise Wild Web\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *  @author : Nathanael Braun\n *  @contact : n8tz.js@gmail.com\n */\n\nlet $global = (typeof window !== 'undefined') ? window : global;\n\nimport Scope from \"./Scope\";\nimport Store from \"./Store\";\n\nconst RS = $global.___rescope || {};\n\nif ( $global.___rescope ) {\n\tconsole.warn(\"ReScope is defined multiple times !! \\nCheck you're packaging\")\n}\nelse {\n\t\n\t$global.___rescope = RS;\n\tScope.Store        = Store;\n\tRS.Scope           = Scope;\n\tRS.Store           = Store;\n\tRS.scopeRef        =\n\t\tfunction scopeRef( map, key ) {\n\t\t\tmap[key] = new Scope.scopeRef(map[key]);\n\t\t\treturn map;\n\t\t};\n\t\n}\nexport default RS;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"is\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"is\"\n// module id = 1\n// module chunks = 0","/*\n * The MIT License (MIT)\n * Copyright (c) 2019. Wise Wild Web\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *  @author : Nathanael Braun\n *  @contact : n8tz.js@gmail.com\n */\n\nimport is                                             from \"is\";\nimport shortid                                        from \"shortid\";\nimport EventEmitter                                   from \"./utils/Emitter\";\nimport {walknSet, walknGet, keyWalknSet, keyWalknGet} from './utils/utils';\n\nconst __proto__push = ( target, id, parent ) => {\n\t      let fn       = function () {\n\t      };\n\t      fn.prototype = parent ? new parent._[id]() : target[id] || {};\n\t      target[id]   = new fn();\n\t      target._[id] = fn;\n      },\n      allScopes     = {};\n\n\n/**\n * Base Scope object\n */\nclass Scope extends EventEmitter {\n\t\n\tstatic persistenceTm = 1;// if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n\tstatic Store         = null;\n\tstatic scopeRef      = function scopeRef( path ) {\n\t\tthis.path = path;\n\t};\n\tstatic scopes        = allScopes;// all active scopes\n\t/**\n\t * get a parsed reference list from stateMap\n\t * @param _ref\n\t * @returns {{storeId, path, alias: *, ref: *}}\n\t */\n\tstatic stateMapToRefList( sm, state = {}, _refs = [], actions = {}, path = \"\" ) {\n\t\tlet applier;\n\t\tObject.keys(sm).forEach(\n\t\t\tkey => {\n\t\t\t\tlet cpath = path ? path + '.' + key : key;\n\t\t\t\t\n\t\t\t\tsm[key] instanceof Scope.scopeRef\n\t\t\t\t? _refs.push(sm[key].path + ':' + cpath)\n\t\t\t\t: (sm[key] && sm[key] instanceof Function)\n\t\t\t\t  ? key == \"$apply\"\n\t\t\t\t    ? applier = sm[key]\n\t\t\t\t    : actions[key] = sm[key]\n\t\t\t\t  : (sm[key] && sm[key].prototype instanceof Scope.Store)\n\t\t\t\t    ? _refs.push(sm[key].as(cpath))\n\t\t\t\t    : state[cpath] = sm[key]\n\t\t\t\t//: this.stateMapToRefList(sm[key], _refs, path + '.' + key)\n\t\t\t}\n\t\t)\n\t\treturn applier;\n\t}\n\t\n\tstatic getScope( scopes ) {\n\t\tlet skey = is.array(scopes) ? scopes.sort(( a, b ) => {\n\t\t\tif ( a.firstname < b.firstname ) return -1;\n\t\t\tif ( a.firstname > b.firstname ) return 1;\n\t\t\treturn 0;\n\t\t}).join('+') : scopes;\n\t\treturn allScopes[skey] = allScopes[skey] || new Scope({}, { id: skey });\n\t};\n\t\n\t\n\t/**\n\t * Init a ReScope scope\n\t *\n\t * @param storesMap {Object} Object with the initial stores definition / instances\n\t * @param config {Object} Scope config\n\t * {\n\t *     parent {scope} @optional parent scope\n\t *\n\t *     id {string} @optional id ( if this id exist storesMap will be merge on the 'id'\n\t *     scope)\n\t *     key {string} @optional key of the scope ( if no id is set, the scope id will be (parent.id+'>'+key)\n\t *     incrementId {bool} @optional true to add a suffix id, if the provided key or id globally exist\n\t *\n\t *     state {Object} @optional initial state by store alias\n\t *     data {Object} @optional initial data by store alias\n\t *\n\t *     rootEmitter {bool} @optional true to not being destabilized by parent\n\t *     boundedActions {array | regexp} @optional list or regexp of actions not propagated to the parent\n\t *     autoDestroy {true | false | 'inherit'}\n\t *     persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when\n\t *     dispose reach 0 autoDestroy  {bool} will trigger retain & dispose after start\n\t *  }\n\t * @returns {Scope}\n\t */\n\tconstructor( storesMap, { parent, upperScope, key, id, snapshot, state, data, incrementId = !!key, persistenceTm, autoDestroy, rootEmitter, boundedActions } = {} ) {\n\t\tsuper();\n\t\tlet _ = {\n\t\t\tkeyPID: (upperScope && upperScope._id || parent && parent._id || shortid.generate()),\n\t\t\tkey,\n\t\t\tincrementId,\n\t\t\tbaseId: id\n\t\t};\n\t\t\n\t\t\n\t\t// generate / set this scope id\n\t\tid = id || key && (_.keyPID + '>' + key);\n\t\t\n\t\t_.isLocalId = !id;\n\t\t\n\t\tid = id || (\"_____\" + shortid.generate());\n\t\t\n\t\tif ( allScopes[id] && !incrementId ) {// overwrite existing scope\n\t\t\tthis._id = id;\n\t\t\tallScopes[id].register(storesMap);\n\t\t\treturn allScopes[id]\n\t\t}\n\t\telse if ( allScopes[id] && incrementId ) {// generate key id\n\t\t\tlet i = -1;\n\t\t\twhile ( allScopes[id + '[' + (++i) + ']'] ) ;\n\t\t\tid = id + '[' + i + ']';\n\t\t}\n\t\t\n\t\t// register this scope in the static Scope.scopes\n\t\tallScopes[id] = this;\n\t\t\n\t\tthis._id  = id;\n\t\tthis._rev = 0;\n\t\t\n\t\tthis._ = _;\n\t\t\n\t\tthis.actions = {};\n\t\tthis.stores  = {};\n\t\tthis.state   = {};\n\t\tthis.data    = {};\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tif ( autoDestroy == 'inherit' )\n\t\t\tautoDestroy = parent && parent._autoDestroy;\n\t\t\n\t\tthis._autoDestroy = autoDestroy;\n\t\t_.persistenceTm   = persistenceTm || this.constructor.persistenceTm;\n\t\t\n\t\tif ( parent && parent.dead )\n\t\t\tthrow new Error(\"Can't use a dead scope as parent !\");\n\t\t\n\t\t__proto__push(this, 'actions', parent);\n\t\t__proto__push(this, 'stores', parent);\n\t\t__proto__push(this, 'state', parent);\n\t\t__proto__push(this, 'data', parent);\n\t\t\n\t\tthis.sources      = [];\n\t\t_.childScopes     = [];\n\t\t_.childScopesList = [];\n\t\t_.unStableChilds  = 0;\n\t\t_.seenChilds      = 0;\n\t\t_._listening      = {};\n\t\t_._scope          = {};\n\t\t_._mixed          = [];\n\t\t_._mixedList      = [];\n\t\t_.followers       = [];\n\t\t\n\t\tthis.__retains = { all: 0 };\n\t\tthis.__locks   = { all: 1 };\n\t\t\n\t\t// todo\n\t\t_._boundedActions = is.array(boundedActions)\n\t\t                    ? { test: boundedActions.includes.bind(boundedActions) }\n\t\t                    : boundedActions;\n\t\t\n\t\t// register to the parent scope\n\t\tif ( parent ) {\n\t\t\tparent.retain(\"isMyParent\");\n\t\t\tif ( !rootEmitter ) {\n\t\t\t\t!parent._stable && this.wait(\"waitingParent\");\n\t\t\t\tparent.on(_._parentList = {\n\t\t\t\t\t'stable'  : s => this.release(\"waitingParent\"),\n\t\t\t\t\t'unstable': s => this.wait(\"waitingParent\"),\n\t\t\t\t\t'update'  : s => this._propag()\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparent.on(_._parentList = {\n\t\t\t\t\t'update': s => this._propag()\n\t\t\t\t});\n\t\t\t}\n\t\t\t// this.register(parent.__scope, state, data);\n\t\t}\n\t\t\n\t\t// register this scope stores\n\t\tthis.register(storesMap, state, data);\n\t\tthis.__locks.all--;\n\t\tthis._stable = !this.__locks.all;\n\t\t\n\t\tif ( parent ) {\n\t\t\tparent._addChild(this);\n\t\t}\n\t\t\n\t\t\n\t\t// restore snapshots\n\t\tthis.restore(snapshot);\n\t\t\n\t\t\n\t\tif ( autoDestroy )\n\t\t\tsetTimeout(\n\t\t\t\ttm => {\n\t\t\t\t\tthis.retain(\"autoDestroy\");\n\t\t\t\t\tthis.dispose(\"autoDestroy\");\n\t\t\t\t}\n\t\t\t)\n\t\t\n\t}\n\t\n\t/**\n\t *\n\t * Mount the stores in storesList, in this scope or in its parents or mixed scopes\n\t *\n\t * @param storeIdList {string|storeRef} Store name, Array of Store names, or Rescope\n\t *     store ref from Store::as or Store:as\n\t * @param state\n\t * @param data\n\t * @returns {Scope}\n\t */\n\tmount( storeIdList, snapshot, state, data ) {\n\t\tif ( is.array(storeIdList) ) {\n\t\t\tstoreIdList.forEach(storeId => this._mount(storeId, snapshot, state, data));\n\t\t}\n\t\telse {\n\t\t\tthis._mount(...arguments);\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t_mount( id, snapshot, state, data ) {\n\t\tlet ref, _ = this._;\n\t\t\n\t\tref = this.parseRef(id)\n\t\t\n\t\tif ( id == \"$parent\" ) return;\n\t\tif ( !_._scope[ref.storeId] ) {//ask mixed || parent\n\t\t\tif ( _._mixed.reduceRight(( mounted, ctx ) => (mounted || ctx._mount(id, snapshot, state, data)), false) ||\n\t\t\t\t!this.parent )\n\t\t\t\treturn;\n\t\t\treturn this.parent._mount(...arguments);\n\t\t}\n\t\telse {\n\t\t\tlet store = _._scope[ref.storeId], taskQueue = [];\n\t\t\tif ( Scope.isStoreClass(store) ) {\n\t\t\t\t_._scope[ref.storeId] = new store(this, {\n\t\t\t\t\t//snapshot,\n\t\t\t\t\tname: ref.storeId,\n\t\t\t\t\tstate,\n\t\t\t\t\tdata\n\t\t\t\t}, taskQueue);\n\t\t\t\twhile ( taskQueue.length ) taskQueue.shift()();\n\t\t\t}\n\t\t\telse if ( Scope.isScopeClass(store) ) {\n\t\t\t\tstore = _._scope[ref.storeId] = new store({ $parent: this }, {\n\t\t\t\t\tkey        : ref.storeId,\n\t\t\t\t\tincrementId: true,\n\t\t\t\t\tupperScope : this\n\t\t\t\t\t//autoDestroy: true\n\t\t\t\t\t//parent: this\n\t\t\t\t});\n\t\t\t\t//_._scope[ ref.storeId ].retain(\"scopedChildScope\");\n\t\t\t\t//_watchStore(ref.storeId);\n\t\t\t\tif ( ref.path.length > 1 )\n\t\t\t\t\t_._scope[ref.storeId].mount(ref.path.slice(1).join('.'), snapshot, state, data)\n\t\t\t\t//else return _._scope[ ref.storeId ];\n\t\t\t}\n\t\t\tif ( Scope.isStore(store) ) {\n\t\t\t\tif ( state !== undefined && data === undefined )\n\t\t\t\t\tstore.setState(state);\n\t\t\t\telse if ( state !== undefined )\n\t\t\t\t\tstore.state = state;\n\t\t\t\t\n\t\t\t\tif ( data !== undefined )\n\t\t\t\t\tstore.push(data);\n\t\t\t}\n\t\t\tthis._watchStore(ref.storeId);\n\t\t}\n\t\t\n\t\t\n\t\treturn _._scope[ref.storeId];\n\t}\n\t\n\t/**\n\t * Register stores in storesMap & link them in the protos\n\t * @param storesMap\n\t * @param state\n\t * @param data\n\t */\n\tregister( storesMap, state = {}, data = {} ) {\n\t\tthis.relink(storesMap, this, false, false);\n\t\tObject.keys(storesMap).forEach(\n\t\t\tid => {\n\t\t\t\tif ( id == \"$parent\" ) return;\n\t\t\t\tif ( storesMap[id].singleton || (is.fn(storesMap[id]) && (state[id] || data[id])) ) {\n\t\t\t\t\tthis._mount(id, undefined, state[id], data[id])\n\t\t\t\t}\n\t\t\t\telse if ( state[id] || data[id] ) {\n\t\t\t\t\tif ( data[id] ) {\n\t\t\t\t\t\tif ( state[id] )\n\t\t\t\t\t\t\tthis.stores[id].state = state[id];\n\t\t\t\t\t\tthis.stores[id].push(data[id]);\n\t\t\t\t\t}\n\t\t\t\t\telse if ( state[id] ) {\n\t\t\t\t\t\tthis.stores[id].setState(state[id]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._watchStore(id);\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t\n\t}\n\t\n\t/**\n\t * Map srcCtx store's on targetCtx headers proto's\n\t * @param srcCtx\n\t * @param targetCtx\n\t * @param state\n\t * @param data\n\t */\n\trelink( srcCtx, targetCtx = this, external, force ) {\n\t\tlet _ = this._;\n\t\tObject.keys(srcCtx)\n\t\t      .forEach(\n\t\t\t      id => {\n\t\t\t\t      let hotReloading;\n\t\t\t\t\n\t\t\t\t      // same store def : ignore\n\t\t\t\t      if ( !force && targetCtx._._scope[id] === srcCtx[id] ||\n\t\t\t\t\t      targetCtx._._scope[id] && (targetCtx._._scope[id].constructor === srcCtx[id]) )\n\t\t\t\t\t      return;\n\t\t\t\t\n\t\t\t\t      // hot switch\n\t\t\t\t      if ( !force && targetCtx._._scope[id] ) {\n\t\t\t\t\t\n\t\t\t\t\t      if ( !external && !is.fn(targetCtx._._scope[id]) ) {\n\t\t\t\t\t\t      console.info(\"Rescope Store : \", id, \" already exist in this scope ! ( Hot switching the store ) !!!\");\n\t\t\t\t\t\t      let tmp                = targetCtx._._scope[id];\n\t\t\t\t\t\t      targetCtx._._scope[id] = srcCtx[id];\n\t\t\t\t\t\t      hotReloading           = tmp.nextState;\n\t\t\t\t\t\t      tmp.destroy();\n\t\t\t\t\t      }\n\t\t\t\t\t\n\t\t\t\t\t      if ( !external && is.fn(targetCtx._._scope[id]) )\n\t\t\t\t\t\t      targetCtx._._scope[id] = srcCtx[id];\n\t\t\t\t\t\n\t\t\t\t      }\n\t\t\t\t      else if ( !force && !external )\n\t\t\t\t\t      _._scope[id] = srcCtx[id];\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t      // map the store id\n\t\t\t\t      Object.defineProperty(\n\t\t\t\t\t      targetCtx._.stores.prototype,\n\t\t\t\t\t      id,\n\t\t\t\t\t      {\n\t\t\t\t\t\t      enumerable  : true,\n\t\t\t\t\t\t      configurable: true,\n\t\t\t\t\t\t      get         : () => _._scope[id]\n\t\t\t\t\t      }\n\t\t\t\t      );\n\t\t\t\t\n\t\t\t\t      // not mapping hierarchic scopes\n\t\t\t\t      if ( id === \"$parent\" ) return;\n\t\t\t\t\n\t\t\t\t      // map state & data\n\t\t\t\t      Object.defineProperty(\n\t\t\t\t\t      targetCtx._.state.prototype,\n\t\t\t\t\t      id,\n\t\t\t\t\t      {\n\t\t\t\t\t\t      enumerable  : true,\n\t\t\t\t\t\t      configurable: true,\n\t\t\t\t\t\t      get         : () => (_._scope[id] && _._scope[id].state),\n\t\t\t\t\t\t      set         : ( v ) => (this._mount(id, undefined, v))\n\t\t\t\t\t      }\n\t\t\t\t      );\n\t\t\t\t      Object.defineProperty(\n\t\t\t\t\t      targetCtx._.data.prototype,\n\t\t\t\t\t      id,\n\t\t\t\t\t      {\n\t\t\t\t\t\t      enumerable  : true,\n\t\t\t\t\t\t      configurable: true,\n\t\t\t\t\t\t      get         : () => (_._scope[id] && _._scope[id].data),\n\t\t\t\t\t\t      set         : ( v ) => (this._mount(id, undefined, undefined, v))\n\t\t\t\t\t      }\n\t\t\t\t      );\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t      // action mapping\n\t\t\t\t      let actions       = srcCtx[id] instanceof Scope.Store\n\t\t\t\t                          ? srcCtx[id].constructor.actions\n\t\t\t\t                          : srcCtx[id].actions,\n\t\t\t\t          activeActions = targetCtx._.actions.prototype;\n\t\t\t\t      if ( Scope.isScope(_._scope[id].prototype) )\n\t\t\t\t\t      this._mount(id);\n\t\t\t\t      if ( Scope.isScope(_._scope[id]) ) {\n\t\t\t\t\t      activeActions[id] = _._scope[id].actions;\n\t\t\t\t      }\n\t\t\t\t      if ( !Scope.isStore(_._scope[id]) && !Scope.isStoreClass(_._scope[id]) )\n\t\t\t\t\t      return;\n\t\t\t\t\n\t\t\t\t      actions &&\n\t\t\t\t      Object.keys(actions)\n\t\t\t\t            .forEach(\n\t\t\t\t\t            ( act ) => {\n\t\t\t\t\t\t            if ( activeActions.hasOwnProperty(act) )\n\t\t\t\t\t\t\t            activeActions[act].__targetStores++;\n\t\t\t\t\t\t            else {\n\t\t\t\t\t\t\t            activeActions[act]                = this.dispatch.bind(this, act);\n\t\t\t\t\t\t\t            activeActions[act].__targetStores = 1;\n\t\t\t\t\t\t            }\n\t\t\t\t\t            }\n\t\t\t\t            );\n\t\t\t\t\n\t\t\t\t      // remount the store if it was hot reloaded\n\t\t\t\t      if ( hotReloading )\n\t\t\t\t\t      this._mount(id, null, hotReloading);\n\t\t\t      }\n\t\t      )\n\t}\n\t\n\t/**\n\t * Make this scope watching the local store 'id'\n\t * @param id\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_watchStore( id ) {\n\t\tlet _ = this._;\n\t\tif ( !_._listening[id] && !is.fn(_._scope[id]) ) {\n\t\t\t!_._scope[id]._autoDestroy && _._scope[id].retain(\"scoped\");\n\t\t\t!_._scope[id].isStable() && this.wait(id);\n\t\t\t_._scope[id].on(\n\t\t\t\t_._listening[id] = {\n\t\t\t\t\t'destroy' : s => {\n\t\t\t\t\t\tdelete _._listening[id];\n\t\t\t\t\t\t_._scope[id] = _._scope[id].constructor;\n\t\t\t\t\t},\n\t\t\t\t\t'update'  : s => this.propag(),\n\t\t\t\t\t'stable'  : s => this.release(id),\n\t\t\t\t\t'unstable': s => this.wait(id)\n\t\t\t\t});\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t/**\n\t * Mix targetCtx on this scope\n\t * Mixed scope parents are NOT mapped\n\t * @param targetCtx\n\t */\n\tmixin( targetCtx ) {\n\t\tlet parent = this.parent,\n\t\t    lists,\n\t\t    _      = this._;\n\t\t\n\t\t_._mixed.push(targetCtx);\n\t\t\n\t\ttargetCtx.retain(\"mixedTo\");\n\t\t\n\t\tif ( !targetCtx._stable )\n\t\t\tthis.wait(targetCtx._id);\n\t\t\n\t\t_._mixedList.push(lists = {\n\t\t\t'stable'  : s => this.release(targetCtx._id),\n\t\t\t'unstable': s => this.wait(targetCtx._id),\n\t\t\t'update'  : s => this._propag()\n\t\t});\n\t\t\n\t\ttargetCtx.on(lists);\n\t\t\n\t\t// reset protos\n\t\t// push new proto with parent\n\t\t__proto__push(this, 'actions', parent);\n\t\t__proto__push(this, 'stores', parent);\n\t\t__proto__push(this, 'state', parent);\n\t\t__proto__push(this, 'data', parent);\n\t\t\n\t\t// bind local accessors in the new proto\n\t\tthis.relink(_._scope, this, false, true);\n\t\t\n\t\t_._mixed.forEach(\n\t\t\tctx => {\n\t\t\t\t// push protos\n\t\t\t\t__proto__push(this, 'actions');\n\t\t\t\t__proto__push(this, 'stores');\n\t\t\t\t__proto__push(this, 'state');\n\t\t\t\t__proto__push(this, 'data');\n\t\t\t\tthis.stores.__origin = \"mixed \" + ctx._id;\n\t\t\t\t// write mixed accessors\n\t\t\t\tctx.relink(ctx._._scope, this, true, true)\n\t\t\t}\n\t\t)\n\t}\n\t\n\t/**\n\t * Bind stores from this scope, his parents or mixed scopes to obj\n\t *\n\t * @param target {React.Component|Store|function}\n\t * @param key {string} stores keys to bind updates\n\t * @param as\n\t * @param setInitial {boolean} false to not propag initial value (default : true)\n\t */\n\tbind( target, key, as, setInitial = true, revMap = {} ) {\n\t\tlet lastRevs, data, refKeys;\n\t\tif ( key && !is.array(key) )\n\t\t\tkey = [key];\n\t\t\n\t\tif ( as === false || as === true ) {\n\t\t\tsetInitial = as;\n\t\t\tas         = null;\n\t\t}\n\t\t\n\t\trefKeys = key\n\t\t\t.map(id => (is.string(id) ? id : id.name))\n\t\t\t.map(id => (this.parseRef(id)));\n\t\t\n\t\t\n\t\tthis._.followers.push(\n\t\t\t[\n\t\t\t\ttarget,\n\t\t\t\tkey,\n\t\t\t\tas || undefined,\n\t\t\t\tlastRevs = refKeys.reduce(( revs, ref ) => {\n\t\t\t\t\trevs[ref.storeId] = revs[ref.storeId] || {\n\t\t\t\t\t\trev : 0,\n\t\t\t\t\t\trefs: []\n\t\t\t\t\t};\n\t\t\t\t\trevs[ref.storeId].refs.push(ref);\n\t\t\t\t\treturn revs;\n\t\t\t\t}, revMap)\n\t\t\t]);\n\t\t\n\t\tthis.mount(key);\n\t\tthis.retainStores(Object.keys(lastRevs), 'listeners');\n\t\t\n\t\tif ( setInitial && this._stable ) {\n\t\t\tdata = this.getUpdates(lastRevs);\n\t\t\tif ( !data ) return this;\n\t\t\tif ( typeof target != \"function\" ) {\n\t\t\t\tif ( as ) target.setState({ [as]: data });\n\t\t\t\telse target.setState(data);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget(data);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Un bind this scope off the given component-keys\n\t * @param target\n\t * @param key\n\t * @returns {Array.<*>}\n\t */\n\tunBind( target, key, as ) {\n\t\tlet followers = this._.followers,\n\t\t    i         = followers && followers.length;\n\t\twhile ( followers && i-- )\n\t\t\tif ( followers[i][0] === target &&\n\t\t\t\t('' + followers[i][1]) == ('' + key) &&\n\t\t\t\tfollowers[i][2] == as ) {\n\t\t\t\tthis.disposeStores(Object.keys(followers[i][3]), 'listeners');\n\t\t\t\treturn followers.splice(i, 1);\n\t\t\t}\n\t}\n\t\n\t/**\n\t * Mount the stores in storeIdList from this scope, its parents and mixed scope\n\t * Bind them to 'to'\n\t * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n\t * @param target\n\t * @param storeIdList\n\t * @param bind\n\t * @returns {Object} Initial outputs of the stores in 'storesList'\n\t */\n\tmap( target, storeIdList, bind = true, revMap ) {\n\t\tlet Store   = this.constructor.Store;\n\t\tstoreIdList = is.array(storeIdList) ? storeIdList : [storeIdList];\n\t\tlet refList = storeIdList.map(this.parseRef);\n\t\tthis.mount(storeIdList);\n\t\tif ( bind && target instanceof Store ) {\n\t\t\tStore.map(target, storeIdList, this, this, false)\n\t\t}\n\t\telse if ( bind ) {\n\t\t\tthis.bind(target, storeIdList, undefined, false);\n\t\t\t\n\t\t\tlet mixedCWUnmount,\n\t\t\t    unMountKey = target.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n\t\t\t\n\t\t\tif ( target.hasOwnProperty(unMountKey) ) {\n\t\t\t\tmixedCWUnmount = target[unMountKey];\n\t\t\t}\n\t\t\t\n\t\t\ttarget[unMountKey] = ( ...argz ) => {\n\t\t\t\tdelete target[unMountKey];\n\t\t\t\tif ( mixedCWUnmount )\n\t\t\t\t\ttarget[unMountKey] = mixedCWUnmount;\n\t\t\t\t\n\t\t\t\tthis.unBind(target, storeIdList);\n\t\t\t\treturn target[unMountKey] && target[unMountKey](...argz);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn revMap && this.getUpdates(revMap)\n\t\t\t|| refList.reduce(( data, ref ) => {\n\t\t\t\twalknSet(data, ref.alias || ref.path, this.retrieve(ref.path))\n\t\t\t\treturn data;\n\t\t\t}, {});\n\t}\n\t\n\t/**\n\t * Get current data value from json path\n\t * @param path\n\t * @returns {string|*}\n\t */\n\tretrieve( path = \"\" ) {\n\t\tpath = is.string(path) ? path.split('.') : path;\n\t\t\n\t\t\n\t\treturn path &&\n\t\t\tthis.stores[path[0]] &&\n\t\t\tthis.stores[path[0]].retrieve &&\n\t\t\tthis.stores[path[0]].retrieve(path.slice(1));\n\t}\n\t\n\t/**\n\t * Restore all nodes in a jsonPath\n\t * @param path\n\t * @returns {string|*}\n\t */\n\trestoreRefPath( path = \"\" ) {\n\t\tpath = is.string(path) ? path.split('.') : path;\n\t\t\n\t\tlet obj, i = 0, cScope = this;\n\t\t\n\t\twhile ( i < path.length ) {\n\t\t\tobj = cScope.stores[path[i]];\n\t\t\tif ( Scope.isScopeClass(obj)\n\t\t\t\t||\n\t\t\t\tScope.isStoreClass(obj) ) {\n\t\t\t\tcScope.mount(path[0]);\n\t\t\t\tobj = cScope.stores[path[i]];\n\t\t\t}\n\t\t\t\n\t\t\tif ( Scope.isScope(obj) ) {\n\t\t\t\tcScope = obj;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if ( Scope.isStore(obj) ) {\n\t\t\t\tobj.restore();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\t/**\n\t * Get target store from json path\n\t * @param path\n\t * @returns {string|*}\n\t */\n\tretrieveStore( path = \"\" ) {\n\t\tpath = is.string(path) ? path.split('.') : path;\n\t\treturn path\n\t\t\t&& path.length\n\t\t\t&& (\n\t\t\t\tpath.length != 1 && this.stores[path[0]].retrieveStore\n\t\t\t\t? this.stores[path[0]].retrieveStore(path.slice(1))\n\t\t\t\t: path.length == 1 && this.stores[path[0]]\n\t\t\t);\n\t}\n\t\n\t/**\n\t * Get or update stores revisions in 'storesRevMap'\n\t * @param storesRevMap\n\t * @param local\n\t * @returns {{}}\n\t */\n\tgetStoresRevs( storesRevMap = {}, local ) {\n\t\tlet ctx = this._._scope;\n\t\tif ( !storesRevMap ) {\n\t\t\tstoresRevMap = {};\n\t\t}\n\t\tObject.keys(ctx).forEach(\n\t\t\tid => {\n\t\t\t\tif ( id == \"$parent\" ) return;\n\t\t\t\tif ( !is.fn(ctx[id])\n\t\t\t\t) {\n\t\t\t\t\tstoresRevMap[id] = ctx[id]._rev;\n\t\t\t\t}\n\t\t\t\telse if ( !storesRevMap.hasOwnProperty(id) )\n\t\t\t\t\tstoresRevMap[id] = false\n\t\t\t}\n\t\t);\n\t\tif ( !local ) {\n\t\t\tthis._._mixed.reduce(( updated, ctx ) => (ctx.getStoresRevs(storesRevMap), storesRevMap), storesRevMap);\n\t\t\tthis.parent && this.parent.getStoresRevs(storesRevMap);\n\t\t}\n\t\treturn storesRevMap;\n\t}\n\t\n\t/**\n\t * Recursively get all stores revs\n\t * @param childs\n\t * @returns {Array}\n\t * @private\n\t */\n\t_getRevMap( storesRevMap = {} ) {\n\t\tlet ctx = this._._scope;\n\t\tObject.keys(ctx).forEach(\n\t\t\tid => {\n\t\t\t\tif ( id == \"$parent\" || storesRevMap[id] ) return;\n\t\t\t\tstoresRevMap[id] = { rev: ctx[id]._rev, refs: [] };\n\t\t\t\t\n\t\t\t});\n\t\tthis._._mixed.reduceRight(\n\t\t\t( storesRevMap, ctx ) => (ctx._getRevMap(storesRevMap)), storesRevMap);\n\t\tthis.parent && this.parent._getRevMap(storesRevMap);\n\t\treturn storesRevMap;\n\t}\n\t\n\t/**\n\t * Get updated output basing storesRevMap's revisions.\n\t * If a store in 'storesRevMap' was updated; add it to 'output' & update storesRevMap\n\t * @param storesRevMap\n\t * @param output\n\t * @param updated\n\t * @returns {*|{}}\n\t */\n\tgetRefsUpdates( refs, revMap, output ) {\n\t\trevMap = revMap || refs\n\t\t\t.map(id => (is.string(id) ? id : id.name))\n\t\t\t.map(id => (this.parseRef(id)))\n\t\t\t.reduce(( revs, ref ) => {\n\t\t\t\trevs[ref.storeId] = revs[ref.storeId] || {\n\t\t\t\t\trev : 0,\n\t\t\t\t\trefs: []\n\t\t\t\t};\n\t\t\t\trevs[ref.storeId].refs.push(ref);\n\t\t\t\treturn revs;\n\t\t\t}, {});\n\t\t\n\t\treturn this.getUpdates(revMap, output)\n\t}\n\t\n\t/**\n\t * Get or update output basing storesRevMap's revisions.\n\t * If a store in 'storesRevMap' was updated; add it to 'output' & update storesRevMap\n\t * @param storesRevMap\n\t * @param output\n\t * @param updated\n\t * @returns {*|{}}\n\t */\n\tgetUpdates( storesRevMap, output, updated ) {\n\t\toutput       = output || {};\n\t\tstoresRevMap = storesRevMap || this._getRevMap();\n\t\tObject.keys(storesRevMap).forEach(\n\t\t\tid => {\n\t\t\t\tlet store        = this.stores[id];\n\t\t\t\tstoresRevMap[id] = storesRevMap[id] || { rev: 0, refs: [] };\n\t\t\t\t\n\t\t\t\tif ( store && is.fn(store) ) {\n\t\t\t\t\tupdated    = true;\n\t\t\t\t\toutput[id] = undefined;\n\t\t\t\t}\n\t\t\t\telse if ( store && store._rev > storesRevMap[id].rev ) {\n\t\t\t\t\tstoresRevMap[id].rev = store._rev;\n\t\t\t\t\tupdated              = true;\n\t\t\t\t\tstoresRevMap[id].refs.forEach(\n\t\t\t\t\t\tref => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toutput[ref.alias] = this.retrieve(ref.path)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\treturn updated && output;\n\t}\n\t\n\t/**\n\t * Recursively get all child scopes\n\t * @param childs\n\t * @returns {Array}\n\t * @private\n\t */\n\t_getAllChilds( childs = [] ) {\n\t\tchilds.push(...this._.childScopes);\n\t\tthis._.childScopes.forEach(\n\t\t\tctx => {\n\t\t\t\tctx._getAllChilds(childs);\n\t\t\t}\n\t\t);\n\t\treturn childs;\n\t}\n\t\n\t/**\n\t * Serialize all active stores state & data in every childs & mixed scopes\n\t *\n\t * Scopes without key or id are ignored\n\t * @param output\n\t * @returns {{}}\n\t */\n\tserialize( cfg = {}, output = {} ) {\n\t\tlet ctx                                  = this._._scope,\n\t\t    { baseId, key, keyPID, incrementId } = this._,\n\t\t    {\n\t\t\t    alias,\n\t\t\t    parentAlias,\n\t\t    }                                    = cfg,\n\t\t    sid                                  = key\n\t\t                                           ? (parentAlias || keyPID) + '>' + key\n\t\t                                           : alias || parentAlias && (parentAlias + '/' + baseId) || this._id;\n\t\t\n\t\t\n\t\t//alias = alias || baseId;\n\t\treturn this.serialize_ex(cfg, output, sid, alias, [\"$parent\"])\n\t}\n\t\n\tserialize_ex( cfg = {}, output = {}, sid, alias, exclude ) {\n\t\tlet _               = this._,\n\t\t    ctx             = _._scope,\n\t\t    { incrementId } = _,\n\t\t    {\n\t\t\t    withChilds = true,\n\t\t\t    withMixed  = true,\n\t\t\t    norefs,\n\t\t    }               = cfg;\n\t\t\n\t\tif ( keyWalknGet(output, sid) ) {\n\t\t\tif ( !incrementId )// done\n\t\t\t\treturn output;\n\t\t\telse if ( incrementId ) {// generate key id\n\t\t\t\tlet i = -1;\n\t\t\t\twhile ( keyWalknGet(output, sid + '[' + (++i) + ']') ) ;\n\t\t\t\tsid = sid + '[' + i + ']';\n\t\t\t}\n\t\t}\n\t\t\n\t\tkeyWalknSet(output, sid, {});\n\t\t\n\t\tObject.keys(ctx).forEach(\n\t\t\tid => {\n\t\t\t\tif ( exclude.includes(id) || Scope.isStoreClass(ctx[id]) || Scope.isScopeClass(ctx[id]) )\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tctx[id].serialize({ ...cfg, parentAlias: sid }, output);\n\t\t\t}\n\t\t)\n\t\t\n\t\twithChilds && _.childScopes.forEach(\n\t\t\tctx => {\n\t\t\t\t!ctx._.isLocalId && ctx.serialize({\n\t\t\t\t\t                                  withChild  : true,\n\t\t\t\t\t                                  withParents: false,\n\t\t\t\t\t                                  parentAlias: sid,\n\t\t\t\t\t                                  withMixed,\n\t\t\t\t\t                                  norefs,\n\t\t\t\t                                  }, output);\n\t\t\t}\n\t\t);\n\t\t\n\t\twithMixed && _._mixed.forEach(\n\t\t\tctx => {\n\t\t\t\t!ctx._.isLocalId && ctx.serialize({\n\t\t\t\t\t                                  withChild  : false,\n\t\t\t\t\t                                  withParents: false,\n\t\t\t\t\t                                  withMixed,\n\t\t\t\t\t                                  norefs\n\t\t\t\t                                  }, output);\n\t\t\t}\n\t\t);\n\t\t\n\t\tif ( alias ) {\n\t\t\toutput = Object.keys(output)\n\t\t\t               .reduce(\n\t\t\t\t               ( h, k ) => (\n\t\t\t\t\t               h[k === this._id\n\t\t\t\t\t                 ? alias\n\t\t\t\t\t                 : k] = output[k],\n\t\t\t\t\t\t               h\n\t\t\t\t               ),\n\t\t\t\t               {}\n\t\t\t               )\n\t\t}\n\t\treturn output;\n\t}\n\t\n\t/**\n\t * Restore state & data from the serialize fn\n\t * @param snapshot\n\t * @param force\n\t */\n\trestore( snapshot, cfg = {}, force = is.bool(cfg) && cfg ) {\n\t\tlet ctx = this._._scope, snap;\n\t\t\n\t\tif ( snapshot && cfg && cfg.alias && cfg.alias != this._id ) {\n\t\t\tsnap = {\n\t\t\t\t...snapshot,\n\t\t\t\t[this._id]: snapshot[cfg.alias]\n\t\t\t}\n\t\t\tdelete snap[cfg.alias];\n\t\t\tsnapshot = snap;\n\t\t}\n\t\tsnapshot = snapshot\n\t\t\t&& keyWalknGet(snapshot, this._id)\n\t\t\t|| this.takeSnapshotByKey(this._id);\n\t\t\n\t\t\n\t\tif ( !snapshot )\n\t\t\treturn;\n\t\t\n\t\tthis._.snapshot = { ...snapshot };\n\t\t\n\t\tsnap          = snapshot['/'];\n\t\tsnapshot['/'] = { ...snap };\n\t\tsnap && Object.keys(snap).forEach(\n\t\t\tname => {\n\t\t\t\tif ( name == \"$parent\" ) return;\n\t\t\t\t\n\t\t\t\tif ( ctx[name] ) {\n\t\t\t\t\t\n\t\t\t\t\tif ( force && !is.fn(ctx[name]) )\n\t\t\t\t\t\tctx[name].destroy();\n\t\t\t\t\t\n\t\t\t\t\tthis._mount(name);// quiet\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t)\n\t\t\n\t\tthis._._mixed.forEach(\n\t\t\tctx => {\n\t\t\t\t!ctx._.isLocalId && ctx.restore(undefined, force);\n\t\t\t}\n\t\t);\n\t\t\n\t\tthis._.childScopes.forEach(\n\t\t\tctx => {\n\t\t\t\t!ctx._.isLocalId && ctx.restore(undefined, force);\n\t\t\t}\n\t\t);\n\t}\n\t\n\tgetSnapshotByKey( key, local ) {\n\t\t// only have the local snap\n\t\tif ( this._.snapshot && key.startsWith(this._id) ) {\n\t\t\tlet obj = keyWalknGet(this._.snapshot, key.substr(this._id.length))\n\t\t\treturn obj;\n\t\t}\n\t\telse return !local\n\t\t\t&& this.parent\n\t\t\t&& this.parent.getSnapshotByKey(key)\n\t\t\t||\n\t\t\tthis.stores.$parent\n\t\t\t&& this.stores.$parent.getSnapshotByKey(key);\n\t\t\n\t}\n\t\n\tgetSnapshotByKeyExt( snapshot, key, local ) {\n\t\t// only have the local snap\n\t\tif ( snapshot ) {\n\t\t\tlet obj = keyWalknGet(snapshot, key)\n\t\t\treturn obj;\n\t\t}\n\t\t\n\t}\n\t\n\ttakeSnapshotByKey( key, local ) {\n\t\tif ( this._.snapshot && key.startsWith(this._id) ) {\n\t\t\tlet obj = keyWalknGet(this._.snapshot, key.substr(this._id.length))\n\t\t\tif ( obj ) {\n\t\t\t\tthis.deleteSnapshotByKey(key, true);\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\t\telse return !local\n\t\t\t&& this.parent\n\t\t\t&& this.parent.takeSnapshotByKey(key)\n\t\t\t||\n\t\t\tthis.stores.$parent\n\t\t\t&& this.stores.$parent.takeSnapshotByKey(key);\n\t}\n\t\n\tdeleteSnapshotByKey( key, local ) {\n\t\tif ( this._.snapshot && key.startsWith(this._id) ) {\n\t\t\tlet obj = keyWalknGet(this._.snapshot, key.substr(this._id.length).replace(/^(.*[\\>|\\/])[^\\>|\\/]+$/ig, '$1'))\n\t\t\tif ( obj )\n\t\t\t\tdelete obj[key.replace(/^.*[\\>|\\/]([^\\>|\\/]+)$/ig, '$1')]\n\t\t}\n\t\treturn !local\n\t\t\t&& this.parent\n\t\t\t&& this.parent.deleteSnapshotByKey(key)\n\t\t\t||\n\t\t\tthis.stores.$parent\n\t\t\t&& this.stores.$parent.deleteSnapshotByKey(key);\n\t}\n\t\n\tsetState( pState ) {\n\t\tObject.keys(pState)\n\t\t      .forEach(k => (this.state[k] = pState[k]))\n\t}\n\t\n\t/**\n\t * get a parsed reference\n\t * @param _ref\n\t * @returns {{storeId, path, alias: *, ref: *}}\n\t */\n\tparseRef( _ref ) {\n\t\tif ( typeof _ref !== 'string' ) {// @todo : rm this\n\t\t\tthis.register({ [_ref.name]: _ref.store });\n\t\t\t_ref = _ref.name;\n\t\t}\n\t\tlet ref = _ref.split(':');\n\t\tref[0]  = ref[0].split('.');\n\t\treturn {\n\t\t\tstoreId: ref[0][0],\n\t\t\tpath   : ref[0],\n\t\t\talias  : ref[1] || ref[0][ref[0].length - 1],\n\t\t\tref    : _ref\n\t\t};\n\t}\n\t\n\t/**\n\t * Dispatch an action to the top parent & mixed scopes, in all stores\n\t *\n\t * @param action\n\t * @param data\n\t * @returns {Scope}\n\t */\n\tdispatch( action, ...argz ) {\n\t\tif ( this.dead ) {\n\t\t\tconsole.warn(\"Dispatch was called on a dead scope, check you're async functions in this stack...\", (new Error()).stack);\n\t\t\treturn;\n\t\t}\n\t\tlet bActs = this._._boundedActions;\n\t\tObject.keys(this._._scope)\n\t\t      .forEach(\n\t\t\t      id => {\n\t\t\t\t      if ( id == \"$parent\" ) return;\n\t\t\t\t      if ( !is.fn(this._._scope[id]) )\n\t\t\t\t\t      this._._scope[id].trigger(action, ...argz);\n\t\t\t      }\n\t\t      );\n\t\t\n\t\tif ( bActs && bActs.test(action) )\n\t\t\treturn this;\n\t\t\n\t\tthis._._mixed.forEach(( ctx ) => (ctx.dispatch(action, ...argz)));\n\t\tthis.parent && this.parent.dispatch(action, ...argz);\n\t\treturn this;\n\t}\n\t\n\ttrigger() {\n\t\tthis.dispatch(...arguments);\n\t}\n\t\n\t/**\n\t * once('stable', cb)\n\t * @param obj {React.Component|Store|function)\n\t * @param key {string} optional key where to map the public state\n\t */\n\tthen( cb ) {\n\t\tif ( !this._stable )\n\t\t\treturn this.once('stable', e => this.then(cb));\n\t\t\n\t\treturn cb(this.data);\n\t}\n\t\n\tonceStableTree( cb ) {\n\t\tif ( this._.unStableChilds )\n\t\t\treturn this.once('stableTree', e => this.onceStableTree(cb));\n\t\treturn cb(this.data);\n\t}\n\t\n\t/**\n\t * Call retain on the scoped stores basing the given list\n\t *\n\t * @param stores\n\t * @param reason\n\t */\n\tretainStores( stores = [], reason ) {\n\t\tstores.forEach(\n\t\t\tid => (this.stores[id] && this.stores[id].retain && this.stores[id].retain(reason))\n\t\t)\n\t}\n\t\n\t/**\n\t * Call retain on the scoped stores\n\t *\n\t * @param stores\n\t * @param reason\n\t */\n\tdisposeStores( stores = [], reason ) {\n\t\tstores.forEach(\n\t\t\tid => (this.stores[id] && this.stores[id].dispose && this.stores[id].dispose(reason))\n\t\t)\n\t}\n\t\n\t/**\n\t * Keep the scope unstable until release is called\n\t * @param reason\n\t */\n\twait( reason ) {\n\t\t//console.log(\"wait\", reason);\n\t\tthis._stable && !this.__locks.all && this.emit(\"unstable\", this);\n\t\tthis._stable = false;\n\t\tthis.__locks.all++;\n\t\tif ( reason ) {\n\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\tthis.__locks[reason]++;\n\t\t}\n\t}\n\t\n\t/**\n\t * Stabilize the scope if no more locks remain (wait fn)\n\t * @param reason\n\t */\n\trelease( reason ) {\n\t\t\n\t\tif ( reason ) {\n\t\t\tif ( this.__locks[reason] == 0 )\n\t\t\t\tconsole.error(\"Release more than locking !\", reason);\n\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\tthis.__locks[reason]--;\n\t\t}\n\t\tif ( !reason && this.__locks.all == 0 )\n\t\t\tconsole.error(\"Release more than locking !\");\n\t\t\n\t\tthis.__locks.all--;\n\t\tif ( !this.__locks.all ) {\n\t\t\tif ( this._.stabilizerTM )\n\t\t\t\treturn;\n\t\t\tthis._.stabilizerTM && clearTimeout(this._.stabilizerTM);\n\t\t\t\n\t\t\tthis._.stabilizerTM = setTimeout(\n\t\t\t\te => {\n\t\t\t\t\tthis._.stabilizerTM = null;\n\t\t\t\t\tif ( this.__locks.all )\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t\tthis._.propagTM && clearTimeout(this._.propagTM);\n\t\t\t\t\tthis._rev++;\n\t\t\t\t\tthis._stable = true;\n\t\t\t\t\tthis.emit(\"stable\", this);\n\t\t\t\t\t\n\t\t\t\t\t!this.dead && this._propag();// stability can induce destroy\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\t\n\t/**\n\t * Propag stores updates basing theirs last updates\n\t */\n\tpropag() {\n\t\tthis._.propagTM && clearTimeout(this._.propagTM);\n\t\tthis._.propagTM = setTimeout(\n\t\t\te => {\n\t\t\t\tthis._.propagTM = null;\n\t\t\t\tthis._propag()\n\t\t\t}, 2\n\t\t);\n\t}\n\t\n\t_propag() {\n\t\tif ( this._.followers.length )\n\t\t\tthis._.followers.forEach(( { 0: obj, 1: key, 2: as, 3: lastRevs, 3: remaps } ) => {\n\t\t\t\tlet data = this.getUpdates(lastRevs);\n\t\t\t\tif ( !data ) return;\n\t\t\t\t//console.log(data, lastRevs)\n\t\t\t\tif ( typeof obj != \"function\" ) {\n\t\t\t\t\t//console.log(\"setState \",obj, Object.keys(data))\n\t\t\t\t\tif ( as ) obj.setState({ [as]: data });\n\t\t\t\t\telse obj.setState(data);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tobj(data, lastRevs && [...lastRevs] || \"no revs\");\n\t\t\t\t}\n\t\t\t\t// lastRevs &&\n\t\t\t\t// key.forEach(id => (lastRevs[id] = this.stores[id] &&\n\t\t\t\t// this.stores[id]._rev || 0));\n\t\t\t});\n\t\tthis.emit(\"update\", this.getUpdates());\n\t}\n\t\n\t/**\n\t * is stable\n\t * @returns bool\n\t */\n\tisStable() {\n\t\treturn this._stable;\n\t}\n\t\n\t/**\n\t * is stable tree\n\t * @returns bool\n\t */\n\tisStableTree() {\n\t\treturn !this._.unStableChilds;\n\t}\n\t\n\t/**\n\t * Register children\n\t * @param scope\n\t * @private\n\t */\n\t_addChild( scope ) {\n\t\tthis._.childScopes.push(scope);\n\t\tthis._.seenChilds++;\n\t\tlet lists     = {\n\t\t\t    'stable'      : s => {\n\t\t\t\t    this._.unStableChilds--;\n\t\t\t\t    if ( !this._.unStableChilds )\n\t\t\t\t\t    this.emit(\"stableTree\", this)\n\t\t\t    },\n\t\t\t    'unstable'    : s => {\n\t\t\t\t    this._.unStableChilds++;\n\t\t\t\t    if ( 1 == this._.unStableChilds )\n\t\t\t\t\t    this.emit(\"unstableTree\", this)\n\t\t\t    },\n\t\t\t    'stableTree'  : s => {\n\t\t\t\t    this._.unStableChilds--;\n\t\t\t\t    if ( !this._.unStableChilds )\n\t\t\t\t\t    this.emit(\"stableTree\", this)\n\t\t\t    },\n\t\t\t    'unstableTree': s => {\n\t\t\t\t    this._.unStableChilds++;\n\t\t\t\t    if ( 1 == this._.unStableChilds )\n\t\t\t\t\t    this.emit(\"unstableTree\", this)\n\t\t\t    },\n\t\t\t    'destroy'     : ctx => {\n\t\t\t\t    if ( ctx._.unStableChilds )\n\t\t\t\t\t    this._.unStableChilds--;\n\t\t\t\t    if ( !ctx.isStable() )\n\t\t\t\t\t    this._.unStableChilds--;\n\t\t\t\t\n\t\t\t\t    if ( !this._.unStableChilds )\n\t\t\t\t\t    this.emit(\"stableTree\", this)\n\t\t\t    }\n\t\t    },\n\t\t    wasStable = this._.unStableChilds;\n\t\t\n\t\t!scope.isStable() && this._.unStableChilds++;\n\t\tscope._.unStableChilds && this._.unStableChilds++;\n\t\tthis._.childScopesList.push(lists);\n\t\t\n\t\tif ( !wasStable && this._.unStableChilds )\n\t\t\tthis.emit(\"unstableTree\", this);\n\t\t\n\t\tscope.on(lists);\n\t}\n\t\n\t_rmChild( ctx ) {\n\t\tlet i         = this._.childScopes.indexOf(ctx),\n\t\t    wasStable = this._.unStableChilds;\n\t\tif ( i != -1 ) {\n\t\t\tthis._.childScopes.splice(i, 1);\n\t\t\t!ctx.isStable() && this._.unStableChilds--;\n\t\t\tctx._.unStableChilds && this._.unStableChilds--;\n\t\t\tctx.un(this._.childScopesList.splice(i, 1)[0]);\n\t\t\tif ( wasStable && !this._.unStableChilds )\n\t\t\t\tthis.emit(\"stableTree\")\n\t\t}\n\t}\n\t\n\tretain( reason ) {\n\t\tthis.__retains.all++;\n\t\t//console.log(\"retain\", this._id, reason);\n\t\tif ( reason ) {\n\t\t\tthis.__retains[reason] = this.__retains[reason] || 0;\n\t\t\tthis.__retains[reason]++;\n\t\t}\n\t}\n\t\n\tdispose( reason ) {\n\t\t//console.log(\"dispose\", this._id, reason);\n\t\tif ( reason ) {\n\t\t\tif ( !this.__retains[reason] )\n\t\t\t\tthrow new Error(\"Dispose more than retaining : \" + reason);\n\t\t\tthis.__retains[reason]--;\n\t\t}\n\t\t\n\t\tif ( !this.__retains.all )\n\t\t\tthrow new Error(\"Dispose more than retaining !\");\n\t\t\n\t\tthis.__retains.all--;\n\t\t\n\t\tif ( !this.__retains.all ) {\n\t\t\t//console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n\t\t\tif ( this._.persistenceTm ) {\n\t\t\t\tthis._.destroyTM && clearTimeout(this._.destroyTM);\n\t\t\t\tthis._.destroyTM = setTimeout(\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.then(s => {\n\t\t\t\t\t\t\t!this.__retains.all && !this.dead && this.destroy()\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tthis._.persistenceTm\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.then(s =>\n\t\t\t\t\t          (!this.__retains.all && !this.dead && this.destroy())\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * order destroy of local stores\n\t */\n\tdestroy() {\n\t\tlet ctx = this._._scope;\n\t\t//console.warn(\"destroy\", this._id);\n\t\tthis._getAllChilds().map(scope => scope.destroy())\n\t\tfor ( let key in ctx )\n\t\t\tif ( !is.fn(ctx[key]) ) {\n\t\t\t\tif ( key == \"$parent\" ) continue;\n\t\t\t\t!ctx[key]._autoDestroy && ctx[key].dispose(\"scoped\");\n\t\t\t}\n\t\tthis._.stabilizerTM && clearTimeout(this._.stabilizerTM);\n\t\tthis._.propagTM && clearTimeout(this._.propagTM);\n\t\tObject.keys(\n\t\t\tthis._._listening\n\t\t).forEach(\n\t\t\tid => ((id !== \"$parent\") && this._._scope[id].removeListener(this._._listening[id]))\n\t\t);\n\t\twhile ( this._._mixedList.length ) {\n\t\t\tthis._._mixed[0].removeListener(this._._mixedList.shift());\n\t\t\tthis._._mixed.shift().dispose(\"mixedTo\");\n\t\t}\n\t\t[...this._.followers].map(follower => this.unBind(...follower));\n\t\tif ( this._._parentList ) {\n\t\t\tthis.parent._rmChild(this);\n\t\t\tthis.parent.removeListener(this._._parentList);\n\t\t\tthis.parent.dispose(\"isMyParent\");\n\t\t\tthis._._parentList = null;\n\t\t}\n\t\tthis.dead = true;\n\t\tdelete allScopes[this._id];\n\t\tthis.emit(\"destroy\", this);\n\t\t\n\t\t\n\t}\n}\n\n\nScope.isScope = function ( obj ) {\n\treturn obj instanceof Scope\n};\n\nScope.isScopeClass = function ( obj ) {\n\treturn Scope.isPrototypeOf(obj) || obj === Scope\n};\nexport default Scope;\n\n\n// WEBPACK FOOTER //\n// ./src/Scope.js","/*\n * The MIT License (MIT)\n * Copyright (c) 2019. Wise Wild Web\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *  @author : Nathanael Braun\n *  @contact : n8tz.js@gmail.com\n */\n\nimport is from 'is';\n\nexport default class Emitter {\n\t_events = {};\n\t\n\ton( evt, cb ) {\n\t\tif ( !is.string(evt) && evt )\n\t\t\treturn Object.keys(evt).forEach(k => this.on(k, evt[k]));\n\t\t\n\t\tthis._events[evt] = this._events[evt] || [];\n\t\tthis._events[evt].push(cb);\n\t}\n\t\n\tun( evt, cb ) {\n\t\tif ( !is.string(evt) && evt )\n\t\t\treturn Object.keys(evt).forEach(k => this.un(k, evt[k]));\n\t\t\n\t\tif ( !this._events[evt] ) return;\n\t\tlet i = this._events[evt].indexOf(cb);\n\t\tthis._events[evt].splice(i, 1);\n\t}\n\t\n\temit( evt, ...argz ) {\n\t\tif ( !this._events[evt] ) return;\n\t\tlet lists = [...this._events[evt]];\n\t\t\n\t\tfor ( let i = 0; i < lists.length; i++ )\n\t\t\tlists[i](...argz)\n\t}\n\t\n\taddListener() {\n\t\tthis.on(...arguments);\n\t}\n\t\n\tremoveListener() {\n\t\tthis.un(...arguments);\n\t}\n\t\n\tremoveAllListeners() {\n\t\tthis._events = {};\n\t}\n\t\n\tonce( evt, cb ) {\n\t\tlet fn;\n\t\tthis.on(evt, fn = ( ...argz ) => {\n\t\t\tthis.un(evt, fn);\n\t\t\tcb(...argz)\n\t\t});\n\t}\n\t\n\t\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Emitter.js","/*\n * The MIT License (MIT)\n * Copyright (c) 2019. Wise Wild Web\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *  @author : Nathanael Braun\n *  @contact : n8tz.js@gmail.com\n */\n\nconst is = require('is');\n\nexport function walknSet( obj, path, value, stack ) {\n\tif ( is.string(path) )\n\t\tpath = path.split('.');\n\tif ( !path.length )\n\t\treturn false;\n\telse if ( path.length == 1 )\n\t\treturn obj[path[0]] = stack\n\t\t                      ? [...(obj[path[0]] || []), value]\n\t\t                      : value;\n\telse\n\t\treturn walknSet(\n\t\t\tobj[path[0]] =\n\t\t\t\tobj[path[0]] || {},\n\t\t\tpath.slice(1),\n\t\t\tvalue, stack\n\t\t);\n}\n\nexport function walknGet( obj, path, isKey ) {\n\tif ( is.string(path) )\n\t\tpath = path.split('.');\n\treturn path.length\n\t       ? obj[path[0]] && walknGet(obj[path[0]], path.slice(1))\n\t       : obj;\n}\n\n//@todo\nexport function keyWalknSet( obj, path, value, stack ) {\n\tif ( is.string(path) )\n\t\tpath = path.split(/(\\>|\\/)/ig).filter(v => (v !== '>' && v));\n\treturn walknSet(obj, path, value);\n}\n\nexport function keyWalknGet( obj, path, isKey ) {\n\tif ( is.string(path) )\n\t\tpath = path.split(/(\\>|\\/)/ig).filter(v => (v !== '>' && v));\n\treturn path.length\n\t       ? obj[path[0]] && walknGet(obj[path[0]], path.slice(1))\n\t       : obj;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","module.exports = require(\"shortid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 5\n// module chunks = 0","/*\n * The MIT License (MIT)\n * Copyright (c) 2019. Wise Wild Web\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *  @author : Nathanael Braun\n *  @contact : n8tz.js@gmail.com\n */\n\nconst is                           = require('is'),\n      Scope                        = require('./Scope'),\n      { keyWalknSet, keyWalknGet } = require('./utils/utils'),\n      EventEmitter                 = require('./utils/Emitter'),\n      TaskSequencer                = require('./utils/TaskSequencer'),\n      shortid                      = require('shortid'),\n      objProto                     = Object.getPrototypeOf({});\n\nclass Store extends EventEmitter {\n\t//static use                  = [];// overridable list of source stores\n\tstatic follow;// overridable list of store that will allow push if updated\n\tstatic require;\n\tstatic staticScope   = new Scope({}, { id: \"static\" });\n\tstatic state         = undefined;// default state\n\t/**\n\t * if retain goes to 0 :\n\t * false to not destroy,\n\t * 0 to sync auto destroy\n\t * Ms to autodestroy after tm ms if no retain has been called\n\t * @type {boolean|Int}\n\t */\n\tstatic persistenceTm = false;\n\t\n\t/**\n\t * Constructor, will build a rescope store\n\t *\n\t * (scope, {require,use,apply,state, data})\n\t * (scope)\n\t *\n\t * @param scope {object} scope where to find the other stores (default : static\n\t *     staticScope )\n\t * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\",\n\t *     otherStore.as(\"otherKey\")]\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tlet argz         = [...arguments],\n\t\t    _static      = this.constructor,\n\t\t    scope        = argz[0] instanceof Scope\n\t\t                   ? argz.shift()\n\t\t                   : _static.scope ? Scope.getScope(_static.scope)\n\t\t                                   : is.string(argz[0])\n\t\t                                     ? Scope.getScope(argz.shift())\n\t\t                                     : _static.staticScope,\n\t\t    cfg          = argz[0] && !is.array(argz[0]) && !is.string(argz[0])\n\t\t                   ? argz.shift()\n\t\t                   : {},\n\t\t    taskQueue    = is.array(argz[0]) ? argz.shift() : null,\n\t\t    name         = cfg.name || _static.name,\n\t\t    watchs       = cfg.use || [],\n\t\t    apply        = cfg.apply || null,\n\t\t    initialState = _static.state || _static.initialState || _static.defaultState;\n\t\t\n\t\tthis._uid = cfg._uid || shortid.generate();\n\t\t\n\t\tthis.__retains    = { all: 0 };\n\t\tthis.__locks      = { all: 0 };\n\t\tthis._onStabilize = [];\n\t\t\n\t\t// autoDestroyTm\n\t\tthis._autoDestroy   = !!this._persistenceTm;\n\t\tthis._persistenceTm = cfg.persistenceTm || _static.persistenceTm || (cfg.autoDestroy || _static.autoDestroy) && 5;\n\t\tthis._cfg           = cfg;\n\t\t\n\t\tif ( cfg && cfg.on ) {\n\t\t\tthis.on(cfg.on);\n\t\t}\n\t\t\n\t\tthis.name = name;\n\t\t\n\t\tif ( scope.stores ) {\n\t\t\tthis.scopeObj = scope;\n\t\t\tthis.scope    = scope.stores;\n\t\t}\n\t\telse {\n\t\t\tthis.scopeObj = new Scope(scope);\n\t\t\tthis.scope    = scope.stores;\n\t\t}\n\t\t\n\t\t// standardized scope access\n\t\tthis.$scope    = this.scopeObj;\n\t\tthis.$stores   = this.scopeObj.stores;\n\t\tthis.$actions  = this.scopeObj.actions;\n\t\tthis.$dispatch = this.scopeObj.dispatch.bind(this.scopeObj);\n\t\t\n\t\tthis._rev     = this.constructor._rev || 0;\n\t\tthis._revs    = {};\n\t\tthis.stores   = {};\n\t\tthis._require = [];\n\t\tthis._sources = [name];\n\t\t\n\t\t// register source stores\n\t\tif ( is.array(_static.use) ) {\n\t\t\tthis._use = [...watchs, ...(_static.use || []).map(\n\t\t\t\tkey => {\n\t\t\t\t\tlet ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n\t\t\t\t\tif ( ref[1] ) {\n\t\t\t\t\t\tlet ref2 = ref[2].split('.');\n\t\t\t\t\t\tthis._require.push(ref[3] || ref2[ref2.length - 1]);// require check value of the aliased\n\t\t\t\t\t                                                        // imported value\n\t\t\t\t\t\treturn key.substr(1);\n\t\t\t\t\t}\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\t\t\t)];\n\t\t}\n\t\telse {\n\t\t\tthis._use = [...watchs, ...(\n\t\t\t\t_static.use ? Object.keys(_static.use)\n\t\t\t\t                    .map(\n\t\t\t\t\t                    key => {\n\t\t\t\t\t\t                    let ref = key.match(/^(\\!?)(.*)$/);\n\t\t\t\t\t\t                    ref[1] && this._require.push(_static.use[key]);\n\t\t\t\t\t\t                    return ref[2] + ((_static.use[key] === true)\n\t\t\t\t\t\t                                     ? ''\n\t\t\t\t\t\t                                     : ':' + _static.use[key]);\n\t\t\t\t\t                    }\n\t\t\t\t                    ) : []\n\t\t\t)];\n\t\t}\n\t\t\n\t\tif ( _static.require )\n\t\t\tthis._require.push(..._static.require);\n\t\tif ( cfg.require )\n\t\t\tthis._require.push(...cfg.require);\n\t\t\n\t\tthis._followers = [];\n\t\tthis._changesSW = initialState || {};\n\t\tthis.state      = initialState && {};\n\t\t\n\t\tif ( apply )\n\t\t\tthis.apply = apply;\n\t\t\n\t\t/**\n\t\t * Initial state isn't fully initialized ( childs constructors can set it )\n\t\t * Scope based instance have taskQueue to delay init synchronously, if not\n\t\t * present we use setTimeout\n\t\t */\n\t\tif ( taskQueue ) {\n\t\t\ttaskQueue.push(this._afterConstructor.bind(this))\n\t\t}\n\t\telse\n\t\t\tsetTimeout(this._afterConstructor.bind(this))\n\t}\n\t\n\t/**\n\t * Get the incoming state ( for immediate state relative actions )\n\t * @returns {{}|*}\n\t */\n\tget nextState() {\n\t\treturn this._changesSW && { ...this.state, ...this._changesSW } || this.state;\n\t}\n\t\n\t_afterConstructor() {\n\t\tlet cfg          = this._cfg,\n\t\t    _static      = this.constructor,\n\t\t    snapshot     = this.restore(undefined, true),\n\t\t    initialState = this.state,\n\t\t    initialData  = this.data,\n\t\t    applied;\n\t\t{\n\t\t\t\n\t\t\tif ( initialData )\n\t\t\t\tthis.data = initialData;\n\t\t\telse if ( _static.data !== undefined )\n\t\t\t\tthis.data = { ..._static.data };\n\t\t\telse if ( cfg.hasOwnProperty(\"data\") )\n\t\t\t\tthis.data = cfg.data;\n\t\t\t\n\t\t\tif ( cfg.hasOwnProperty(\"state\") && cfg.state !== undefined )\n\t\t\t\tinitialState = { ...initialState, ...cfg.state };\n\t\t\t\n\t\t\tif ( this.data === undefined ) {\n\t\t\t\tif ( initialState || this._use.length ) {// sync apply\n\t\t\t\t\tthis._changesSW = {\n\t\t\t\t\t\t...this._changesSW,\n\t\t\t\t\t\t...(initialState || {}),\n\t\t\t\t\t\t...this.$scope.map(this, this._use)\n\t\t\t\t\t};\n\t\t\t\t\tthis.state      = {};\n\t\t\t\t\tif ( this.shouldApply(this._changesSW) && this.data === undefined ) {\n\t\t\t\t\t\tthis.data       = this.apply(this.data, this._changesSW, this._changesSW);\n\t\t\t\t\t\tapplied         = true;\n\t\t\t\t\t\tthis.state      = this._changesSW;\n\t\t\t\t\t\tthis._changesSW = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapplied         = true;\n\t\t\t\tthis.state      = {// assume this state is sync with initial data\n\t\t\t\t\t...this._changesSW,\n\t\t\t\t\t...(initialState || {}),\n\t\t\t\t\t...this.$scope.map(this, this._use)\n\t\t\t\t}\n\t\t\t\tthis._changesSW = {};\n\t\t\t}\n\t\t}\n\t\tif ( (this.data !== undefined || applied) && !this.__locks.all ) {\n\t\t\tthis._stable = true;\n\t\t\tthis._rev++;\n\t\t}\n\t\telse {\n\t\t\tthis._stable = false;\n\t\t\tif ( !_static.managed && !this.state && (!this._use || !this._use.length) ) {\n\t\t\t\tconsole.warn(\"ReScope store '\", this.name, \"' have no initial data, state or use. It can't stabilize...\");\n\t\t\t}\n\t\t}\n\t\t!this._stable && this.emit('unstable', this.state);\n\t\t\n\t}\n\t\n\t/**\n\t * Overridable method to know if a data change should be propag to the listening\n\t * stores & components\n\t */\n\tshouldPropag( nDatas ) {\n\t\treturn true;\n\t}\n\t\n\t/**\n\t * Overridable method to choose if this store should be serialized,\n\t * If not it will be applied normally when restoring\n\t * @returns {boolean}\n\t */\n\tshouldSerialize() {\n\t\treturn true;\n\t}\n\t\n\thasDataChange( nDatas ) {\n\t\tlet _static = this.constructor, r,\n\t\t    cDatas  = this.data;\n\t\tr           = !cDatas && nDatas || cDatas !== nDatas;\n\t\t!r && cDatas && Object.keys(cDatas).forEach(\n\t\t\t( key ) => {\n\t\t\t\tr = r || (nDatas\n\t\t\t\t          ? cDatas[key] !== nDatas[key]\n\t\t\t\t          : cDatas && cDatas[key])\n\t\t\t}\n\t\t);\n\t\t!r && nDatas && Object.keys(nDatas).forEach(\n\t\t\t( key ) => {\n\t\t\t\tr = r || (nDatas\n\t\t\t\t          ? cDatas[key] !== nDatas[key]\n\t\t\t\t          : cDatas && cDatas[key])\n\t\t\t}\n\t\t);\n\t\treturn r;\n\t}\n\t\n\t/**\n\t * Overridable method to know if a state change should be applied\n\t */\n\tshouldApply( state = this.state ) {\n\t\tlet _static = this.constructor;\n\t\t\n\t\treturn (\n\t\t\t!!this.isComplete(state)\n\t\t) && (is.array(_static.follow)\n\t\t      ? _static.follow\n\t\t               .reduce(( r, i ) => (r || state && state[i]), false)\n\t\t      : _static.follow\n\t\t        ? Object.keys(_static.follow)\n\t\t                .reduce(( r, i ) => (\n\t\t\t                r\n\t\t\t                || state && is.fn(_static.follow[i]) && _static.follow[i].call(this, state[i])\n\t\t\t                || _static.follow[i] && state[i] !== this.state[i]\n\t\t                ), false) : true\n\t\t);\n\t}\n\t\n\t/**\n\t * Overridable applier / remapper\n\t * If state or lastPublicState are simple hash maps apply will return {...data,\n\t * ...state} if not it will return the last private state\n\t * @param data\n\t * @param state\n\t * @returns {*}\n\t */\n\tapply( data, state, changes ) {\n\t\tstate = state || this.state;\n\t\t\n\t\tif ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n\t\t\treturn state;\n\t\telse\n\t\t\treturn { ...data, ...state }\n\t}\n\t\n\t/**\n\t * Debounce this store propagation ( & reducing )\n\t * @param cb\n\t */\n\tstabilize( cb ) {\n\t\tcb && this.once('stable', cb);\n\t\tthis._stable && this.emit('unstable', this.state, this.data);\n\t\t\n\t\tthis._stable = false;\n\t\t\n\t\tif ( this._stabilizer )\n\t\t\treturn;\n\t\t\n\t\tthis._stabilizer = TaskSequencer.pushTask(this, 'pushState');\n\t}\n\t\n\t/**\n\t * Walk n get\n\t * @param path\n\t * @param i\n\t * @param obj\n\t * @returns {*|{}}\n\t */\n\tretrieve( path, i = 0, obj = this.data ) {\n\t\tpath = is.string(path) ? path.split('.') : path;\n\t\treturn !obj || !path || !path.length\n\t\t       ? obj\n\t\t       : path.length == i + 1\n\t\t         ? obj[path[i]]\n\t\t         : this.retrieve(path, i + 1, obj[path[i]]);\n\t}\n\t\n\tdispatch( action, ...argz ) {\n\t\tthis.scopeObj.dispatch(action, ...argz);\n\t}\n\t\n\ttrigger( action, ...argz ) {\n\t\tlet { actions } = this.constructor;\n\t\tif ( actions && actions[action] ) {\n\t\t\tlet ns = actions[action].call(this, ...argz);\n\t\t\tns && this.setState(ns);\n\t\t}\n\t}\n\t\n\t/**\n\t * Set & Push the result data to followers if stable\n\t * @param cb\n\t */\n\tpush( data, force, cb ) {\n\t\tcb    = force === true ? cb : force;\n\t\tforce = force === true;\n\t\tif ( !force &&\n\t\t\t(\n\t\t\t\t!this.hasDataChange(data)\n\t\t\t)\n\t\t) {\n\t\t\tcb && cb();\n\t\t\tif ( !this.__locks.all ) {\n\t\t\t\tlet stable   = this._stable;\n\t\t\t\tthis._stable = true;\n\t\t\t\t!stable && this.emit('stable', this.state, this.data);\n\t\t\t\tthis._stabilizer = null;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis.data = data;\n\t\tthis.wait();\n\t\tthis.release(cb);\n\t\t\n\t}\n\t\n\t/**\n\t * Call the apply fn using the current accumulated state update then, push the\n\t * resulting data if stable\n\t * @param force\n\t */\n\tpushState( force ) {\n\t\t\n\t\tif ( !force && !this._changesSW && this.data )\n\t\t\treturn;\n\t\t\n\t\tlet nextState = this._nextState || { ...this.state, ...(this._changesSW || {}) },\n\t\t    nextData  = this.apply(this.data, nextState, this._changesSW);\n\t\t\n\t\tthis._stabilizer = null;\n\t\tthis.state       = nextState;\n\t\tthis._changesSW  = null;\n\t\t\n\t\tif ( !force &&\n\t\t\t(\n\t\t\t\t!this.hasDataChange(nextData)\n\t\t\t)\n\t\t) {\n\t\t\tif ( !this.__locks.all ) {\n\t\t\t\tlet stable   = this._stable;\n\t\t\t\tthis._stable = true;\n\t\t\t\t!stable && this.emit('stable', this.state, this.data);\n\t\t\t\tthis._stabilizer = null;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis.data = nextData;\n\t\tthis.wait();\n\t\tthis.release();\n\t\t\n\t}\n\t\n\t/**\n\t * Add 'pState' to the current accumulated state updates\n\t * & wait source stores stabilization before pushing these state updates\n\t * @param pState\n\t * @param cb\n\t */\n\tsetState( pState, cb, sync ) {\n\t\tlet i       = 0, change,\n\t\t    changes = this._changesSW = this._changesSW || {};\n\t\tfor ( let k in pState )\n\t\t\tif ( !this.state\n\t\t\t\t|| changes.hasOwnProperty(k)// todo\n\t\t\t\t&& (\n\t\t\t\t\tpState[k] !== changes[k]\n\t\t\t\t) || pState.hasOwnProperty(k)\n\t\t\t\t&& (\n\t\t\t\t\tpState[k] !== this.state[k]\n\t\t\t\t\t//||\n\t\t\t\t\t//(this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n\t\t\t\t) ) {\n\t\t\t\tchange        = true;\n\t\t\t\t//this._revs[k] = pState[k] && pState[k]._rev || true;\n\t\t\t\tchanges[k]    = pState[k];\n\t\t\t}\n\t\t\n\t\tthis._nextState = { ...this.state, ...changes };\n\t\tif ( !this.shouldApply(this._nextState) ) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif ( sync ) {\n\t\t\tthis.pushState();\n\t\t\tcb && cb();\n\t\t}\n\t\telse {\n\t\t\tif ( change ) {\n\t\t\t\tthis.stabilize(cb);\n\t\t\t}\n\t\t\telse cb && cb();\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Update the current state & push it\n\t * @param pState\n\t * @param cb\n\t */\n\tsetStateSync( pState ) {\n\t\tlet i       = 0, change,\n\t\t    changes = this._changesSW = this._changesSW || {};\n\t\tfor ( let k in pState )\n\t\t\tif ( !this.state || pState.hasOwnProperty(k)\n\t\t\t\t&& (\n\t\t\t\t\tpState[k] !== this.state[k]\n\t\t\t\t\t//||\n\t\t\t\t\t//(this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n\t\t\t\t) ) {\n\t\t\t\tchange        = true;\n\t\t\t\tthis._revs[k] = pState[k] && pState[k]._rev || true;\n\t\t\t\tchanges[k]    = pState[k];\n\t\t\t}\n\t\tthis.shouldApply({ ...(this.state || {}), ...changes }) && this.pushState();\n\t\treturn this.data;\n\t}\n\t\n\t/**\n\t * get a store-key pair for Store::map\n\t * @param {string} name\n\t * @returns {{store: Store, name: *}}\n\t */\n\tas( name ) {\n\t\treturn { store: this, name };\n\t}\n\t\n\ton( lists ) {\n\t\tif ( !is.string(lists) && lists )\n\t\t\tObject.keys(lists).forEach(k => super.on(k, lists[k]));\n\t\telse super.on(...arguments);\n\t}\n\t\n\tremoveListener( lists ) {\n\t\tif ( !is.string(lists) && lists )\n\t\t\tObject.keys(lists).forEach(k => super.removeListener(k, lists[k]));\n\t\telse super.removeListener(...arguments);\n\t}\n\t\n\t/**\n\t * is complete (all requiered keys are here)\n\t * @returns bool\n\t */\n\tisComplete( state = this.state ) {\n\t\treturn (\n\t\t\t!this._require\n\t\t\t|| !this._require.length\n\t\t\t|| state && this._require.reduce(\n\t\t\t\t( r, key ) => (r && state[key]),\n\t\t\t\ttrue\n\t\t\t)\n\t\t);\n\t}\n\t\n\t/**\n\t * is stable\n\t * @returns bool\n\t */\n\tisStable() {\n\t\treturn this._stable;\n\t}\n\t\n\t/**\n\t * Serialize state & data with sources refs\n\t * @returns bool\n\t */\n\tserialize( cfg = {}, output = {} ) {\n\t\t\n\t\tlet sId        = cfg.parentAlias || this.scopeObj._id,\n\t\t    refsCount  = 0,\n\t\t    refs       =\n\t\t\t    !cfg.norefs && is.array(this._use) && this._use.reduce(\n\t\t\t    ( map, key ) => {\n\t\t\t\t    let ref   = this.$scope.parseRef(key),\n\t\t\t\t        store = this.$stores[ref.storeId];\n\t\t\t\t    if ( store && Store.isStore(store) && !store.scopeObj._.isLocalId )\n\t\t\t\t\t    refsCount++, map[ref.alias] = ref.path;\n\t\t\t\t\n\t\t\t\t    return map;\n\t\t\t    }, {}\n\t\t\t    ),\n\t\t    state      = this.state || {},\n\t\t    persistent = this.shouldSerialize();\n\t\t\n\t\tif ( !persistent ) {\n\t\t\tkeyWalknSet(\n\t\t\t\toutput,\n\t\t\t\t(sId + '/' + this.name),\n\t\t\t\t{\n\t\t\t\t\tdataRefs: cfg.dataRefs,\n\t\t\t\t\trefs\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn output;\n\t\t}\n\t\t\n\t\tlet\n\t\t\tstateKeys   = Object.keys(state) || [],\n\t\t\tstateRefs   = stateKeys.map(k => state[k]),\n\t\t\tinRefsCount = 0,\n\t\t\tdataRefs    = cfg.dataRefs || {},\n\t\t\tinRefs      =\n\t\t\t\t!cfg.norefs && this.data && (Object.keys(this.data).reduce(\n\t\t\t\t( map, key ) => {\n\t\t\t\t\tlet ref = stateRefs.indexOf(this.data[key])\n\t\t\t\t\tif ( ref != -1 )\n\t\t\t\t\t\tinRefsCount++, map[key] = stateKeys[ref];\n\t\t\t\t\treturn map;\n\t\t\t\t}, {}\n\t\t\t\t)),\n\t\t\tsnap        = {\n\t\t\t\tdataRefs: cfg.dataRefs,\n\t\t\t\tstate   : state &&\n\t\t\t\t\t(\n\t\t\t\t\t\tcfg.norefs\n\t\t\t\t\t\t? { ...state }\n\t\t\t\t\t\t: Object.keys(state).reduce(( h, k ) => (!refs[k] && (h[k] = state[k]), h), {})\n\t\t\t\t\t),\n\t\t\t\tdata    : (\n\t\t\t\t\t\tthis.data &&\n\t\t\t\t\t\tthis.data.__proto__ === objProto ?\n\t\t\t\t\t\tObject\n\t\t\t\t\t\t\t.keys(this.data)\n\t\t\t\t\t\t\t.reduce(\n\t\t\t\t\t\t\t\t( h, k ) => {\n\t\t\t\t\t\t\t\t\tif ( !inRefs[k] && !dataRefs[k] ) {\n\t\t\t\t\t\t\t\t\t\th[k] = this.data[k];\n\t\t\t\t\t\t\t\t\t\tinRefsCount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn h\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t                                 :\n\t\t\t\t\t\t(is.bool(this.data)\n\t\t\t\t\t\t\t|| is.number(this.data)\n\t\t\t\t\t\t\t|| is.string(this.data)) && this.data\n\t\t\t\t\t)\n\t\t\t\t\t|| undefined\n\t\t\t\t\n\t\t\t};\n\t\t\n\t\trefs && refsCount && (snap.refs = refs);\n\t\tinRefs && inRefsCount && (\n\t\t\tsnap.inRefs = inRefs);\n\t\t\n\t\t\n\t\tkeyWalknSet(\n\t\t\toutput,\n\t\t\t(sId + '/' + this.name),\n\t\t\tsnap\n\t\t);\n\t\treturn output;\n\t}\n\t\n\t/**\n\t * restore state & data\n\t * @returns bool\n\t */\n\trestore( snapshot, immediate ) {\n\t\tsnapshot = snapshot\n\t\t\t&& keyWalknGet(snapshot, this.scopeObj._id + '/' + this.name)\n\t\t\t|| this.$scope.takeSnapshotByKey(this.scopeObj._id + '/' + this.name);\n\t\t\n\t\tif ( !snapshot )\n\t\t\treturn;\n\t\t\n\t\tif ( snapshot ) {\n\t\t\t\n\t\t\tif ( !this.isStable() && !immediate )\n\t\t\t\tthis.then(() => restore(snapshot));\n\t\t\t\n\t\t\tthis.state = { ...snapshot.state };\n\t\t\tsnapshot.refs && Object.keys(snapshot.refs).forEach(\n\t\t\t\t( key ) => {//todo\n\t\t\t\t\tthis.state[key] = this.$scope.retrieve(snapshot.refs[key]);\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\t\n\t\t\tif ( snapshot.inRefs === true ) {\n\t\t\t\tthis.data = { ...this.state };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.data = snapshot.data;\n\t\t\t\tsnapshot.inRefs && Object.keys(snapshot.inRefs).forEach(\n\t\t\t\t\t( key ) => {//todo\n\t\t\t\t\t\tthis.data[key] = this.state[snapshot.inRefs[key]];\n\t\t\t\t\t\t//else\n\t\t\t\t\t\t//    console.warn('not found : ', key, snap && snap.refs[ key ])\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tif ( snapshot.dataRefs ) {\n\t\t\t\tthis.data = this.data || {};\n\t\t\t\tObject.keys(snapshot.dataRefs).forEach(\n\t\t\t\t\t( key ) => {//todo\n\t\t\t\t\t\tthis.$scope.restoreRefPath(snapshot.dataRefs[key]);\n\t\t\t\t\t\tthis.data[key] = this.$scope.retrieve(snapshot.dataRefs[key]);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\t\n\t/**\n\t * Bind this store changes to the given component-key\n\t * @param obj {React.Component|Store|function)\n\t * @param key {string} optional key where to map the public state\n\t */\n\tbind( obj, key, setInitial = true, path ) {\n\t\tthis._followers.push([obj, key, path]);\n\t\tif ( setInitial && this.data && this._stable ) {\n\t\t\tlet data = path ? this.retrieve(path) : this.data;\n\t\t\tif ( typeof obj != \"function\" ) {\n\t\t\t\tif ( key ) obj.setState({ [key]: data });\n\t\t\t\telse obj.setState(data);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobj(data);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Un bind this store off the given component-key\n\t * @param obj\n\t * @param key\n\t * @returns {Array.<*>}\n\t */\n\tunBind( obj, key, path ) {\n\t\tlet followers = this._followers,\n\t\t    i         = followers && followers.length;\n\t\twhile ( followers && i-- )\n\t\t\tif ( followers[i][0] === obj && followers[i][1] === key && followers[i][2] === path )\n\t\t\t\treturn followers.splice(i, 1);\n\t}\n\t\n\t\n\t/**\n\t * once('stable', cb)\n\t * @param obj {React.Component|Store|function)\n\t * @param key {string} optional key where to map the public state\n\t */\n\tthen( cb ) {\n\t\tif ( this._stable )\n\t\t\treturn cb(this.data);\n\t\tthis.once('stable', e => cb(this.data));\n\t}\n\t\n\t/**\n\t * Add a lock so the store will not propag it data untill release() is call\n\t * @param previous {Store|number|Array} @optional wf to wait, releases to wait or\n\t *     array of stuff to wait\n\t * @returns {this}\n\t */\n\twait( previous ) {\n\t\tif ( typeof previous == \"number\" )\n\t\t\treturn this.__locks.all += previous;\n\t\tif ( is.array(previous) )\n\t\t\treturn previous.map(this.wait.bind(this));\n\t\t\n\t\tthis._stable && this.emit('unstable', this.state, this.data);\n\t\tthis._stable = false;\n\t\tthis.__locks.all++;\n\t\t\n\t\tlet reason = is.string(previous) ? previous : null;\n\t\tif ( reason ) {\n\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\tthis.__locks[reason]++;\n\t\t}\n\t\tif ( previous && is.fn(previous.then) ) {\n\t\t\tprevious.then(this.release.bind(this, null));\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Decrease locks for this store, if it reach 0 ,\n\t * it will be propagated to the followers,\n\t * then, all stuff passed to \"then\" call back will be exec / released\n\t * @param desync\n\t * @returns {*}\n\t */\n\trelease( reason, cb ) {\n\t\tlet _static = this.constructor, me = this;\n\t\tlet i       = 0, wasStable = this._stable;\n\t\t\n\t\tif ( is.fn(reason) ) {\n\t\t\tcb     = reason;\n\t\t\treason = null;\n\t\t}\n\t\t\n\t\tif ( reason ) {\n\t\t\tif ( this.__locks[reason] == 0 )\n\t\t\t\tconsole.error(\"Release more than locking !\", reason);\n\t\t\tthis.__locks[reason] = this.__locks[reason] || 0;\n\t\t\tthis.__locks[reason]--;\n\t\t}\n\t\t\n\t\tif ( !reason && this.__locks.all == 0 )\n\t\t\tconsole.error(\"Release more than locking !\");\n\t\t\n\t\tif ( !--this.__locks.all && this.isComplete() ) {\n\t\t\tlet propag   = this.shouldPropag(this.data);\n\t\t\tthis._stable = true;\n\t\t\tpropag && this._rev++;//\n\t\t\tif ( propag && this._followers.length )\n\t\t\t\tthis._followers.forEach(function propag( follower ) {\n\t\t\t\t\tlet data = follower[2] ? me.retrieve(follower[2]) : me.data;\n\t\t\t\t\t//if ( !data ) return;\n\t\t\t\t\t\n\t\t\t\t\tif ( typeof follower[0] == \"function\" ) {\n\t\t\t\t\t\tfollower[0](data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t//cb && i++;\n\t\t\t\t\t\tfollower[0].setState(\n\t\t\t\t\t\t\t(follower[1]) ? { [follower[1]]: data }\n\t\t\t\t\t\t\t              : data\n\t\t\t\t\t\t\t//,\n\t\t\t\t\t\t\t//cb && (\n\t\t\t\t\t\t\t//    () => (!(--i) && cb())\n\t\t\t\t\t\t\t//)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t//else\n\t\t\t!wasStable && this.emit('stable', this.data);\n\t\t\tpropag && this.emit('update', this.data);\n\t\t\tcb && cb()\n\t\t}\n\t\telse cb && this.then(cb);\n\t\treturn this;\n\t}\n\t\n\tpropag( data ) {\n\t\tthis.emit('update', data);\n\t}\n\t\n\tretain( reason ) {\n\t\tthis.__retains.all++;\n\t\tif ( reason ) {\n\t\t\tthis.__retains[reason] = this.__retains[reason] || 0;\n\t\t\tthis.__retains[reason]++;\n\t\t}\n\t}\n\t\n\tdispose( reason ) {\n\t\t//console.warn(\"dispose\", reason, this.__retains);\n\t\tif ( reason ) {\n\t\t\tif ( !this.__retains[reason] )\n\t\t\t\tthrow new Error(\"RS : Dispose more than retaining on store '\" + this.name + \"' : \" + reason);\n\t\t\t\n\t\t\tthis.__retains[reason]--;\n\t\t}\n\t\tif ( this.__retains.all == 0 )\n\t\t\tthrow new Error(\"RS : Dispose more than retaining on store \" + this.name);\n\t\t\n\t\tthis.__retains.all--;\n\t\t\n\t\tif ( !this.__retains.all ) {\n\t\t\tif ( this._persistenceTm ) {\n\t\t\t\tthis._destroyTM && clearTimeout(this._destroyTM);\n\t\t\t\tthis._destroyTM = setTimeout(\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis._destroyTM = null;\n\t\t\t\t\t\t//this.then(s => {\n\t\t\t\t\t\t!this.__retains.all && !this.dead && this.destroy()\n\t\t\t\t\t\t//});\n\t\t\t\t\t},\n\t\t\t\t\tthis._persistenceTm\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//this.then(s =>\n\t\t\t\t(!this.__retains.all && !this.dead && this.destroy())\n\t\t\t\t//);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdestroy() {\n\t\t//  console.log(\"destroy\", this._uid);\n\t\t\n\t\tthis.emit('destroy', this);\n\t\tif ( this._stabilizer )\n\t\t\tclearTimeout(this._stabilizer);\n\t\t\n\t\tif ( this._followers.length )\n\t\t\tthis._followers.forEach(\n\t\t\t\t( follower ) => {\n\t\t\t\t\tif ( typeof follower[0] !== \"function\" ) {\n\t\t\t\t\t\tif ( follower[0].stores )\n\t\t\t\t\t\t\tdelete follower[0].stores[follower[1]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\tthis._followers.length = 0;\n\t\tthis.constructor._rev  = this.rev;\n\t\tthis.dead              = true;\n\t\tthis._revs             = this.data = this.state = this.scope = null;\n\t\tthis.removeAllListeners();\n\t}\n}\n\n/**\n * get a static aliased reference of a store\n * @param {string} name\n * @returns {{store: Store, name: *}}\n */\nStore.as = function ( name ) {\n\treturn { store: this, name };\n}\n\n/**\n * @todo\n * Map all named stores in {keys} to the {object}'s state\n * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n * @static\n * @param object {Object} target state aware object (React.Component|Store|...)\n * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\",\n *     store.as('anotherKey')]\n */\nStore.map = function ( cStore, keys, scope, origin, setInitial = false ) {\n\tlet targetRevs     = cStore._revs || {};\n\tlet targetScope    = cStore.stores || (cStore.stores = {});\n\tlet initialOutputs = {};\n\tkeys               = is.array(keys) ? [...keys] : [keys];\n\t\n\t\n\tscope = scope || Store.staticScope;\n\t\n\tkeys = keys.filter(\n\t\t// @todo : use query refs\n\t\t// (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n\t\t( key ) => {\n\t\t\tif ( !key ) {\n\t\t\t\tconsole.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet name,\n\t\t\t    alias,\n\t\t\t    path,\n\t\t\t    store, _key;\n\t\t\tif ( key.store && key.name ) {\n\t\t\t\talias = name = key.name;\n\t\t\t\tstore = key.store;\n\t\t\t}\n\t\t\telse if ( is.fn(key) ) {\n\t\t\t\tname  = alias = key.name || key.defaultName;\n\t\t\t\tstore = key;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_key  = key.match(/([^\\.\\:]+)((?:\\.[^\\.\\:]+)*)(?:\\:([^\\.\\:]+))?/);\n\t\t\t\tname  = _key[1];\n\t\t\t\tpath  = _key[2] && _key[2].substr(1);\n\t\t\t\tstore = scope.stores[_key[1]];\n\t\t\t\talias = _key[3] || path && path.match(/([^\\.]*)$/)[0] || _key[1];\n\t\t\t}\n\t\t\tif ( !store ) {\n\t\t\t\tlet i = [];\n\t\t\t\tfor ( let o in scope.stores )\n\t\t\t\t\ti.push(o)\n\t\t\t\tconsole.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + (cStore.name || cStore) + ' !!', store, _key, scope.stores, i);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ( Scope.isScopeClass(store) ) scope._mount(name);\n\t\t\tif ( Scope.isScope(store) ) {\n\t\t\t\tstore = scope._mount(key);\n\t\t\t}\n\t\t\telse if ( targetRevs[name] ) return false;// ignore dbl uses for now\n\t\t\t\n\t\t\t\n\t\t\tif ( is.fn(store) ) {\n\t\t\t\tscope._mount(name)\n\t\t\t\tscope.stores[name].bind(cStore, alias, setInitial, path);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstore.bind(cStore, alias, setInitial, path);\n\t\t\t}\n\t\t\t\n\t\t\t// give initial store weight basing sources\n\t\t\tscope.stores[name]._sources && cStore._sources.push(...scope.stores[name]._sources);\n\t\t\t\n\t\t\ttargetRevs[alias] = targetRevs[alias] || true;\n\t\t\t!targetScope[name] && (targetScope[name] = scope.stores[name]);\n\t\t\tif ( scope.stores[name].hasOwnProperty('data') )\n\t\t\t\tinitialOutputs[name] = scope.data[name];\n\t\t\treturn true;\n\t\t}\n\t);\n\t\n\t// ... @todo\n\tcStore.once('destroy', ( ...argz ) => {\n\t\tkeys.map(\n\t\t\t( key ) => {\n\t\t\t\tlet name,\n\t\t\t\t    alias, path,\n\t\t\t\t    store;\n\t\t\t\tif ( key.store && key.name ) {\n\t\t\t\t\talias = name = key.name;\n\t\t\t\t\tstore = key.store;\n\t\t\t\t}\n\t\t\t\telse if ( is.fn(key) ) {\n\t\t\t\t\tname  = alias = key.name || key.defaultName;\n\t\t\t\t\tstore = scope.stores[name];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tkey   = key.match(/([^\\.\\:]+)((?:\\.[^\\.\\:]+)*)(?:\\:([^\\.\\:]+))?/);\n\t\t\t\t\tname  = key[1];\n\t\t\t\t\tpath  = key[2] && key[2].substr(1);\n\t\t\t\t\tstore = scope.stores[key[1]];\n\t\t\t\t\talias = key[3] || path && path.match(/([^\\.]*)$/)[0] || key[1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstore && !is.fn(store) && store.unBind(cStore, alias, path)\n\t\t\t}\n\t\t);\n\t})\n\t\n\treturn initialOutputs;\n};\n\n\nStore.isStore      = Scope.isStore = function ( obj ) {\n\treturn obj instanceof Store\n}\nStore.isStoreClass = Scope.isStoreClass = function ( obj ) {\n\treturn Store.isPrototypeOf(obj) || obj === Store\n}\n\nexport default Store;\n\n\n// WEBPACK FOOTER //\n// ./src/Store.js","/*\n * The MIT License (MIT)\n * Copyright (c) 2019. Wise Wild Web\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *  @author : Nathanael Braun\n *  @contact : n8tz.js@gmail.com\n */\n\nimport is from \"is\";\n\n/**\n * Minimal push sequencer, apply stores specific task in the right order\n */\nlet taskQueue      = [],\n    curWeight      = 0,\n    maxWeight      = 0,\n    minWeight      = 0,\n    taskCount      = 0,\n    deSync         = false,\n    deSyncMaxTasks = 10,\n    task,\n    isRunning,\n    errorCatcher   = {\n        lastError: null,\n        dispatch : function ( error ) {\n            errorCatcher.disable();\n            if ( task && task[ 0 ].handleError ) {\n                task[ 0 ].handleError(error, task);\n            }\n            else if ( task )\n                console.error(\"ReScope : An apply task has failed !!\", task[ 1 ], \" on \", task[ 0 ].name || task[ 0 ].constructor.name)\n        \n            isRunning = false;\n            task      = null;\n            runNow();\n        },\n        enable   : ( typeof window !== 'undefined' )\n                   ? () => {\n                window.addEventListener('error', errorCatcher.dispatch)\n            } : () => {\n                process.on('uncaughtException', errorCatcher.dispatch);\n            },\n        disable  : ( typeof window !== 'undefined' )\n                   ? () => {\n                window.removeEventListener('error', errorCatcher.dispatch)\n            } : () => {\n                process.removeListener('uncaughtException', errorCatcher.dispatch);\n            }\n    }\n;\n\nfunction runNow() {\n    if ( !isRunning ) {\n        run();\n    }\n}\n\nfunction run() {\n    let from  = Date.now();\n    isRunning = true;\n    errorCatcher.enable();\n    while ( taskCount ) {\n        \n        // try for the current weight\n        while ( !( taskQueue[ curWeight ] && taskQueue[ curWeight ].length ) )\n            curWeight++;\n        \n        taskCount--;\n        task = taskQueue[ curWeight ].shift();\n        //console.log(\"Task : \", task[1], \" on \", task[0].name);\n        task[ 0 ][ task[ 1 ] ].apply(task[ 0 ], task[ 2 ]);\n    }\n    task = undefined;\n    errorCatcher.disable();\n    \n    isRunning = false;\n    if ( taskCount ) {\n        setTimeout(runNow);\n    }\n}\n\n//\n//index.setTaskDeSync = ( nb ) => {\n//    if ( nb === false )\n//        return deSync = false;\n//    else if ( nb === true ) {\n//        deSync         = true;\n//        deSyncMaxTasks = 10;\n//    }\n//    else (is.int(nb))\n//    {\n//        deSync         = true;\n//        deSyncMaxTasks = nb;\n//    }\n//};\n\nexport default {\n    pushTask( obj, fn, argz ) {\n        /**\n         * The more a store have sources, the more it should be processed first\n         * So leafs stores stay sync, and root stores receive merged state updates;\n         * global state stay coherent\n         *\n         * This mean whatever the number of stores & the complexity of the deps,\n         * updating a store state will update its synchrone child stores immediately\n         *\n         *\n         * @type {*|number}\n         */\n        let weight = obj._sources && obj._sources.length || 1,\n            stack  = taskQueue[ weight ] =\n                taskQueue[ weight ] || [];\n        \n        maxWeight = Math.max(maxWeight, weight);\n        curWeight = Math.min(curWeight, weight);\n        taskCount++;\n        \n        //console.log(\"Push Task : \", fn, \" on \", obj.name, weight);\n        stack.push([ obj, fn, argz ]);\n        setTimeout(runNow, 0);\n        return stack.length;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/TaskSequencer.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///dist/Rescope.nodeps.min.js","webpack:///webpack/bootstrap 98bad6d73e8ae509eeae","webpack:///./src/Rescope.js","webpack:///external \"is\"","webpack:///./src/Emitter.js","webpack:///./src/Scope.js","webpack:///external \"shortid\"","webpack:///./src/Store.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Scope","_Scope2","_Store","_Store2","Store","Context","Scope","require","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","is","Emitter","this","_events","evt","cb","_this","string","keys","forEach","k","on","push","_this2","un","indexOf","splice","lists","_len","arguments","argz","_key","apply","_this3","fn","_defineProperty","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","EventEmitter","shortid","__proto__push","parent","openScopes","_EventEmitter","storesMap","_ref","undefined","state","data","incrementId","name","defaultMaxListeners","persistenceTm","autoDestroy","rootEmitter","getPrototypeOf","_maxListeners","generate","_ret","_id","register","_isLocalId","_persistenceTm","stores","dead","Error","sources","_childScopes","_childScopesList","_unStableChilds","__retains","all","__locks","__listening","__scope","__mixed","__mixedList","_followers","retain","__parentList","update","s","_propag","_stable","wait","stable","release","unstable","_addChild","setTimeout","tm","dispose","scopes","skey","array","sort","a","b","firstname","join","storesList","_mount","store","_parent","reduce","mounted","ctx","setState","_watchStore","_parent2","isStable","destroy","propag","targetCtx","_this4","relink","_this5","singleton","srcCtx","_this6","external","force","lctx","_stores","get","_state","set","v","_data","as","setInitial","lastRevs","reKey","map","revs","mount","getUpdates","followers","to","_this7","bind","mixedCWUnmount","unMountKey","isReactComponent","hasOwnProperty","unBind","split","retrieve","path","storesRevMap","local","_rev","updated","getStoresRevs","output","_this8","_this9","flags_states","flags_data","flags","r","flag","test","action","_this10","trigger","dispatch","_this11","once","e","_ref2","quiet","_this12","reason","_this13","emit","_this14","_stabilizerTM","clearTimeout","_propagTM","_this15","_this16","_ref3","_this17","stableTree","unstableTree","wasStable","_this18","_destroyTM","then","_this19","removeListener","shift","_rmChild","scope","_extends","assign","source","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","objProto","_this$_require","_this$_require2","applied","_static","getScope","staticScope","cfg","watchs","use","initialState","_uid","_onStabilize","scopeObj","_revs","_require","_use","concat","ref","match","ref2","shouldApply","managed","nDatas","cDatas","isComplete","follow","changes","refine","_stabilizer","_scopeObj","actions","ns","_actions$action","_len2","_key2","doWait","origin","initialOutputs","nextState","_changesSW","nextDatas","shouldPropag","pState","sync","change","stabilize","pull","previous","follower","rev","removeAllListeners","component","targetRevs","targetScope","filter","alias","defaultName","slice"],"mappings":"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","file":"dist/Rescope.nodeps.min.js","sourcesContent":["/*!\n * MIT License\n * \n * Copyright (c) 2018 Wise Wild Web\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Scope = __webpack_require__(3);\n\t\n\tvar _Scope2 = _interopRequireDefault(_Scope);\n\t\n\tvar _Store = __webpack_require__(5);\n\t\n\tvar _Store2 = _interopRequireDefault(_Store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t * Copyright (c)  2018 Wise Wild Web .\n\t *\n\t *  MIT License\n\t *\n\t *  Permission is hereby granted, free of charge, to any person obtaining a copy\n\t *  of this software and associated documentation files (the \"Software\"), to deal\n\t *  in the Software without restriction, including without limitation the rights\n\t *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t *  copies of the Software, and to permit persons to whom the Software is\n\t *  furnished to do so, subject to the following conditions:\n\t *\n\t *  The above copyright notice and this permission notice shall be included in all\n\t *  copies or substantial portions of the Software.\n\t *\n\t *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t *  SOFTWARE.\n\t *\n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\t\n\t_Scope2.default.Store = _Store2.default;\n\t\n\texports.default = { Store: _Store2.default, Context: _Scope2.default, Scope: _Scope2.default };\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"is\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * Copyright (c)  2018 Wise Wild Web .\n\t *\n\t *  MIT License\n\t *  \n\t *  Permission is hereby granted, free of charge, to any person obtaining a copy\n\t *  of this software and associated documentation files (the \"Software\"), to deal\n\t *  in the Software without restriction, including without limitation the rights\n\t *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t *  copies of the Software, and to permit persons to whom the Software is\n\t *  furnished to do so, subject to the following conditions:\n\t *  \n\t *  The above copyright notice and this permission notice shall be included in all\n\t *  copies or substantial portions of the Software.\n\t *  \n\t *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t *  SOFTWARE.\n\t *  \n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\tvar is = __webpack_require__(1);\n\t\n\tvar Emitter = function () {\n\t    function Emitter() {\n\t        _classCallCheck(this, Emitter);\n\t\n\t        this._events = {};\n\t    }\n\t\n\t    _createClass(Emitter, [{\n\t        key: 'on',\n\t        value: function on(evt, cb) {\n\t            var _this = this;\n\t\n\t            if (!is.string(evt) && evt) return Object.keys(evt).forEach(function (k) {\n\t                return _this.on(k, evt[k]);\n\t            });\n\t\n\t            this._events[evt] = this._events[evt] || [];\n\t            this._events[evt].push(cb);\n\t        }\n\t    }, {\n\t        key: 'un',\n\t        value: function un(evt, cb) {\n\t            var _this2 = this;\n\t\n\t            if (!is.string(evt) && evt) return Object.keys(evt).forEach(function (k) {\n\t                return _this2.un(k, evt[k]);\n\t            });\n\t\n\t            if (!this._events[evt]) return;\n\t            var i = this._events[evt].indexOf(cb);\n\t            this._events[evt].splice(i, 1);\n\t        }\n\t    }, {\n\t        key: 'emit',\n\t        value: function emit(evt) {\n\t            if (!this._events[evt]) return;\n\t            var lists = [].concat(_toConsumableArray(this._events[evt]));\n\t\n\t            for (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                argz[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            for (var i = 0; i < lists.length; i++) {\n\t                lists[i].apply(lists, argz);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addListener',\n\t        value: function addListener() {\n\t            this.on.apply(this, arguments);\n\t        }\n\t    }, {\n\t        key: 'removeListener',\n\t        value: function removeListener() {\n\t            this.un.apply(this, arguments);\n\t        }\n\t    }, {\n\t        key: 'removeAllListeners',\n\t        value: function removeAllListeners() {\n\t            this._events = {};\n\t        }\n\t    }, {\n\t        key: 'once',\n\t        value: function once(evt, cb) {\n\t            var _this3 = this;\n\t\n\t            var _fn = void 0;\n\t            this.on(evt, _fn = function fn() {\n\t                _this3.un(evt, _fn);\n\t                cb.apply(undefined, arguments);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Emitter;\n\t}();\n\t\n\texports.default = Emitter;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/*\n\t * Copyright (c)  2018 Wise Wild Web .\n\t *\n\t *  MIT License\n\t *\n\t *  Permission is hereby granted, free of charge, to any person obtaining a copy\n\t *  of this software and associated documentation files (the \"Software\"), to deal\n\t *  in the Software without restriction, including without limitation the rights\n\t *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t *  copies of the Software, and to permit persons to whom the Software is\n\t *  furnished to do so, subject to the following conditions:\n\t *\n\t *  The above copyright notice and this permission notice shall be included in all\n\t *  copies or substantial portions of the Software.\n\t *\n\t *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t *  SOFTWARE.\n\t *\n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\t\n\tvar is = __webpack_require__(1),\n\t    EventEmitter = __webpack_require__(2),\n\t    shortid = __webpack_require__(4),\n\t    __proto__push = function __proto__push(target, id, parent) {\n\t    var fn = function fn() {};\n\t    fn.prototype = parent ? new parent[\"_\" + id]() : target[id] || {};\n\t    target[id] = new fn();\n\t    target['_' + id] = fn;\n\t},\n\t    openScopes = {};\n\t\n\tvar Scope = function (_EventEmitter) {\n\t    _inherits(Scope, _EventEmitter);\n\t\n\t    _createClass(Scope, null, [{\n\t        key: 'getScope',\n\t        // all active scopes\n\t\n\t        // if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n\t        value: function getScope(scopes) {\n\t            var skey = is.array(scopes) ? scopes.sort(function (a, b) {\n\t                if (a.firstname < b.firstname) return -1;\n\t                if (a.firstname > b.firstname) return 1;\n\t                return 0;\n\t            }).join('::') : scopes;\n\t            return openScopes[skey] = openScopes[skey] || new Scope({}, { id: skey });\n\t        }\n\t    }]);\n\t\n\t    /**\n\t     * Init a Rescope scope\n\t     *\n\t     * @param storesMap {Object} Object with the origin stores\n\t     * @param id {string} @optional id ( if this id exist storesMap will be merge on the 'id' scope)\n\t     * @param parent\n\t     * @param state\n\t     * @param data\n\t     * @param name\n\t     * @param defaultMaxListeners\n\t     * @param persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n\t     * @param autoDestroy  {bool} will trigger retain & dispose after start\n\t     * @returns {Scope}\n\t     */\n\t    function Scope(storesMap) {\n\t        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            id = _ref.id,\n\t            parent = _ref.parent,\n\t            state = _ref.state,\n\t            data = _ref.data,\n\t            name = _ref.name,\n\t            incrementId = _ref.incrementId,\n\t            defaultMaxListeners = _ref.defaultMaxListeners,\n\t            persistenceTm = _ref.persistenceTm,\n\t            autoDestroy = _ref.autoDestroy,\n\t            rootEmitter = _ref.rootEmitter;\n\t\n\t        _classCallCheck(this, Scope);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Scope.__proto__ || Object.getPrototypeOf(Scope)).call(this));\n\t\n\t        _this._maxListeners = defaultMaxListeners || _this.constructor.defaultMaxListeners;\n\t        id = id || \"_____\" + shortid.generate();\n\t        if (openScopes[id] && !incrementId) {\n\t            var _ret;\n\t\n\t            _this._id = id;\n\t            openScopes[id].register(storesMap);\n\t            return _ret = openScopes[id], _possibleConstructorReturn(_this, _ret);\n\t        } else if (openScopes[id] && incrementId) {\n\t            var i = -1;\n\t            while (openScopes[id + '/' + ++i]) {}\n\t            id = id + '/' + i;\n\t        }\n\t\n\t        _this._id = id;\n\t        openScopes[id] = _this;\n\t        _this._isLocalId = true;\n\t        _this._persistenceTm = persistenceTm || _this.constructor.persistenceTm;\n\t\n\t        _this.stores = {};\n\t        _this.state = {};\n\t        _this.data = {};\n\t\n\t        if (parent && parent.dead) throw new Error(\"Can't use a dead scope as parent !\");\n\t\n\t        __proto__push(_this, 'stores', parent);\n\t        __proto__push(_this, 'state', parent);\n\t        __proto__push(_this, 'data', parent);\n\t        _this.parent = parent;\n\t\n\t        _this.sources = [];\n\t        _this._childScopes = [];\n\t        _this._childScopesList = [];\n\t        _this._unStableChilds = 0;\n\t\n\t        _this.__retains = { all: 0 };\n\t        _this.__locks = { all: 1 };\n\t        _this.__listening = {};\n\t        _this.__scope = {};\n\t        _this.__mixed = [];\n\t        _this.__mixedList = [];\n\t        _this._followers = [];\n\t        if (parent) {\n\t            parent.retain(\"isMyParent\");\n\t            if (!rootEmitter) {\n\t                !parent._stable && _this.wait(\"waitingParent\");\n\t                parent.on(_this.__parentList = {\n\t                    'stable': function stable(s) {\n\t                        return _this.release(\"waitingParent\");\n\t                    },\n\t                    'unstable': function unstable(s) {\n\t                        return _this.wait(\"waitingParent\");\n\t                    },\n\t                    'update': function update(s) {\n\t                        return _this._propag();\n\t                    }\n\t                });\n\t            } else {\n\t                parent.on(_this.__parentList = {\n\t                    'update': function update(s) {\n\t                        return _this._propag();\n\t                    }\n\t                });\n\t            }\n\t            // this.register(parent.__scope, state, data);\n\t        }\n\t\n\t        _this.register(storesMap, state, data);\n\t        _this.__locks.all--;\n\t        _this._stable = !_this.__locks.all;\n\t\n\t        if (parent) {\n\t            parent._addChild(_this);\n\t        }\n\t        if (autoDestroy) setTimeout(function (tm) {\n\t            _this.retain(\"autoDestroy\");\n\t            _this.dispose(\"autoDestroy\");\n\t        });\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     * @returns {*}\n\t     */\n\t\n\t\n\t    _createClass(Scope, [{\n\t        key: 'mount',\n\t\n\t\n\t        /**\n\t         *\n\t         * Mount the stores in storesList, in this scope or in its parents or mixed scopes\n\t         *\n\t         * @param storesList {string|storeRef} Store name, Array of Store names, or Rescope store ref from Store::as or\n\t         *     Store:as\n\t         * @param state\n\t         * @param data\n\t         * @returns {Scope}\n\t         */\n\t        value: function mount(storesList, state, data) {\n\t            var _this2 = this;\n\t\n\t            if (is.array(storesList)) {\n\t                storesList.forEach(function (k) {\n\t                    return _this2._mount(k, state && state[k], data && data[k]);\n\t                });\n\t            } else {\n\t                this._mount.apply(this, arguments);\n\t            }\n\t            return this;\n\t        }\n\t    }, {\n\t        key: '_mount',\n\t        value: function _mount(id, state, data) {\n\t            if (typeof id !== 'string') {\n\t                this.register(_defineProperty({}, id.name, id.store));\n\t                id = id.name;\n\t            }\n\t\n\t            if (!this.__scope[id]) {\n\t                var _parent;\n\t\n\t                //ask mixed || parent\n\t                if (this.__mixed.reduce(function (mounted, ctx) {\n\t                    return mounted || ctx._mount(id, state, data);\n\t                }, false) || !this.parent) return;\n\t                return (_parent = this.parent)._mount.apply(_parent, arguments);\n\t            }\n\t            var store = this.__scope[id],\n\t                ctx = void 0;\n\t            if (is.fn(store)) {\n\t                this.__scope[id] = new store(this, { state: state, data: data });\n\t            } else {\n\t                if (state !== undefined && data === undefined) store.setState(state);else if (state !== undefined) store.state = state;\n\t\n\t                if (data !== undefined) store.push(data);\n\t            }\n\t\n\t            this._watchStore(id);\n\t\n\t            return this.__scope[id];\n\t        }\n\t    }, {\n\t        key: '_watchStore',\n\t        value: function _watchStore(id, state, data) {\n\t            var _this3 = this;\n\t\n\t            if (!this.__scope[id]) {\n\t                var _parent2;\n\t\n\t                //ask mixed || parent\n\t                if (this.__mixed.reduce(function (mounted, ctx) {\n\t                    return mounted || ctx._watchStore(id, state, data);\n\t                }, false) || !this.parent) return;\n\t                return (_parent2 = this.parent)._watchStore.apply(_parent2, arguments);\n\t            }\n\t            if (!this.__listening[id] && !is.fn(this.__scope[id])) {\n\t                !this.__scope[id].isStable() && this.wait(id);\n\t                this.__scope[id].on(this.__listening[id] = {\n\t                    'destroy': function destroy(s) {\n\t                        delete _this3.__listening[id];\n\t                        _this3.__scope[id] = _this3.__scope[id].constructor;\n\t                    },\n\t                    'update': function update(s) {\n\t                        return _this3.propag();\n\t                    },\n\t                    'stable': function stable(s) {\n\t                        return _this3.release(id);\n\t                    },\n\t                    'unstable': function unstable(s) {\n\t                        return _this3.wait(id);\n\t                    }\n\t                });\n\t            }\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Mix targetCtx on this scope\n\t         * Mixed scope parents are NOT mapped\n\t         * @param targetCtx\n\t         */\n\t\n\t    }, {\n\t        key: 'mixin',\n\t        value: function mixin(targetCtx) {\n\t            var _this4 = this;\n\t\n\t            var parent = this.parent,\n\t                lists = void 0;\n\t            this.__mixed.push(targetCtx);\n\t            targetCtx.retain(\"mixedTo\");\n\t            if (!targetCtx._stable) this.wait(targetCtx._id);\n\t\n\t            this.__mixedList.push(lists = {\n\t                'stable': function stable(s) {\n\t                    return _this4.release(targetCtx._id);\n\t                },\n\t                'unstable': function unstable(s) {\n\t                    return _this4.wait(targetCtx._id);\n\t                },\n\t                'update': function update(s) {\n\t                    return _this4._propag();\n\t                }\n\t            });\n\t\n\t            this.stores = {};\n\t            this.state = {};\n\t            this.data = {};\n\t            targetCtx.on(lists);\n\t            __proto__push(this, 'stores', parent);\n\t            __proto__push(this, 'state', parent);\n\t            __proto__push(this, 'data', parent);\n\t\n\t            this.relink(this.__scope, this, false, true);\n\t            this.__mixed.forEach(function (ctx) {\n\t                __proto__push(_this4, 'stores');\n\t                __proto__push(_this4, 'state');\n\t                __proto__push(_this4, 'data');\n\t                ctx.relink(ctx.__scope, _this4, true, true);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Register stores in storesMap & link them in the protos\n\t         * @param storesMap\n\t         * @param state\n\t         * @param data\n\t         */\n\t\n\t    }, {\n\t        key: 'register',\n\t        value: function register(storesMap) {\n\t            var _this5 = this;\n\t\n\t            var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t            this.relink(storesMap, this, false, false);\n\t            Object.keys(storesMap).forEach(function (id) {\n\t                if (storesMap[id].singleton || is.fn(storesMap[id]) && (state[id] || data[id])) {\n\t                    _this5._mount(id, state[id], data[id]);\n\t                } else if (state[id] || data[id]) {\n\t                    if (data[id]) {\n\t                        if (state[id]) _this5.stores[id].state = state[id];\n\t                        _this5.stores[id].push(data[id]);\n\t                    } else if (state[id]) {\n\t                        _this5.stores[id].setState(state[id]);\n\t                    }\n\t                } else {\n\t                    _this5._watchStore(id);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Map srcCtx store's on targetCtx headers proto's\n\t         * @param srcCtx\n\t         * @param targetCtx\n\t         * @param state\n\t         * @param data\n\t         */\n\t\n\t    }, {\n\t        key: 'relink',\n\t        value: function relink(srcCtx) {\n\t            var targetCtx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\t\n\t            var _this6 = this;\n\t\n\t            var external = arguments[2];\n\t            var force = arguments[3];\n\t\n\t            var lctx = targetCtx._stores.prototype;\n\t            Object.keys(srcCtx).forEach(function (id) {\n\t                if (!force && targetCtx.__scope[id] === srcCtx[id] || targetCtx.__scope[id] && targetCtx.__scope[id].constructor === srcCtx[id]) return;\n\t\n\t                if (!force && targetCtx.__scope[id]) {\n\t                    if (!external && !is.fn(targetCtx.__scope[id])) {\n\t                        console.info(\"Rescope Store : \", id, \" already exist in this scope ! ( try __proto__ hot patch )\");\n\t                        targetCtx.__scope[id].__proto__ = srcCtx[id].prototype;\n\t                    }\n\t                    if (!external && is.fn(targetCtx.__scope[id])) targetCtx.__scope[id] = srcCtx[id];\n\t\n\t                    return;\n\t                } else if (!force && !external) _this6.__scope[id] = srcCtx[id];\n\t\n\t                Object.defineProperty(lctx, id, {\n\t                    get: function get() {\n\t                        return _this6.__scope[id];\n\t                    }\n\t                });\n\t                Object.defineProperty(targetCtx._state.prototype, id, {\n\t                    get: function get() {\n\t                        return _this6.__scope[id] && _this6.__scope[id].state;\n\t                    },\n\t                    set: function set(v) {\n\t                        return _this6._mount(id, v);\n\t                    }\n\t                });\n\t                Object.defineProperty(targetCtx._data.prototype, id, {\n\t                    get: function get() {\n\t                        return _this6.__scope[id] && _this6.__scope[id].data;\n\t                    },\n\t                    set: function set(v) {\n\t                        return _this6._mount(id, undefined, v);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Bind stores from this scope, his parents and mixed scope\n\t         *\n\t         * @param obj {React.Component|Store|function}\n\t         * @param key {string} stores keys to bind updates\n\t         * @param as\n\t         * @param setInitial {bool} false to not propag initial value (default : true)\n\t         */\n\t\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(obj, key, as) {\n\t            var setInitial = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\t\n\t            var lastRevs = void 0,\n\t                data = void 0,\n\t                reKey = void 0;\n\t            if (key && !is.array(key)) key = [key];\n\t\n\t            if (as === false || as === true) {\n\t                setInitial = as;\n\t                as = null;\n\t            }\n\t\n\t            reKey = key.map(function (id) {\n\t                return is.string(id) ? id : id.name;\n\t            });\n\t\n\t            this._followers.push([obj, key, as || undefined, lastRevs = reKey && reKey.reduce(function (revs, id) {\n\t                return revs[id] = 0, revs;\n\t            }, {})]);\n\t\n\t            this.mount(key);\n\t\n\t            if (setInitial && this._stable) {\n\t                data = this.getUpdates(lastRevs);\n\t                if (!data) return;\n\t                if (typeof obj != \"function\") {\n\t                    if (as) obj.setState(_defineProperty({}, as, data));else obj.setState(data);\n\t                } else {\n\t                    obj(data);\n\t                }\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Un bind this scope off the given component-keys\n\t         * @param obj\n\t         * @param key\n\t         * @returns {Array.<*>}\n\t         */\n\t\n\t    }, {\n\t        key: 'unBind',\n\t        value: function unBind(obj, key, as) {\n\t            var followers = this._followers,\n\t                i = followers && followers.length;\n\t            while (followers && i--) {\n\t                if (followers[i][0] === obj && '' + followers[i][1] == '' + key && followers[i][2] == as) return followers.splice(i, 1);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Mount the stores in storesList from this scope, its parents and mixed scope\n\t         * Bind them to 'to'\n\t         * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n\t         * @param to\n\t         * @param storesList\n\t         * @param bind\n\t         * @returns {Object} Initial outputs of the stores in 'storesList'\n\t         */\n\t\n\t    }, {\n\t        key: 'map',\n\t        value: function map(to, storesList) {\n\t            var _this7 = this;\n\t\n\t            var bind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\n\t            var Store = this.constructor.Store;\n\t            storesList = is.array(storesList) ? storesList : [storesList];\n\t            this.mount(storesList);\n\t            if (bind && to instanceof Store) {\n\t                Store.map(to, storesList, this, this, false);\n\t            } else if (bind) {\n\t                this.bind(to, storesList, undefined, false);\n\t\n\t                var mixedCWUnmount = void 0,\n\t                    unMountKey = to.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n\t\n\t                if (to.hasOwnProperty(unMountKey)) {\n\t                    mixedCWUnmount = to[unMountKey];\n\t                }\n\t\n\t                to[unMountKey] = function () {\n\t                    delete to[unMountKey];\n\t                    if (mixedCWUnmount) to[unMountKey] = mixedCWUnmount;\n\t\n\t                    _this7.unBind(to, storesList);\n\t                    return to[unMountKey] && to[unMountKey].apply(to, arguments);\n\t                };\n\t            }\n\t            return storesList.reduce(function (data, id) {\n\t                if (!is.string(id)) id = id.name;\n\t                id = id.split(':'); //@todo\n\t                id[0] = id[0].split('.');\n\t                data[id[1] || id[0][id[0].length - 1]] = _this7.stores[id[0][0]] && _this7.stores[id[0][0]].retrieve && _this7.stores[id[0][0]].retrieve(id[0].splice(1));\n\t                return data;\n\t            }, {});\n\t        }\n\t    }, {\n\t        key: 'retrieve',\n\t        value: function retrieve() {\n\t            var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t            path = is.string(path) ? path.split('.') : path;\n\t            return path && this.stores[path[0]] && this.stores[path[0]].retrieve(path.splice(1));\n\t        }\n\t\n\t        /**\n\t         * Get or update storesRevMap's revisions\n\t         * @param storesRevMap\n\t         * @param local\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'getStoresRevs',\n\t        value: function getStoresRevs() {\n\t            var storesRevMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var local = arguments[1];\n\t\n\t            var ctx = this.__scope;\n\t            if (!storesRevMap) {\n\t                storesRevMap = {};\n\t            }\n\t            Object.keys(ctx).forEach(function (id) {\n\t                if (!is.fn(ctx[id])) {\n\t                    storesRevMap[id] = ctx[id]._rev;\n\t                } else if (!storesRevMap.hasOwnProperty(id)) storesRevMap[id] = false;\n\t            });\n\t            if (!local) {\n\t                this.__mixed.reduce(function (updated, ctx) {\n\t                    return ctx.getStoresRevs(storesRevMap), storesRevMap;\n\t                }, storesRevMap);\n\t                this.parent && this.parent.getStoresRevs(storesRevMap);\n\t            }\n\t            return storesRevMap;\n\t        }\n\t\n\t        /**\n\t         * Get or update output basing storesRevMap's revisions.\n\t         * If a store in 'storesRevMap' is updated; add it to 'output'\n\t         * @param storesRevMap\n\t         * @param output\n\t         * @param updated\n\t         * @returns {*|{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'getUpdates',\n\t        value: function getUpdates(storesRevMap, output, updated) {\n\t            var _this8 = this;\n\t\n\t            var ctx = this.__scope;\n\t\n\t            output = output || {};\n\t            Object.keys(ctx).forEach(function (id) {\n\t                if (!output[id] && (!storesRevMap || storesRevMap.hasOwnProperty(id) && storesRevMap[id] === undefined || !(!storesRevMap.hasOwnProperty(id) || ctx[id]._rev <= storesRevMap[id]))) {\n\t\n\t                    updated = true;\n\t                    output[id] = _this8.data[id];\n\t                    if (storesRevMap && storesRevMap[id] !== undefined) storesRevMap[id] = ctx[id]._rev;\n\t                }\n\t            });\n\t            updated = this.__mixed.reduce(function (updated, ctx) {\n\t                return ctx.getUpdates(storesRevMap, output, updated) || updated;\n\t            }, updated);\n\t            updated = this.parent && this.parent.getUpdates(storesRevMap, output, updated) || updated;\n\t            return updated && output;\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param flags_states\n\t         * @param flags_data\n\t         * @returns {{state: {}, data: {}}}\n\t         */\n\t\n\t    }, {\n\t        key: 'serialize',\n\t        value: function serialize() {\n\t            var _this9 = this;\n\t\n\t            var flags_states = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : /.*/;\n\t            var flags_data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /.*/;\n\t\n\t            var ctx = this.__scope,\n\t                output = { state: {}, data: {} },\n\t                _flags_states = void 0,\n\t                _flags_data = void 0;\n\t            if (is.array(flags_states)) flags_states.forEach(function (id) {\n\t                return output.state[id] = _this9.state[id];\n\t            });\n\t\n\t            if (is.array(flags_data)) flags_data.forEach(function (id) {\n\t                return output.data[id] = _this9.data[id];\n\t            });\n\t\n\t            if (!is.array(flags_data) && !is.array(flags_states)) Object.keys(ctx).forEach(function (id) {\n\t                if (is.fn(ctx[id])) return;\n\t\n\t                var flags = ctx[id].constructor.flags;\n\t\n\t                flags = is.array(flags) ? flags : [flags || \"\"];\n\t\n\t                if (flags.reduce(function (r, flag) {\n\t                    return r || flags_states.test(flag);\n\t                }, false)) output.state[id] = _this9.state[id];\n\t\n\t                if (flags.reduce(function (r, flag) {\n\t                    return r || flags_data.test(flag);\n\t                }, false)) output.data[id] = _this9.data[id];\n\t            });\n\t            return output;\n\t        }\n\t    }, {\n\t        key: 'dispatch',\n\t        value: function dispatch(action, data) {\n\t            var _this10 = this;\n\t\n\t            Object.keys(this.__scope).forEach(function (id) {\n\t                if (!is.fn(_this10.__scope[id])) _this10.__scope[id].trigger(action, data);\n\t            });\n\t\n\t            this.__mixed.forEach(function (ctx) {\n\t                return ctx.dispatch(action, data);\n\t            });\n\t            this.parent && this.parent.dispatch(action, data);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * once('stable', cb)\n\t         * @param obj {React.Component|Store|function)\n\t         * @param key {string} optional key where to map the public state\n\t         */\n\t\n\t    }, {\n\t        key: 'then',\n\t        value: function then(cb) {\n\t            var _this11 = this;\n\t\n\t            if (this._stable) return cb(null, this.data);\n\t            this.once('stable', function (e) {\n\t                return cb(null, _this11.data);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(_ref2, quiet) {\n\t            var state = _ref2.state,\n\t                data = _ref2.data;\n\t\n\t            var ctx = this.__scope;\n\t            Object.keys(data).forEach(function (id) {\n\t                quiet ? ctx.data = data[id] : ctx.push(data[id]);\n\t            });\n\t            Object.keys(state).forEach(function (id) {\n\t                quiet ? ctx.state = state[id] : ctx.setState(state[id]);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'retainStores',\n\t        value: function retainStores() {\n\t            var _this12 = this;\n\t\n\t            var stores = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t            var reason = arguments[1];\n\t\n\t            stores.forEach(function (id) {\n\t                return _this12.stores[id] && _this12.stores[id].retain && _this12.stores[id].retain(reason);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'disposeStores',\n\t        value: function disposeStores() {\n\t            var _this13 = this;\n\t\n\t            var stores = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t            var reason = arguments[1];\n\t\n\t            stores.forEach(function (id) {\n\t                return _this13.stores[id] && _this13.stores[id].dispose && _this13.stores[id].dispose(reason);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'wait',\n\t        value: function wait(reason) {\n\t            //console.log(\"wait\", reason);\n\t            this._stable && !this.__locks.all && this.emit(\"unstable\", this);\n\t            this._stable = false;\n\t            this.__locks.all++;\n\t            if (reason) {\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]++;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'release',\n\t        value: function release(reason) {\n\t            var _this14 = this;\n\t\n\t            if (reason) {\n\t                if (this.__locks[reason] == 0) console.error(\"Release more than locking !\", reason);\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]--;\n\t            }\n\t            if (!reason && this.__locks.all == 0) console.error(\"Release more than locking !\");\n\t\n\t            this.__locks.all--;\n\t            if (!this.__locks.all) {\n\t                this._stabilizerTM && clearTimeout(this._stabilizerTM);\n\t\n\t                this._stabilizerTM = setTimeout(function (e) {\n\t                    _this14._stabilizerTM = null;\n\t                    if (_this14.__locks.all) return;\n\t\n\t                    _this14._propagTM && clearTimeout(_this14._propagTM);\n\t\n\t                    _this14._stable = true;\n\t                    _this14.emit(\"stable\", _this14);\n\t\n\t                    !_this14.dead && _this14._propag(); // stability can induce destroy\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'propag',\n\t        value: function propag() {\n\t            var _this15 = this;\n\t\n\t            this._propagTM && clearTimeout(this._propagTM);\n\t            this._propagTM = setTimeout(function (e) {\n\t                _this15._propagTM = null;\n\t                _this15._propag();\n\t            }, 2);\n\t        }\n\t    }, {\n\t        key: '_propag',\n\t        value: function _propag() {\n\t            var _this16 = this;\n\t\n\t            if (this._followers.length) this._followers.forEach(function (_ref3) {\n\t                var obj = _ref3[0],\n\t                    key = _ref3[1],\n\t                    as = _ref3[2],\n\t                    lastRevs = _ref3[3];\n\t\n\t                var data = _this16.getUpdates(lastRevs);\n\t                if (!data) return;\n\t                if (typeof obj != \"function\") {\n\t                    if (as) obj.setState(_defineProperty({}, as, data));else obj.setState(data);\n\t                } else {\n\t                    obj(data, lastRevs && [].concat(_toConsumableArray(lastRevs)) || \"no revs\");\n\t                }\n\t                // lastRevs &&\n\t                // key.forEach(id => (lastRevs[id] = this.stores[id] && this.stores[id]._rev || 0));\n\t            });\n\t            this.emit(\"update\", this.getUpdates());\n\t        }\n\t\n\t        /**\n\t         * is stable\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: 'isStable',\n\t        value: function isStable() {\n\t            return this._stable;\n\t        }\n\t\n\t        //serializeChilds( childs = [] ) {\n\t        //\n\t        //}\n\t\n\t    }, {\n\t        key: '_addChild',\n\t        value: function _addChild(ctx) {\n\t            var _this17 = this;\n\t\n\t            this._childScopes.push(ctx);\n\t            var lists = {\n\t                'stable': function stable(s) {\n\t                    _this17._unStableChilds--;\n\t                    if (!_this17._unStableChilds) _this17.emit(\"stableTree\", _this17);\n\t                },\n\t                'unstable': function unstable(s) {\n\t                    _this17._unStableChilds++;\n\t                    if (1 == _this17._unStableChilds) _this17.emit(\"unstableTree\", _this17);\n\t                },\n\t                'stableTree': function stableTree(s) {\n\t                    _this17._unStableChilds--;\n\t                    if (!_this17._unStableChilds) _this17.emit(\"stableTree\", _this17);\n\t                },\n\t                'unstableTree': function unstableTree(s) {\n\t                    _this17._unStableChilds++;\n\t                    if (1 == _this17._unStableChilds) _this17.emit(\"unstableTree\", _this17);\n\t                },\n\t                'destroy': function destroy(ctx) {\n\t                    if (ctx._unStableChilds) _this17._unStableChilds--;\n\t                    if (!ctx.isStable()) _this17._unStableChilds--;\n\t\n\t                    if (!_this17._unStableChilds) _this17.emit(\"stableTree\", _this17);\n\t                }\n\t            },\n\t                wasStable = this._unStableChilds;\n\t            //!ctx.isStable() && console.warn('add unstable child');\n\t            !ctx.isStable() && this._unStableChilds++;\n\t            ctx._unStableChilds && this._unStableChilds++;\n\t            this._childScopesList.push(lists);\n\t            if (!wasStable && this._unStableChilds) this.emit(\"unstableTree\", this);\n\t            ctx.on(lists);\n\t        }\n\t    }, {\n\t        key: '_rmChild',\n\t        value: function _rmChild(ctx) {\n\t            var i = this._childScopes.indexOf(ctx),\n\t                wasStable = this._unStableChilds;\n\t            if (i != -1) {\n\t                this._childScopes.splice(i, 1);\n\t                !ctx.isStable() && this._unStableChilds--;\n\t                ctx._unStableChilds && this._unStableChilds--;\n\t                ctx.un(this._childScopesList.splice(i, 1)[0]);\n\t                if (wasStable && !this._unStableChilds) this.emit(\"stableTree\");\n\t            }\n\t        }\n\t    }, {\n\t        key: 'retain',\n\t        value: function retain(reason) {\n\t            this.__retains.all++;\n\t            //console.log(\"retain\", this._id, reason);\n\t            if (reason) {\n\t                this.__retains[reason] = this.__retains[reason] || 0;\n\t                this.__retains[reason]++;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dispose',\n\t        value: function dispose(reason) {\n\t            var _this18 = this;\n\t\n\t            //console.log(\"dispose\", this._id, reason);\n\t            if (reason) {\n\t                if (!this.__retains[reason]) throw new Error(\"Dispose more than retaining : \" + reason);\n\t                this.__retains[reason]--;\n\t            }\n\t\n\t            if (!this.__retains.all) throw new Error(\"Dispose more than retaining !\");\n\t\n\t            this.__retains.all--;\n\t\n\t            if (!this.__retains.all) {\n\t                //console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n\t                if (this._persistenceTm) {\n\t                    this._destroyTM && clearTimeout(this._destroyTM);\n\t                    this._destroyTM = setTimeout(function (e) {\n\t                        _this18.then(function (s) {\n\t                            !_this18.__retains.all && _this18.destroy();\n\t                        });\n\t                    }, this._persistenceTm);\n\t                } else {\n\t                    this.then(function (s) {\n\t                        return !_this18.__retains.all && _this18.destroy();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * order destroy of local stores\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            var _this19 = this;\n\t\n\t            var ctx = this.__scope;\n\t            //console.warn(\"destroy\", this._id);\n\t            this.dead = true;\n\t            this.emit(\"destroy\", this);\n\t            Object.keys(this.__listening).forEach(function (id) {\n\t                return _this19.__scope[id].removeListener(_this19.__listening[id]);\n\t            });\n\t\n\t            this._stabilizerTM && clearTimeout(this._stabilizerTM);\n\t            this._propagTM && clearTimeout(this._propagTM);\n\t            this.__listening = {};\n\t\n\t            if (this._isLocalId) delete openScopes[this._id];\n\t            this._followers.length = 0;\n\t\n\t            while (this.__mixedList.length) {\n\t                this.__mixed[0].removeListener(this.__mixedList.shift());\n\t                this.__mixed.shift().dispose(\"mixedTo\");\n\t            }\n\t            if (this.__parentList) {\n\t                this.parent._rmChild(this);\n\t                this.parent.removeListener(this.__parentList);\n\t                this.parent.dispose(\"isMyParent\");\n\t                this.__parentList = null;\n\t            }\n\t            //for ( let key in ctx )\n\t            //    if ( !is.fn(ctx[key]) ) {\n\t            //        if ( ctx[key].scopeObj === this )\n\t            //            ctx[key].dispose();\n\t            //\n\t            //        ctx[key] = ctx[key].constructor;\n\t            //    }\n\t            this.__mixed = this.data = this.state = this.scope = this.stores = null;\n\t            this._data = this._state = this._stores = null;\n\t        }\n\t    }, {\n\t        key: 'datas',\n\t        get: function get() {\n\t            return this.data;\n\t        }\n\t    }]);\n\t\n\t    return Scope;\n\t}(EventEmitter);\n\t\n\tScope.persistenceTm = 1;\n\tScope.Store = null;\n\tScope.scopes = openScopes;\n\texports.default = Scope;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"shortid\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/*\n\t * Copyright (c)  2018 Wise Wild Web .\n\t *\n\t *  MIT License\n\t *\n\t *  Permission is hereby granted, free of charge, to any person obtaining a copy\n\t *  of this software and associated documentation files (the \"Software\"), to deal\n\t *  in the Software without restriction, including without limitation the rights\n\t *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t *  copies of the Software, and to permit persons to whom the Software is\n\t *  furnished to do so, subject to the following conditions:\n\t *\n\t *  The above copyright notice and this permission notice shall be included in all\n\t *  copies or substantial portions of the Software.\n\t *\n\t *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t *  SOFTWARE.\n\t *\n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\t\n\t/**\n\t * Ultra scalable state-aware store\n\t *\n\t * @todo : lot of optims...\n\t */\n\t\n\tvar is = __webpack_require__(1),\n\t    Scope = __webpack_require__(3),\n\t    EventEmitter = __webpack_require__(2),\n\t    shortid = __webpack_require__(4),\n\t    objProto = Object.getPrototypeOf({});\n\t/**\n\t * @class Store\n\t */\n\t\n\tvar Store = function (_EventEmitter) {\n\t    _inherits(Store, _EventEmitter);\n\t\n\t    /**\n\t     * Constructor, will build a rescope store\n\t     *\n\t     * (scope, {require,use,apply,state, data})\n\t     * (scope)\n\t     *\n\t     * @param scope {object} scope where to find the other stores (default : static staticScope )\n\t     * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n\t     */\n\t    // overridable list of store that will allow push if updated\n\t    function Store() {\n\t        var _this$_require, _this$_require2;\n\t\n\t        _classCallCheck(this, Store);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));\n\t\n\t        var argz = [].concat(Array.prototype.slice.call(arguments)),\n\t            _static = _this.constructor,\n\t            scope = argz[0] instanceof Scope ? argz.shift() : _static.scope ? Scope.getScope(_static.scope) : is.string(argz[0]) ? Scope.getScope(argz.shift()) : _static.staticScope,\n\t            cfg = argz[0] && !is.array(argz[0]) && !is.string(argz[0]) ? argz.shift() : {},\n\t            name = is.string(argz[0]) ? argz[0] : cfg.name || _static.name,\n\t            watchs = is.array(argz[0]) ? argz.shift() : cfg.use || [],\n\t            // watchs need to be defined after all the\n\t        // store are registered : so we can't deal\n\t        // with any \"static use\" automaticly\n\t        apply = is.fn(argz[0]) ? argz.shift() : cfg.apply || null,\n\t            initialState = _static.state || _static.initialState,\n\t            applied;\n\t\n\t        _this._uid = cfg._uid || shortid.generate();\n\t\n\t        _this.__retains = { all: 0 };\n\t        _this.__locks = { all: 0 };\n\t        _this._onStabilize = [];\n\t\n\t        _this._persistenceTm = cfg.persistenceTm || _this.constructor.persistenceTm;\n\t        if (is.string(argz[0])) {\n\t            if (scope.__scope[name]) console.warn(\"ReScope: Overwriting an existing static named store ( %s ) !!\", name);\n\t            scope.__scope[name] = _this;\n\t        }\n\t\n\t        if (cfg && cfg.on) {\n\t            _this.on(cfg.on);\n\t        }\n\t        // this.state      = this.state || {};\n\t\n\t\n\t        _this.name = name;\n\t\n\t        if (scope.stores) {\n\t            _this.scopeObj = scope;\n\t            _this.scope = scope.stores;\n\t        } else {\n\t            _this.scopeObj = new Scope(scope);\n\t            _this.scope = scope.stores;\n\t        }\n\t\n\t        _this._rev = _this.constructor._rev || 0;\n\t        _this._revs = {};\n\t        _this.stores = {};\n\t        _this._require = [];\n\t\n\t        if (is.array(_static.use)) {\n\t            _this._use = [].concat(_toConsumableArray(watchs), _toConsumableArray((_static.use || []).map(function (key) {\n\t                var ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n\t                if (ref[1]) {\n\t                    var ref2 = ref[2].split('.');\n\t                    _this._require.push(ref[3] || ref2[ref2.length - 1]);\n\t                }\n\t                return ref[2];\n\t            })));\n\t        } else {\n\t            _this._use = [].concat(_toConsumableArray(watchs), _toConsumableArray(_static.use ? Object.keys(_static.use).map(function (key) {\n\t                var ref = key.match(/^(\\!?)(.*)$/);\n\t                ref[1] && _this._require.push(_static.use[key]);\n\t                return ref[2] + (_static.use[key] === true ? '' : ':' + _static.use[key]);\n\t            }) : []));\n\t        }\n\t\n\t        if (_static.require) (_this$_require = _this._require).push.apply(_this$_require, _toConsumableArray(_static.require));\n\t        if (cfg.require) (_this$_require2 = _this._require).push.apply(_this$_require2, _toConsumableArray(cfg.require));\n\t\n\t        _this._followers = [];\n\t\n\t        if (_static.data !== undefined) _this.data = _extends({}, _static.data);\n\t        if (cfg.hasOwnProperty(\"data\") && cfg.data !== undefined) _this.data = cfg.data;\n\t        if (cfg.hasOwnProperty(\"state\") && cfg.state !== undefined) initialState = _extends({}, initialState, cfg.state);\n\t\n\t        if (apply) _this.apply = apply;\n\t\n\t        if (initialState || _this._use.length) {\n\t            // sync apply\n\t            _this.state = _extends({}, initialState || {}, scope.map(_this, _this._use));\n\t            if (_this.shouldApply(_this.state) && _this.data === undefined) {\n\t                _this.data = _this.apply(_this.data, _this.state, _this.state);\n\t                applied = true;\n\t            }\n\t        }\n\t\n\t        if ((_this.data !== undefined || applied) && !_this.__locks.all) {\n\t            _this._stable = true;\n\t            _this._rev++;\n\t        } else {\n\t            _this._stable = false;\n\t            if (!_static.managed && !_this.state && (!_this._use || !_this._use.length)) {\n\t                console.warn(\"Rescope store '\", _this.name, \"' have no initial data, state or use. It can't stabilize...\");\n\t            }\n\t        }\n\t        !_this._stable && _this.emit('unstable', _this.state);\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * get a Builder-key pair for Store::map\n\t     * @param {string} name\n\t     * @returns {{store: Store, name: *}}\n\t     */\n\t    // default state\n\t    /**\n\t     * if retain goes to 0 :\n\t     * false to not destroy,\n\t     * 0 to sync auto destroy\n\t     * Ms to autodestroy after tm ms if no retain has been called\n\t     * @type {boolean|Int}\n\t     */\n\t    // overridable list of source stores\n\t\n\t\n\t    _createClass(Store, [{\n\t        key: 'shouldPropag',\n\t\n\t\n\t        /**\n\t         * Overridable method to know if a data change should be propag to the listening stores & components\n\t         */\n\t        value: function shouldPropag(nDatas) {\n\t            var _static = this.constructor,\n\t                r,\n\t                cDatas = this.data;\n\t            r = !cDatas && nDatas;\n\t            cDatas && Object.keys(cDatas).forEach(function (key) {\n\t                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key]);\n\t            });\n\t            nDatas && Object.keys(nDatas).forEach(function (key) {\n\t                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key]);\n\t            });\n\t            return !!r;\n\t        }\n\t\n\t        /**\n\t         * Overridable method to know if a state change should be applied\n\t         */\n\t\n\t    }, {\n\t        key: 'shouldApply',\n\t        value: function shouldApply() {\n\t            var _this2 = this;\n\t\n\t            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\t\n\t            var _static = this.constructor;\n\t\n\t            return !!this.isComplete(state) && (is.array(_static.follow) ? _static.follow.reduce(function (r, i) {\n\t                return r || state && state[i];\n\t            }, false) : _static.follow ? Object.keys(_static.follow).reduce(function (r, i) {\n\t                return r || state && is.fn(_static.follow[i]) && _static.follow[i].call(_this2, state[i]) || _static.follow[i] && state[i] !== _this2.state[i];\n\t            }, false) : true);\n\t        }\n\t\n\t        /**\n\t         * Overridable applier / remapper\n\t         * If state or lastPublicState are simple hash maps apply will return {...data, ...state}\n\t         * if not it will return the last private state\n\t         * @param data\n\t         * @param state\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'apply',\n\t        value: function apply(data, state, changes) {\n\t            state = state || this.state;\n\t\n\t            if (this.refine) return this.refine.apply(this, arguments);\n\t\n\t            if (!data || data.__proto__ !== objProto || state.__proto__ !== objProto) return state;else return _extends({}, data, state);\n\t        }\n\t\n\t        /**\n\t         * @depreciated\n\t         * @param data\n\t         * @param state\n\t         * @param changes\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'refine',\n\t        value: function refine(data, state, changes) {\n\t            state = state || this.state;\n\t\n\t            if (!data || data.__proto__ !== objProto || state.__proto__ !== objProto) return state;else return _extends({}, data, state);\n\t        }\n\t\n\t        /**\n\t         * Debounce this store propagation ( & reducing )\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'stabilize',\n\t        value: function stabilize(cb) {\n\t            var _this3 = this;\n\t\n\t            cb && this.once('stable', cb);\n\t            this._stable && this.emit('unstable', this.state, this.data);\n\t\n\t            this._stable = false;\n\t\n\t            if (this._stabilizer) clearTimeout(this._stabilizer);\n\t\n\t            this._stabilizer = setTimeout(this.push.bind(this, null, function () {\n\t                //@todo\n\t\n\t                var stable = _this3._stable;\n\t                _this3._stable = true;\n\t                !stable && _this3.emit('stable', _this3.state, _this3.data);\n\t                _this3._stabilizer = null;\n\t                // this.release();\n\t            }));\n\t        }\n\t    }, {\n\t        key: 'retrieve',\n\t        value: function retrieve(path) {\n\t            var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t            var obj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.data;\n\t\n\t            path = is.string(path) ? path.split('.') : path;\n\t            return !obj || !path || !path.length ? obj : path.length == i + 1 ? obj[path[i]] : this.retrieve(path, i + 1, obj[path[i]]);\n\t        }\n\t    }, {\n\t        key: 'dispatch',\n\t        value: function dispatch(action) {\n\t            var _scopeObj;\n\t\n\t            for (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                argz[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            (_scopeObj = this.scopeObj).dispatch.apply(_scopeObj, [action].concat(argz));\n\t        }\n\t    }, {\n\t        key: 'trigger',\n\t        value: function trigger(action) {\n\t            var actions = this.constructor.actions,\n\t                ns = void 0;\n\t\n\t            if (actions && actions[action]) {\n\t                var _actions$action;\n\t\n\t                for (var _len2 = arguments.length, argz = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t                    argz[_key2 - 1] = arguments[_key2];\n\t                }\n\t\n\t                ns = (_actions$action = actions[action]).call.apply(_actions$action, [this].concat(argz));\n\t                ns && this.setState(ns);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Pull stores in the private state\n\t         * @param stores  {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n\t         */\n\t\n\t    }, {\n\t        key: 'pull',\n\t        value: function pull(stores, doWait, origin) {\n\t            var _this4 = this;\n\t\n\t            var initialOutputs = this.scopeObj.map(this, stores);\n\t            if (doWait) {\n\t                this.wait();\n\t                stores.forEach(function (s) {\n\t                    return _this4.scope[s] && _this4.wait(_this4.scope[s]);\n\t                });\n\t                this.release();\n\t            }\n\t            return initialOutputs;\n\t        }\n\t\n\t        /**\n\t         * Apply apply/remap on the private state & push the resulting \"public\" state to followers\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'push',\n\t        value: function push(data, force, cb) {\n\t            cb = force === true ? cb : force;\n\t            force = force === true;\n\t            var i = 0,\n\t                nextState = !data && _extends({}, this.state, this._changesSW) || this.state,\n\t                nextDatas = data || this.apply(this.data, nextState, this._changesSW);\n\t\n\t            this.state = nextState;\n\t            if (!force && (!this.data && this.data === nextDatas || !this.shouldPropag(nextDatas))) {\n\t                cb && cb();\n\t                return false;\n\t            }\n\t\n\t            this.data = nextDatas;\n\t            this._changesSW = {};\n\t            //this.__locks.all++;\n\t            this.wait();\n\t            this.release(cb);\n\t        }\n\t\n\t        /**\n\t         * Update the current private state & push it once the store is stable\n\t         * @param pState\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'setState',\n\t        value: function setState(pState, cb, sync) {\n\t            var i = 0,\n\t                change,\n\t                changes = this._changesSW = this._changesSW || {};\n\t            for (var k in pState) {\n\t                if (!this.state || pState.hasOwnProperty(k) && (pState[k] != this.state[k] || this.state[k] && pState[k] && pState[k]._rev != this._revs[k] // rev/hash update\n\t                )) {\n\t                    change = true;\n\t                    this._revs[k] = pState[k] && pState[k]._rev || true;\n\t                    changes[k] = pState[k];\n\t                }\n\t            }if (!this.shouldApply(_extends({}, this.state, changes))) {\n\t                return;\n\t            }\n\t\n\t            if (sync) {\n\t                this.push();\n\t                cb && cb();\n\t            } else {\n\t                if (change) {\n\t                    this.stabilize(cb);\n\t                } else cb && cb();\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Update the current private state & push it once the store is stable\n\t         * @param pState\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'setStateSync',\n\t        value: function setStateSync(pState) {\n\t            var i = 0,\n\t                change,\n\t                changes = this._changesSW = this._changesSW || {};\n\t            for (var k in pState) {\n\t                if (!this.state || pState.hasOwnProperty(k) && (pState[k] != this.state[k] || this.state[k] && pState[k] && pState[k]._rev != this._revs[k] // rev/hash update\n\t                )) {\n\t                    change = true;\n\t                    this._revs[k] = pState[k] && pState[k]._rev || true;\n\t                    changes[k] = pState[k];\n\t                }\n\t            }this.shouldApply(_extends({}, this.state || {}, changes)) && this.push();\n\t            return this.data;\n\t        }\n\t\n\t        /**\n\t         * Replace the current private state & push it once the store is stable\n\t         * @param pState\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'replaceState',\n\t        value: function replaceState(pState, cb) {\n\t            var i = 0,\n\t                me = this;\n\t            this.state = pState;\n\t\n\t            this.stabilize(cb);\n\t        }\n\t\n\t        /**\n\t         * get a store-key pair for Store::map\n\t         * @param {string} name\n\t         * @returns {{store: Store, name: *}}\n\t         */\n\t\n\t    }, {\n\t        key: 'as',\n\t        value: function as(name) {\n\t            return { store: this, name: name };\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(lists) {\n\t            var _this5 = this;\n\t\n\t            if (!is.string(lists) && lists) Object.keys(lists).forEach(function (k) {\n\t                return _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'on', _this5).call(_this5, k, lists[k]);\n\t            });else _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'on', this).apply(this, arguments);\n\t        }\n\t    }, {\n\t        key: 'removeListener',\n\t        value: function removeListener(lists) {\n\t            var _this6 = this;\n\t\n\t            if (!is.string(lists) && lists) Object.keys(lists).forEach(function (k) {\n\t                return _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'removeListener', _this6).call(_this6, k, lists[k]);\n\t            });else _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'removeListener', this).apply(this, arguments);\n\t        }\n\t\n\t        /**\n\t         * relink bindings & requires\n\t         * @param {string} name\n\t         * @returns {{store: Store, name: *}}\n\t         */\n\t\n\t    }, {\n\t        key: 'relink',\n\t        value: function relink(from) {\n\t            var _this7 = this;\n\t\n\t            var scope = this.scopeObj,\n\t                _static = this.constructor;\n\t            if (_static.use) {\n\t                //todo unlink\n\t                this.pull(_static.use, false, from);\n\t            }\n\t\n\t            if (this._require) {\n\t                this._require.forEach(function (store) {\n\t                    return _this7.wait(scope.__scope[store]);\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * is complete (all requiered keys are here)\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: 'isComplete',\n\t        value: function isComplete() {\n\t            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\t\n\t            var _static = this.constructor;\n\t            return !this._require || !this._require.length || state && this._require.reduce(function (r, key) {\n\t                return r && state[key];\n\t            }, true);\n\t        }\n\t\n\t        /**\n\t         * is stable\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: 'isStable',\n\t        value: function isStable() {\n\t            return this._stable;\n\t        }\n\t\n\t        /**\n\t         * Un bind this store off the given component-key\n\t         * @param obj\n\t         * @param key\n\t         * @returns {Array.<*>}\n\t         */\n\t\n\t    }, {\n\t        key: 'unBind',\n\t        value: function unBind(obj, key, path) {\n\t            var followers = this._followers,\n\t                i = followers && followers.length;\n\t            while (followers && i--) {\n\t                if (followers[i][0] === obj && followers[i][1] === key && followers[i][2] === path) return followers.splice(i, 1);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Bind this store changes to the given component-key\n\t         * @param obj {React.Component|Store|function)\n\t         * @param key {string} optional key where to map the public state\n\t         */\n\t\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(obj, key) {\n\t            var setInitial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t            var path = arguments[3];\n\t\n\t            this._followers.push([obj, key, path]);\n\t            if (setInitial && this.data && this._stable) {\n\t                var data = path ? this.retrieve(path) : this.data;\n\t                if (typeof obj != \"function\") {\n\t                    if (key) obj.setState(_defineProperty({}, key, data));else obj.setState(data);\n\t                } else {\n\t                    obj(data);\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * once('stable', cb)\n\t         * @param obj {React.Component|Store|function)\n\t         * @param key {string} optional key where to map the public state\n\t         */\n\t\n\t    }, {\n\t        key: 'then',\n\t        value: function then(cb) {\n\t            var _this8 = this;\n\t\n\t            if (this._stable) return cb(null, this.data);\n\t            this.once('stable', function (e) {\n\t                return cb(null, _this8.data);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Add a lock so the store will not propag it state untill release() is call\n\t         * @param previous {Store|number|Array} @optional wf to wait, releases to wait or array of stuff to wait\n\t         * @returns {TaskFlow}\n\t         */\n\t\n\t    }, {\n\t        key: 'wait',\n\t        value: function wait(previous) {\n\t            if (typeof previous == \"number\") return this.__locks.all += previous;\n\t            if (is.array(previous)) return previous.map(this.wait.bind(this));\n\t\n\t            this._stable && this.emit('unstable', this.state, this.data);\n\t            this._stable = false;\n\t            this.__locks.all++;\n\t\n\t            var reason = is.string(previous) ? previous : null;\n\t            if (reason) {\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]++;\n\t            }\n\t            if (previous && is.fn(previous.then)) {\n\t                previous.then(this.release.bind(this, null));\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Decrease locks for this store, if it reach 0 & it have a public state,\n\t         * it will be propagated to the followers,\n\t         * then, all stuff passed to \"then\" call back will be exec / released\n\t         * @param desync\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'release',\n\t        value: function release(reason, cb) {\n\t            var _this9 = this;\n\t\n\t            var _static = this.constructor;\n\t            var i = 0,\n\t                wasStable = this._stable;\n\t\n\t            if (is.fn(reason)) {\n\t                cb = reason;\n\t                reason = null;\n\t            }\n\t\n\t            if (reason) {\n\t                if (this.__locks[reason] == 0) console.error(\"Release more than locking !\", reason);\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]--;\n\t            }\n\t\n\t            if (!reason && this.__locks.all == 0) console.error(\"Release more than locking !\");\n\t\n\t            if (! --this.__locks.all && this.data && this.isComplete()) {\n\t                this._stable = true;\n\t                this._rev++; //\n\t                if (this._followers.length) this._followers.forEach(function (follower) {\n\t                    var data = follower[2] ? _this9.retrieve(follower[2]) : _this9.data;\n\t                    if (!data) return;\n\t                    if (typeof follower[0] == \"function\") {\n\t                        follower[0](data);\n\t                    } else {\n\t                        //cb && i++;\n\t                        follower[0].setState(follower[1] ? _defineProperty({}, follower[1], data) : data\n\t                        //,\n\t                        //cb && (\n\t                        //    () => (!(--i) && cb())\n\t                        //)\n\t                        );\n\t                    }\n\t                });\n\t                //else\n\t                !wasStable && this.emit('stable', this.data);\n\t                this.emit('update', this.data);\n\t                cb && cb();\n\t            } else cb && this.then(cb);\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'retain',\n\t        value: function retain(reason) {\n\t            this.__retains.all++;\n\t            if (reason) {\n\t                this.__retains[reason] = this.__retains[reason] || 0;\n\t                this.__retains[reason]++;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dispose',\n\t        value: function dispose(reason) {\n\t            var _this10 = this;\n\t\n\t            //console.warn(\"dispose\", reason, this.__retains);\n\t            if (reason) {\n\t                if (!this.__retains[reason]) throw new Error(\"Dispose more than retaining : \" + reason);\n\t\n\t                this.__retains[reason]--;\n\t            }\n\t            if (this.__retains.all == 0) throw new Error(\"Dispose more than retaining !\");\n\t\n\t            this.__retains.all--;\n\t\n\t            if (!this.__retains.all) {\n\t                if (this._persistenceTm) {\n\t                    this._destroyTM && clearTimeout(this._destroyTM);\n\t                    this._destroyTM = setTimeout(function (e) {\n\t                        _this10._destroyTM = null;\n\t                        _this10.then(function (s) {\n\t                            !_this10.__retains.all && _this10.destroy();\n\t                        });\n\t                    }, this._persistenceTm);\n\t                } else {\n\t                    this.then(function (s) {\n\t                        return !_this10.__retains.all && _this10.destroy();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            //  console.log(\"destroy\", this._uid);\n\t\n\t            this.emit('destroy', this);\n\t            if (this._stabilizer) clearTimeout(this._stabilizer);\n\t\n\t            if (this._followers.length) this._followers.forEach(function (follower) {\n\t                if (typeof follower[0] !== \"function\") {\n\t                    if (follower[0].stores) delete follower[0].stores[follower[1]];\n\t                }\n\t            });\n\t            this._followers.length = 0;\n\t            this.constructor._rev = this.rev;\n\t            this.dead = true;\n\t            this._revs = this.data = this.state = this.scope = null;\n\t            this.removeAllListeners();\n\t        }\n\t    }, {\n\t        key: 'contextObj',\n\t\n\t\n\t        /**\n\t         * @deprecated\n\t         * @returns {*}\n\t         */\n\t        get: function get() {\n\t            return this.scopeObj;\n\t        }\n\t        /**\n\t         * @deprecated\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'datas',\n\t        get: function get() {\n\t            return this.data;\n\t        }\n\t\n\t        /**\n\t         * @deprecated\n\t         * @returns {*}\n\t         */\n\t        ,\n\t        set: function set(v) {\n\t            //console.groupCollapsed(\"Rescope store : Setting datas is depreciated, use data\");\n\t            //console.log(\"Rescope store : Setting datas is depreciated, use data\", (new Error()).stack);\n\t            //console.groupEnd();\n\t\n\t            this.data = v;\n\t        }\n\t    }], [{\n\t        key: 'as',\n\t        value: function as(name) {\n\t            return { store: this, name: name };\n\t        }\n\t\n\t        /**\n\t         * Map all named stores in {keys} to the {object}'s state\n\t         * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n\t         * @static\n\t         * @param object {Object} target state aware object (React.Component|Store|...)\n\t         * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\", store.as('anotherKey')]\n\t         */\n\t\n\t    }, {\n\t        key: 'map',\n\t        value: function map(component, keys, scope, origin) {\n\t            var setInitial = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\t\n\t            var targetRevs = component._revs || {};\n\t            var targetScope = component.stores || (component.stores = {});\n\t            var initialOutputs = {};\n\t            keys = is.array(keys) ? [].concat(_toConsumableArray(keys)) : [keys];\n\t\n\t            scope = scope || Store.staticScope;\n\t\n\t            keys = keys.filter(\n\t            // @todo : use query refs\n\t            // (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n\t            function (key) {\n\t                if (!key) {\n\t                    console.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n\t                    return false;\n\t                }\n\t                var name = void 0,\n\t                    alias = void 0,\n\t                    path = void 0,\n\t                    store = void 0;\n\t                if (key.store && key.name) {\n\t                    alias = name = key.name;\n\t                    store = key.store;\n\t                } else if (is.fn(key)) {\n\t                    name = alias = key.name || key.defaultName;\n\t                    store = key;\n\t                } else {\n\t                    key = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n\t                    name = key[1];\n\t                    path = key[2] && key[2].split('.').slice(1);\n\t                    store = scope.stores[key[1]];\n\t                    alias = key[3] || path && path[path.length - 1] || key[1];\n\t                }\n\t\n\t                if (targetRevs[name]) return false; // ignore dbl uses for now\n\t\n\t                if (!store) {\n\t                    console.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + origin + ' !!', store);\n\t                    return false;\n\t                } else if (is.fn(store)) {\n\t                    scope._mount(name);\n\t\n\t                    scope.stores[name].bind(component, alias, setInitial, path);\n\t                } else {\n\t                    store.bind(component, alias, setInitial, path);\n\t                }\n\t                targetRevs[alias] = targetRevs[alias] || true;\n\t                !targetScope[name] && (targetScope[name] = scope.stores[name]);\n\t                if (scope.stores[name].hasOwnProperty('data')) initialOutputs[name] = scope.data[name];\n\t                return true;\n\t            });\n\t            var mixedCWUnmount,\n\t                unMountKey = component.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n\t\n\t            if (component.hasOwnProperty(unMountKey)) {\n\t                mixedCWUnmount = component[unMountKey];\n\t            }\n\t\n\t            component[unMountKey] = function () {\n\t                delete component[unMountKey];\n\t                if (mixedCWUnmount) component[unMountKey] = mixedCWUnmount;\n\t\n\t                keys.map(function (key) {\n\t                    var name = void 0,\n\t                        alias = void 0,\n\t                        path = void 0,\n\t                        store = void 0;\n\t                    if (key.store && key.name) {\n\t                        alias = name = key.name;\n\t                        store = key.store;\n\t                    } else if (is.fn(key)) {\n\t                        name = alias = key.name || key.defaultName;\n\t                        store = scope.stores[name];\n\t                    } else {\n\t                        key = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n\t                        name = key[1];\n\t                        path = key[2] && key[2].split('.');\n\t                        store = scope.stores[key[1]];\n\t                        alias = key[3] || path && path[path.length - 1] || key[1];\n\t                    }\n\t\n\t                    store && !is.fn(store) && store.unBind(component, alias, path);\n\t                });\n\t                return component[unMountKey] && component[unMountKey].apply(component, arguments);\n\t            };\n\t\n\t            return initialOutputs;\n\t        }\n\t    }]);\n\t\n\t    return Store;\n\t}(EventEmitter);\n\t\n\tStore.use = [];\n\tStore.staticScope = new Scope({}, { id: \"static\" });\n\tStore.state = undefined;\n\tStore.persistenceTm = false;\n\texports.default = Store;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/Rescope.nodeps.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 98bad6d73e8ae509eeae","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\nimport Scope from \"./Scope\";\nimport Store from \"./Store\";\n\nScope.Store = Store;\n\nexport default { Store, Context: Scope, Scope };\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Rescope.js","module.exports = require(\"is\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"is\"\n// module id = 1\n// module chunks = 0","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *  \n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *  \n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *  \n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *  \n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\nvar is = require('is');\nexport default class Emitter {\n    _events = {};\n    \n    on( evt, cb ) {\n        if ( !is.string(evt) && evt )\n            return Object.keys(evt).forEach(k => this.on(k, evt[k]));\n        \n        this._events[evt] = this._events[evt] || [];\n        this._events[evt].push(cb);\n        \n    }\n    \n    un( evt, cb ) {\n        if ( !is.string(evt) && evt )\n            return Object.keys(evt).forEach(k => this.un(k, evt[k]));\n        \n        if ( !this._events[evt] ) return;\n        var i = this._events[evt].indexOf(cb);\n        this._events[evt].splice(i, 1);\n    }\n    \n    emit( evt, ...argz ) {\n        if ( !this._events[evt] ) return;\n        let lists = [...this._events[evt]];\n        for ( var i = 0; i < lists.length; i++ ) {\n            lists[i](...argz);\n        }\n    }\n    \n    addListener() {\n        this.on(...arguments);\n    }\n    \n    removeListener() {\n        this.un(...arguments);\n    }\n    \n    removeAllListeners() {\n        this._events = {};\n    }\n    \n    once( evt, cb ) {\n        let fn;\n        this.on(evt, fn = ( ...argz ) => {\n            this.un(evt, fn);\n            cb(...argz)\n        });\n    }\n    \n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/Emitter.js","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\n\nvar is              = require('is'),\n    EventEmitter    = require('./Emitter'),\n    shortid         = require('shortid')\n    , __proto__push = ( target, id, parent ) => {\n        let fn           = function () {\n        };\n        fn.prototype     = parent ? new parent[\"_\" + id]() : target[id] || {};\n        target[id]       = new fn();\n        target['_' + id] = fn;\n    },\n    openScopes    = {};\n\n\nexport default class Scope extends EventEmitter {\n    static persistenceTm = 1;// if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n    static Store         = null;\n    static scopes      = openScopes;// all active scopes\n    \n    static getScope( scopes ) {\n        let skey = is.array(scopes) ? scopes.sort(( a, b ) => {\n            if ( a.firstname < b.firstname ) return -1;\n            if ( a.firstname > b.firstname ) return 1;\n            return 0;\n        }).join('::') : scopes;\n        return openScopes[skey] = openScopes[skey] || new Scope({}, { id: skey });\n    };\n    \n    /**\n     * Init a Rescope scope\n     *\n     * @param storesMap {Object} Object with the origin stores\n     * @param id {string} @optional id ( if this id exist storesMap will be merge on the 'id' scope)\n     * @param parent\n     * @param state\n     * @param data\n     * @param name\n     * @param defaultMaxListeners\n     * @param persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n     * @param autoDestroy  {bool} will trigger retain & dispose after start\n     * @returns {Scope}\n     */\n    constructor( storesMap, { id, parent, state, data, name, incrementId, defaultMaxListeners, persistenceTm, autoDestroy, rootEmitter } = {} ) {\n        super();\n        \n        this._maxListeners = defaultMaxListeners || this.constructor.defaultMaxListeners;\n        id                 = id || (\"_____\" + shortid.generate());\n        if ( openScopes[id] && !incrementId ) {\n            this._id = id;\n            openScopes[id].register(storesMap);\n            return openScopes[id]\n        }\n        else if ( openScopes[id] && incrementId ) {\n            let i = -1;\n            while ( openScopes[id + '/' + (++i)] ) ;\n            id = id + '/' + i;\n        }\n        \n        this._id            = id;\n        openScopes[id]    = this;\n        this._isLocalId     = true;\n        this._persistenceTm = persistenceTm || this.constructor.persistenceTm;\n        \n        this.stores = {};\n        this.state  = {};\n        this.data   = {};\n        \n        if ( parent && parent.dead )\n            throw new Error(\"Can't use a dead scope as parent !\");\n        \n        __proto__push(this, 'stores', parent);\n        __proto__push(this, 'state', parent);\n        __proto__push(this, 'data', parent);\n        this.parent = parent;\n        \n        \n        this.sources            = [];\n        this._childScopes     = [];\n        this._childScopesList = [];\n        this._unStableChilds    = 0;\n        \n        this.__retains   = { all: 0 };\n        this.__locks     = { all: 1 };\n        this.__listening = {};\n        this.__scope   = {};\n        this.__mixed     = [];\n        this.__mixedList = [];\n        this._followers  = [];\n        if ( parent ) {\n            parent.retain(\"isMyParent\");\n            if ( !rootEmitter ) {\n                !parent._stable && this.wait(\"waitingParent\");\n                parent.on(this.__parentList = {\n                    'stable'  : s => this.release(\"waitingParent\"),\n                    'unstable': s => this.wait(\"waitingParent\"),\n                    'update'  : s => this._propag()\n                });\n            }\n            else {\n                parent.on(this.__parentList = {\n                    'update': s => this._propag()\n                });\n            }\n            // this.register(parent.__scope, state, data);\n        }\n        \n        \n        this.register(storesMap, state, data);\n        this.__locks.all--;\n        this._stable = !this.__locks.all;\n        \n        if ( parent ) {\n            parent._addChild(this);\n        }\n        if ( autoDestroy )\n            setTimeout(\n                tm => {\n                    this.retain(\"autoDestroy\");\n                    this.dispose(\"autoDestroy\");\n                }\n            )\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get datas() {\n        return this.data;\n    }\n    \n    /**\n     *\n     * Mount the stores in storesList, in this scope or in its parents or mixed scopes\n     *\n     * @param storesList {string|storeRef} Store name, Array of Store names, or Rescope store ref from Store::as or\n     *     Store:as\n     * @param state\n     * @param data\n     * @returns {Scope}\n     */\n    mount( storesList, state, data ) {\n        if ( is.array(storesList) ) {\n            storesList.forEach(k => this._mount(k, state && state[k], data && data[k]));\n        }\n        else {\n            this._mount(...arguments);\n        }\n        return this;\n    }\n    \n    _mount( id, state, data ) {\n        if ( typeof id !== 'string' ) {\n            this.register({ [id.name]: id.store });\n            id = id.name;\n        }\n        \n        if ( !this.__scope[id] ) {//ask mixed || parent\n            if ( this.__mixed.reduce(( mounted, ctx ) => (mounted || ctx._mount(id, state, data)), false) ||\n                !this.parent )\n                return;\n            return this.parent._mount(...arguments);\n        }\n        let store = this.__scope[id], ctx;\n        if ( is.fn(store) ) {\n            this.__scope[id] = new store(this, { state, data });\n        }\n        else {\n            if ( state !== undefined && data === undefined )\n                store.setState(state);\n            else if ( state !== undefined )\n                store.state = state;\n            \n            if ( data !== undefined )\n                store.push(data);\n        }\n        \n        \n        this._watchStore(id);\n        \n        return this.__scope[id];\n    }\n    \n    _watchStore( id, state, data ) {\n        if ( !this.__scope[id] ) {//ask mixed || parent\n            if ( this.__mixed.reduce(( mounted, ctx ) => (mounted || ctx._watchStore(id, state, data)), false) ||\n                !this.parent )\n                return;\n            return this.parent._watchStore(...arguments);\n        }\n        if ( !this.__listening[id] && !is.fn(this.__scope[id]) ) {\n            !this.__scope[id].isStable() && this.wait(id);\n            this.__scope[id].on(\n                this.__listening[id] = {\n                    'destroy' : s => {\n                        delete this.__listening[id];\n                        this.__scope[id] = this.__scope[id].constructor;\n                    },\n                    'update'  : s => this.propag(),\n                    'stable'  : s => this.release(id),\n                    'unstable': s => this.wait(id)\n                });\n        }\n        return true;\n    }\n    \n    /**\n     * Mix targetCtx on this scope\n     * Mixed scope parents are NOT mapped\n     * @param targetCtx\n     */\n    mixin( targetCtx ) {\n        let parent = this.parent, lists;\n        this.__mixed.push(targetCtx)\n        targetCtx.retain(\"mixedTo\");\n        if ( !targetCtx._stable )\n            this.wait(targetCtx._id);\n        \n        this.__mixedList.push(lists = {\n            'stable'  : s => this.release(targetCtx._id),\n            'unstable': s => this.wait(targetCtx._id),\n            'update'  : s => this._propag()\n        });\n        \n        this.stores = {};\n        this.state  = {};\n        this.data   = {};\n        targetCtx.on(lists);\n        __proto__push(this, 'stores', parent);\n        __proto__push(this, 'state', parent);\n        __proto__push(this, 'data', parent);\n        \n        this.relink(this.__scope, this, false, true);\n        this.__mixed.forEach(\n            ctx => {\n                __proto__push(this, 'stores');\n                __proto__push(this, 'state');\n                __proto__push(this, 'data');\n                ctx.relink(ctx.__scope, this, true, true)\n            }\n        )\n    }\n    \n    /**\n     * Register stores in storesMap & link them in the protos\n     * @param storesMap\n     * @param state\n     * @param data\n     */\n    register( storesMap, state = {}, data = {} ) {\n        this.relink(storesMap, this, false, false);\n        Object.keys(storesMap).forEach(\n            id => {\n                if ( storesMap[id].singleton || (is.fn(storesMap[id]) && (state[id] || data[id])) ) {\n                    this._mount(id, state[id], data[id])\n                }\n                else if ( state[id] || data[id] ) {\n                    if ( data[id] ) {\n                        if ( state[id] )\n                            this.stores[id].state = state[id];\n                        this.stores[id].push(data[id]);\n                    }\n                    else if ( state[id] ) {\n                        this.stores[id].setState(state[id]);\n                    }\n                }\n                else {\n                    this._watchStore(id);\n                }\n            }\n        )\n        \n    }\n    \n    /**\n     * Map srcCtx store's on targetCtx headers proto's\n     * @param srcCtx\n     * @param targetCtx\n     * @param state\n     * @param data\n     */\n    relink( srcCtx, targetCtx = this, external, force ) {\n        let lctx = targetCtx._stores.prototype;\n        Object.keys(srcCtx)\n              .forEach(\n                  id => {\n                      if ( !force && targetCtx.__scope[id] === srcCtx[id] ||\n                          targetCtx.__scope[id] && (targetCtx.__scope[id].constructor === srcCtx[id] ) )\n                          return;\n                \n                      if ( !force && targetCtx.__scope[id] ) {\n                          if ( !external && !is.fn(targetCtx.__scope[id]) ) {\n                              console.info(\"Rescope Store : \", id, \" already exist in this scope ! ( try __proto__ hot patch )\");\n                              targetCtx.__scope[id].__proto__ = srcCtx[id].prototype;\n                        \n                          }\n                          if ( !external && is.fn(targetCtx.__scope[id]) )\n                              targetCtx.__scope[id] = srcCtx[id];\n                    \n                          return;\n                      }\n                      else if ( !force && !external )\n                          this.__scope[id] = srcCtx[id];\n                \n                      Object.defineProperty(\n                          lctx,\n                          id,\n                          {\n                              get: () => this.__scope[id]\n                          }\n                      );\n                      Object.defineProperty(\n                          targetCtx._state.prototype,\n                          id,\n                          {\n                              get: () => (this.__scope[id] && this.__scope[id].state),\n                              set: ( v ) => (this._mount(id, v))\n                          }\n                      );\n                      Object.defineProperty(\n                          targetCtx._data.prototype,\n                          id,\n                          {\n                              get: () => (this.__scope[id] && this.__scope[id].data),\n                              set: ( v ) => (this._mount(id, undefined, v))\n                          }\n                      );\n                  }\n              )\n    }\n    \n    /**\n     * Bind stores from this scope, his parents and mixed scope\n     *\n     * @param obj {React.Component|Store|function}\n     * @param key {string} stores keys to bind updates\n     * @param as\n     * @param setInitial {bool} false to not propag initial value (default : true)\n     */\n    bind( obj, key, as, setInitial = true ) {\n        let lastRevs, data, reKey;\n        if ( key && !is.array(key) )\n            key = [key];\n        \n        if ( as === false || as === true ) {\n            setInitial = as;\n            as         = null;\n        }\n        \n        reKey = key.map(id => (is.string(id) ? id : id.name));\n        \n        this._followers.push(\n            [\n                obj,\n                key,\n                as || undefined,\n                lastRevs = reKey && reKey.reduce(( revs, id ) => (revs[id] = 0, revs), {})\n            ]);\n        \n        this.mount(key);\n        \n        if ( setInitial && this._stable ) {\n            data = this.getUpdates(lastRevs);\n            if ( !data ) return;\n            if ( typeof obj != \"function\" ) {\n                if ( as ) obj.setState({ [as]: data });\n                else obj.setState(data);\n            }\n            else {\n                obj(data);\n            }\n        }\n        return this;\n    }\n    \n    /**\n     * Un bind this scope off the given component-keys\n     * @param obj\n     * @param key\n     * @returns {Array.<*>}\n     */\n    unBind( obj, key, as ) {\n        var followers = this._followers,\n            i         = followers && followers.length;\n        while ( followers && i-- )\n            if ( followers[i][0] === obj && ('' + followers[i][1]) == ('' + key) &&\n                followers[i][2] == as )\n                return followers.splice(i, 1);\n    }\n    \n    /**\n     * Mount the stores in storesList from this scope, its parents and mixed scope\n     * Bind them to 'to'\n     * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n     * @param to\n     * @param storesList\n     * @param bind\n     * @returns {Object} Initial outputs of the stores in 'storesList'\n     */\n    map( to, storesList, bind = true ) {\n        let Store  = this.constructor.Store;\n        storesList = is.array(storesList) ? storesList : [storesList];\n        this.mount(storesList);\n        if ( bind && to instanceof Store ) {\n            Store.map(to, storesList, this, this, false)\n        }\n        else if ( bind ) {\n            this.bind(to, storesList, undefined, false);\n            \n            let mixedCWUnmount,\n                unMountKey = to.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n            \n            if ( to.hasOwnProperty(unMountKey) ) {\n                mixedCWUnmount = to[unMountKey];\n            }\n            \n            to[unMountKey] = ( ...argz ) => {\n                delete to[unMountKey];\n                if ( mixedCWUnmount )\n                    to[unMountKey] = mixedCWUnmount;\n                \n                this.unBind(to, storesList);\n                return to[unMountKey] && to[unMountKey](...argz);\n            }\n            \n        }\n        return storesList.reduce(( data, id ) => {\n            if ( !is.string(id) )\n                id = id.name;\n            id                                     = id.split(':');//@todo\n            id[0]                                  = id[0].split('.');\n            data[id[1] || id[0][id[0].length - 1]] = this.stores[id[0][0]] && this.stores[id[0][0]].retrieve && this.stores[id[0][0]].retrieve(id[0].splice(1));\n            return data;\n        }, {});\n    }\n    \n    retrieve( path = \"\" ) {\n        path = is.string(path) ? path.split('.') : path;\n        return path && this.stores[path[0]] &&\n            this.stores[path[0]].retrieve(path.splice(1));\n    }\n    \n    /**\n     * Get or update storesRevMap's revisions\n     * @param storesRevMap\n     * @param local\n     * @returns {{}}\n     */\n    getStoresRevs( storesRevMap = {}, local ) {\n        let ctx = this.__scope;\n        if ( !storesRevMap ) {\n            storesRevMap = {};\n        }\n        Object.keys(ctx).forEach(\n            id => {\n                if ( !is.fn(ctx[id])\n                ) {\n                    storesRevMap[id] = ctx[id]._rev;\n                }\n                else if ( !storesRevMap.hasOwnProperty(id) )\n                    storesRevMap[id] = false\n            }\n        );\n        if ( !local ) {\n            this.__mixed.reduce(( updated, ctx ) => (ctx.getStoresRevs(storesRevMap), storesRevMap), storesRevMap);\n            this.parent && this.parent.getStoresRevs(storesRevMap);\n        }\n        return storesRevMap;\n    }\n    \n    /**\n     * Get or update output basing storesRevMap's revisions.\n     * If a store in 'storesRevMap' is updated; add it to 'output'\n     * @param storesRevMap\n     * @param output\n     * @param updated\n     * @returns {*|{}}\n     */\n    getUpdates( storesRevMap, output, updated ) {\n        let ctx = this.__scope;\n        \n        output = output || {};\n        Object.keys(ctx).forEach(\n            id => {\n                if ( !output[id]\n                    && ( !storesRevMap\n                        || (storesRevMap.hasOwnProperty(id) && storesRevMap[id] === undefined)\n                        || !( !storesRevMap.hasOwnProperty(id) || ctx[id]._rev <= storesRevMap[id] ))\n                ) {\n                    \n                    updated    = true;\n                    output[id] = this.data[id];\n                    if ( storesRevMap && storesRevMap[id] !== undefined )\n                        storesRevMap[id] = ctx[id]._rev;\n                    \n                }\n            }\n        );\n        updated = this.__mixed.reduce(( updated, ctx ) => (ctx.getUpdates(storesRevMap, output, updated) || updated), updated);\n        updated = this.parent && this.parent.getUpdates(storesRevMap, output, updated) || updated;\n        return updated && output;\n    }\n    \n    /**\n     *\n     * @param flags_states\n     * @param flags_data\n     * @returns {{state: {}, data: {}}}\n     */\n    serialize( flags_states = /.*/, flags_data = /.*/ ) {\n        let ctx = this.__scope, output = { state: {}, data: {} },\n            _flags_states,\n            _flags_data;\n        if ( is.array(flags_states) )\n            flags_states.forEach(id => (output.state[id] = this.state[id]));\n        \n        if ( is.array(flags_data) )\n            flags_data.forEach(id => (output.data[id] = this.data[id]));\n        \n        if ( !is.array(flags_data) && !is.array(flags_states) )\n            Object.keys(ctx).forEach(\n                id => {\n                    if ( is.fn(ctx[id]) )\n                        return;\n                    \n                    let flags = ctx[id].constructor.flags;\n                    \n                    flags = is.array(flags) ? flags : [flags || \"\"];\n                    \n                    if ( flags.reduce(( r, flag ) => (r || flags_states.test(flag)), false) )\n                        output.state[id] = this.state[id];\n                    \n                    if ( flags.reduce(( r, flag ) => (r || flags_data.test(flag)), false) )\n                        output.data[id] = this.data[id];\n                }\n            )\n        return output;\n    }\n    \n    dispatch( action, data ) {\n        Object.keys(this.__scope)\n              .forEach(\n                  id => {\n                      if ( !is.fn(this.__scope[id]) )\n                          this.__scope[id].trigger(action, data)\n                  }\n              );\n        \n        this.__mixed.forEach(( ctx ) => (ctx.dispatch(action, data)));\n        this.parent && this.parent.dispatch(action, data);\n        return this;\n    }\n    \n    /**\n     * once('stable', cb)\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    then( cb ) {\n        if ( this._stable )\n            return cb(null, this.data);\n        this.once('stable', e => cb(null, this.data));\n    }\n    \n    restore( { state, data }, quiet ) {\n        let ctx = this.__scope;\n        Object.keys(data).forEach(\n            id => {\n                quiet ? ctx.data = data[id]\n                    : ctx.push(data[id]);\n            }\n        );\n        Object.keys(state).forEach(\n            id => {\n                quiet ? ctx.state = state[id]\n                    : ctx.setState(state[id]);\n            }\n        );\n    }\n    \n    retainStores( stores = [], reason ) {\n        stores.forEach(\n            id => (this.stores[id] && this.stores[id].retain && this.stores[id].retain(reason))\n        )\n    }\n    \n    disposeStores( stores = [], reason ) {\n        stores.forEach(\n            id => (this.stores[id] && this.stores[id].dispose && this.stores[id].dispose(reason))\n        )\n    }\n    \n    wait( reason ) {\n        //console.log(\"wait\", reason);\n        this._stable && !this.__locks.all && this.emit(\"unstable\", this);\n        this._stable = false;\n        this.__locks.all++;\n        if ( reason ) {\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]++;\n        }\n    }\n    \n    release( reason ) {\n        \n        if ( reason ) {\n            if ( this.__locks[reason] == 0 )\n                console.error(\"Release more than locking !\", reason);\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]--;\n        }\n        if ( !reason && this.__locks.all == 0 )\n            console.error(\"Release more than locking !\");\n        \n        this.__locks.all--;\n        if ( !this.__locks.all ) {\n            this._stabilizerTM && clearTimeout(this._stabilizerTM);\n            \n            this._stabilizerTM = setTimeout(\n                e => {\n                    this._stabilizerTM = null;\n                    if ( this.__locks.all )\n                        return;\n                    \n                    this._propagTM && clearTimeout(this._propagTM);\n                    \n                    this._stable = true;\n                    this.emit(\"stable\", this);\n                    \n                    !this.dead && this._propag();// stability can induce destroy\n                }\n            );\n        }\n        \n    }\n    \n    propag() {\n        this._propagTM && clearTimeout(this._propagTM);\n        this._propagTM = setTimeout(\n            e => {\n                this._propagTM = null;\n                this._propag()\n            }, 2\n        );\n    }\n    \n    _propag() {\n        if ( this._followers.length )\n            this._followers.forEach(( { 0: obj, 1: key, 2: as, 3: lastRevs } ) => {\n                let data = this.getUpdates(lastRevs);\n                if ( !data ) return;\n                if ( typeof obj != \"function\" ) {\n                    if ( as ) obj.setState({ [as]: data });\n                    else obj.setState(data);\n                }\n                else {\n                    obj(data, lastRevs && [...lastRevs] || \"no revs\");\n                }\n                // lastRevs &&\n                // key.forEach(id => (lastRevs[id] = this.stores[id] && this.stores[id]._rev || 0));\n            });\n        this.emit(\"update\", this.getUpdates());\n    }\n    \n    /**\n     * is stable\n     * @returns bool\n     */\n    isStable() {\n        return this._stable;\n    }\n    \n    //serializeChilds( childs = [] ) {\n    //\n    //}\n    \n    _addChild( ctx ) {\n        this._childScopes.push(ctx);\n        let lists     = {\n                'stable'      : s => {\n                    this._unStableChilds--;\n                    if ( !this._unStableChilds )\n                        this.emit(\"stableTree\", this)\n                },\n                'unstable'    : s => {\n                    this._unStableChilds++;\n                    if ( 1 == this._unStableChilds )\n                        this.emit(\"unstableTree\", this)\n                },\n                'stableTree'  : s => {\n                    this._unStableChilds--;\n                    if ( !this._unStableChilds )\n                        this.emit(\"stableTree\", this)\n                },\n                'unstableTree': s => {\n                    this._unStableChilds++;\n                    if ( 1 == this._unStableChilds )\n                        this.emit(\"unstableTree\", this)\n                },\n                'destroy'     : ctx => {\n                    if ( ctx._unStableChilds )\n                        this._unStableChilds--;\n                    if ( !ctx.isStable() )\n                        this._unStableChilds--;\n                \n                    if ( !this._unStableChilds )\n                        this.emit(\"stableTree\", this)\n                }\n            },\n            wasStable = this._unStableChilds;\n        //!ctx.isStable() && console.warn('add unstable child');\n        !ctx.isStable() && this._unStableChilds++;\n        ctx._unStableChilds && this._unStableChilds++;\n        this._childScopesList.push(lists);\n        if ( !wasStable && this._unStableChilds )\n            this.emit(\"unstableTree\", this)\n        ctx.on(lists);\n    }\n    \n    _rmChild( ctx ) {\n        let i         = this._childScopes.indexOf(ctx),\n            wasStable = this._unStableChilds;\n        if ( i != -1 ) {\n            this._childScopes.splice(i, 1);\n            !ctx.isStable() && this._unStableChilds--;\n            ctx._unStableChilds && this._unStableChilds--;\n            ctx.un(this._childScopesList.splice(i, 1)[0]);\n            if ( wasStable && !this._unStableChilds )\n                this.emit(\"stableTree\")\n        }\n    }\n    \n    retain( reason ) {\n        this.__retains.all++;\n        //console.log(\"retain\", this._id, reason);\n        if ( reason ) {\n            this.__retains[reason] = this.__retains[reason] || 0;\n            this.__retains[reason]++;\n        }\n    }\n    \n    dispose( reason ) {\n        //console.log(\"dispose\", this._id, reason);\n        if ( reason ) {\n            if ( !this.__retains[reason] )\n                throw new Error(\"Dispose more than retaining : \" + reason);\n            this.__retains[reason]--;\n        }\n        \n        if ( !this.__retains.all )\n            throw new Error(\"Dispose more than retaining !\");\n        \n        this.__retains.all--;\n        \n        if ( !this.__retains.all ) {\n            //console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n            if ( this._persistenceTm ) {\n                this._destroyTM && clearTimeout(this._destroyTM);\n                this._destroyTM = setTimeout(\n                    e => {\n                        this.then(s => {\n                            !this.__retains.all && this.destroy()\n                        });\n                    },\n                    this._persistenceTm\n                );\n            }\n            else {\n                this.then(s => (!this.__retains.all && this.destroy()));\n            }\n        }\n    }\n    \n    /**\n     * order destroy of local stores\n     */\n    destroy() {\n        let ctx   = this.__scope;\n        //console.warn(\"destroy\", this._id);\n        this.dead = true;\n        this.emit(\"destroy\", this);\n        Object.keys(\n            this.__listening\n        ).forEach(\n            id => this.__scope[id].removeListener(this.__listening[id])\n        );\n        \n        this._stabilizerTM && clearTimeout(this._stabilizerTM);\n        this._propagTM && clearTimeout(this._propagTM);\n        this.__listening = {};\n        \n        if ( this._isLocalId )\n            delete openScopes[this._id];\n        this._followers.length = 0;\n        \n        while ( this.__mixedList.length ) {\n            this.__mixed[0].removeListener(this.__mixedList.shift());\n            this.__mixed.shift().dispose(\"mixedTo\");\n        }\n        if ( this.__parentList ) {\n            this.parent._rmChild(this);\n            this.parent.removeListener(this.__parentList);\n            this.parent.dispose(\"isMyParent\");\n            this.__parentList = null;\n        }\n        //for ( let key in ctx )\n        //    if ( !is.fn(ctx[key]) ) {\n        //        if ( ctx[key].scopeObj === this )\n        //            ctx[key].dispose();\n        //\n        //        ctx[key] = ctx[key].constructor;\n        //    }\n        this.__mixed = this.data = this.state = this.scope = this.stores = null;\n        this._data = this._state = this._stores = null;\n        \n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Scope.js","module.exports = require(\"shortid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 4\n// module chunks = 0","/*\n * Copyright (c)  2018 Wise Wild Web .\n *\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\n/**\n * Ultra scalable state-aware store\n *\n * @todo : lot of optims...\n */\n\nvar is           = require('is'),\n    Scope        = require('./Scope'),\n    EventEmitter = require('./Emitter'),\n    shortid      = require('shortid'),\n    objProto     = Object.getPrototypeOf({});\n/**\n * @class Store\n */\nexport default class Store extends EventEmitter {\n    \n    static use                  = [];// overridable list of source stores\n    static follow;// overridable list of store that will allow push if updated\n    static require;\n    static staticScope          = new Scope({}, { id: \"static\" });\n    static state                = undefined;// default state\n    /**\n     * if retain goes to 0 :\n     * false to not destroy,\n     * 0 to sync auto destroy\n     * Ms to autodestroy after tm ms if no retain has been called\n     * @type {boolean|Int}\n     */\n           static persistenceTm = false;\n    \n    /**\n     * Constructor, will build a rescope store\n     *\n     * (scope, {require,use,apply,state, data})\n     * (scope)\n     *\n     * @param scope {object} scope where to find the other stores (default : static staticScope )\n     * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n     */\n    constructor() {\n        super();\n        var argz         = [...arguments],\n            _static      = this.constructor,\n            scope        = argz[0] instanceof Scope\n                ? argz.shift()\n                : _static.scope ? Scope.getScope(_static.scope)\n                               : is.string(argz[0])\n                      ? Scope.getScope(argz.shift())\n                      : _static.staticScope,\n            cfg          = argz[0] && !is.array(argz[0]) && !is.string(argz[0]) ? argz.shift() : {},\n            name         = is.string(argz[0]) ? argz[0] : cfg.name || _static.name,\n            watchs       = is.array(argz[0]) ? argz.shift() : cfg.use || [],// watchs need to be defined after all the\n                                                                            // store are registered : so we can't deal\n                                                                            // with any \"static use\" automaticly\n            apply        = is.fn(argz[0]) ? argz.shift() : cfg.apply || null,\n            initialState = _static.state || _static.initialState,\n            applied;\n        \n        this._uid = cfg._uid || shortid.generate();\n        \n        this.__retains    = { all: 0 };\n        this.__locks      = { all: 0 };\n        this._onStabilize = [];\n        \n        this._persistenceTm = cfg.persistenceTm || this.constructor.persistenceTm;\n        if ( is.string(argz[0]) ) {\n            if ( scope.__scope[name] )\n                console.warn(\"ReScope: Overwriting an existing static named store ( %s ) !!\", name);\n            scope.__scope[name] = this;\n        }\n        \n        if ( cfg && cfg.on ) {\n            this.on(cfg.on);\n        }\n        // this.state      = this.state || {};\n        \n        \n        this.name = name;\n        \n        if ( scope.stores ) {\n                this.scopeObj = scope;\n            this.scope = scope.stores;\n        }\n        else {\n                this.scopeObj = new Scope(scope);\n            this.scope = scope.stores;\n        }\n        \n        \n        this._rev     = this.constructor._rev || 0;\n        this._revs    = {};\n        this.stores   = {};\n        this._require = [];\n        \n        if ( is.array(_static.use) ) {\n            this._use = [...watchs, ...(_static.use || []).map(\n                key => {\n                    let ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n                    if ( ref[1] ) {\n                        let ref2 = ref[2].split('.');\n                        this._require.push(ref[3] || ref2[ref2.length - 1]);\n                    }\n                    return ref[2];\n                }\n            )];\n        }\n        else {\n            this._use = [...watchs, ...(\n                _static.use ? Object.keys(_static.use)\n                                    .map(\n                                        key => {\n                                            let ref = key.match(/^(\\!?)(.*)$/);\n                                            ref[1] && this._require.push(_static.use[key]);\n                                            return ref[2] + ((_static.use[key] === true)\n                                                ? ''\n                                                : ':' + _static.use[key]);\n                                        }\n                                    ) : []\n            )];\n        }\n        \n        if ( _static.require )\n            this._require.push(..._static.require);\n        if ( cfg.require )\n            this._require.push(...cfg.require);\n        \n        this._followers = [];\n        \n        if ( _static.data !== undefined )\n            this.data = { ..._static.data };\n        if ( cfg.hasOwnProperty(\"data\") && cfg.data !== undefined )\n            this.data = cfg.data;\n        if ( cfg.hasOwnProperty(\"state\") && cfg.state !== undefined )\n            initialState = { ...initialState, ...cfg.state };\n        \n        if ( apply )\n            this.apply = apply;\n        \n        \n        if ( initialState || this._use.length ) {// sync apply\n            this.state = {\n                ...(initialState || {}),\n                ...scope.map(this, this._use)\n            };\n            if ( this.shouldApply(this.state) && this.data === undefined ) {\n                this.data = this.apply(this.data, this.state, this.state);\n                applied   = true;\n            }\n        }\n        \n        if ( (this.data !== undefined || applied) && !this.__locks.all ) {\n            this._stable = true;\n            this._rev++;\n        }\n        else {\n            this._stable = false;\n            if ( !_static.managed && !this.state && (!this._use || !this._use.length) ) {\n                console.warn(\"Rescope store '\", this.name, \"' have no initial data, state or use. It can't stabilize...\");\n            }\n        }\n        !this._stable && this.emit('unstable', this.state);\n    }\n    \n    /**\n     * get a Builder-key pair for Store::map\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    static as( name ) {\n        return { store: this, name };\n    }\n    \n    /**\n     * Map all named stores in {keys} to the {object}'s state\n     * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n     * @static\n     * @param object {Object} target state aware object (React.Component|Store|...)\n     * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\", store.as('anotherKey')]\n     */\n    static map( component, keys, scope, origin, setInitial = false ) {\n        var targetRevs     = component._revs || {};\n        var targetScope    = component.stores || (component.stores = {});\n        var initialOutputs = {};\n        keys               = is.array(keys) ? [...keys] : [keys];\n        \n        \n        scope = scope || Store.staticScope;\n        \n        keys           = keys.filter(\n            // @todo : use query refs\n            // (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n            ( key ) => {\n                if ( !key ) {\n                    console.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n                    return false;\n                }\n                let name,\n                    alias,\n                    path,\n                    store;\n                if ( key.store && key.name ) {\n                    alias = name = key.name;\n                    store = key.store;\n                }\n                else if ( is.fn(key) ) {\n                    name = alias = key.name || key.defaultName;\n                    store = key;\n                }\n                else {\n                    key   = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                    name  = key[1];\n                    path  = key[2] && key[2].split('.').slice(1);\n                    store = scope.stores[key[1]];\n                    alias = key[3] || path && path[path.length - 1] || key[1];\n                }\n                \n                if ( targetRevs[name] ) return false;// ignore dbl uses for now\n                \n                if ( !store ) {\n                    console.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + origin + ' !!', store);\n                    return false;\n                }\n                else if ( is.fn(store) ) {\n                    scope._mount(name)\n                    \n                    scope.stores[name].bind(component, alias, setInitial, path);\n                }\n                else {\n                    store.bind(component, alias, setInitial, path);\n                }\n                targetRevs[alias] = targetRevs[alias] || true;\n                !targetScope[name] && (targetScope[name] = scope.stores[name]);\n                if ( scope.stores[name].hasOwnProperty('data') )\n                    initialOutputs[name] = scope.data[name];\n                return true;\n            }\n        );\n        var mixedCWUnmount,\n            unMountKey = component.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n        \n        if ( component.hasOwnProperty(unMountKey) ) {\n            mixedCWUnmount = component[unMountKey];\n        }\n        \n        component[unMountKey] = ( ...argz ) => {\n            delete component[unMountKey];\n            if ( mixedCWUnmount )\n                component[unMountKey] = mixedCWUnmount;\n            \n            keys.map(\n                ( key ) => {\n                    let name,\n                        alias, path,\n                        store;\n                    if ( key.store && key.name ) {\n                        alias = name = key.name;\n                        store = key.store;\n                    }\n                    else if ( is.fn(key) ) {\n                        name = alias = key.name || key.defaultName;\n                        store = scope.stores[name];\n                    }\n                    else {\n                        key   = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                        name  = key[1];\n                        path  = key[2] && key[2].split('.');\n                        store = scope.stores[key[1]];\n                        alias = key[3] || path && path[path.length - 1] || key[1];\n                    }\n                    \n                    store && !is.fn(store) && store.unBind(component, alias, path)\n                }\n            );\n            return component[unMountKey] && component[unMountKey](...argz);\n        }\n        \n        return initialOutputs;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get contextObj() {\n        return this.scopeObj;\n    }\n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get datas() {\n        return this.data;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    set datas( v ) {\n        //console.groupCollapsed(\"Rescope store : Setting datas is depreciated, use data\");\n        //console.log(\"Rescope store : Setting datas is depreciated, use data\", (new Error()).stack);\n        //console.groupEnd();\n        \n        this.data = v;\n    }\n    \n    /**\n     * Overridable method to know if a data change should be propag to the listening stores & components\n     */\n    shouldPropag( nDatas ) {\n        var _static = this.constructor, r,\n            cDatas  = this.data;\n        r           = !cDatas && nDatas;\n        cDatas && Object.keys(cDatas).forEach(\n            ( key ) => {\n                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key])\n            }\n        );\n        nDatas && Object.keys(nDatas).forEach(\n            ( key ) => {\n                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key])\n            }\n        );\n        return !!r;\n    }\n    \n    /**\n     * Overridable method to know if a state change should be applied\n     */\n    shouldApply( state = this.state ) {\n        var _static = this.constructor;\n        \n        return (\n            !!this.isComplete(state)\n        ) && (is.array(_static.follow)\n                ? _static.follow\n                         .reduce(( r, i ) => (r || state && state[i]), false)\n                : _static.follow\n                  ? Object.keys(_static.follow)\n                          .reduce(( r, i ) => (\n                              r\n                              || state && is.fn(_static.follow[i]) && _static.follow[i].call(this, state[i])\n                              || _static.follow[i] && state[i] !== this.state[i]\n                          ), false) : true\n        );\n    }\n    \n    /**\n     * Overridable applier / remapper\n     * If state or lastPublicState are simple hash maps apply will return {...data, ...state}\n     * if not it will return the last private state\n     * @param data\n     * @param state\n     * @returns {*}\n     */\n    apply( data, state, changes ) {\n        state = state || this.state;\n        \n        if ( this.refine )\n            return this.refine(...arguments);\n        \n        if ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n            return state;\n        else\n            return { ...data, ...state }\n    }\n    \n    /**\n     * @depreciated\n     * @param data\n     * @param state\n     * @param changes\n     * @returns {*}\n     */\n    refine( data, state, changes ) {\n        state = state || this.state;\n        \n        if ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n            return state;\n        else\n            return { ...data, ...state }\n    }\n    \n    /**\n     * Debounce this store propagation ( & reducing )\n     * @param cb\n     */\n    stabilize( cb ) {\n        cb && this.once('stable', cb);\n        this._stable && this.emit('unstable', this.state, this.data);\n        \n        this._stable = false;\n        \n        if ( this._stabilizer )\n            clearTimeout(this._stabilizer);\n        \n        this._stabilizer = setTimeout(\n            this.push.bind(\n                this,\n                null,\n                () => {//@todo\n                    \n                    let stable   = this._stable;\n                    this._stable = true;\n                    !stable && this.emit('stable', this.state, this.data);\n                    this._stabilizer = null;\n                    // this.release();\n                }\n            ));\n    }\n    \n    retrieve( path, i = 0, obj = this.data ) {\n        path = is.string(path) ? path.split('.') : path;\n        return !obj || !path || !path.length\n            ? obj\n            : path.length == i + 1\n                   ? obj[path[i]]\n                   : this.retrieve(path, i + 1, obj[path[i]]);\n    }\n    \n    dispatch( action, ...argz ) {\n        this.scopeObj.dispatch(action, ...argz);\n    }\n    \n    trigger( action, ...argz ) {\n        let { actions } = this.constructor,\n            ns;\n        if ( actions && actions[action] ) {\n            ns = actions[action].call(this, ...argz);\n            ns && this.setState(ns);\n        }\n    }\n    \n    /**\n     * Pull stores in the private state\n     * @param stores  {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n     */\n    pull( stores, doWait, origin ) {\n        let initialOutputs = this.scopeObj.map(this, stores);\n        if ( doWait ) {\n            this.wait();\n            stores.forEach(( s ) => this.scope[s] && this.wait(this.scope[s]));\n            this.release();\n        }\n        return initialOutputs;\n    }\n    \n    /**\n     * Apply apply/remap on the private state & push the resulting \"public\" state to followers\n     * @param cb\n     */\n    push( data, force, cb ) {\n        cb            = force === true ? cb : force;\n        force         = force === true;\n        var i         = 0,\n            nextState = !data && { ...this.state, ...this._changesSW } || this.state,\n            nextDatas = data || this.apply(this.data, nextState, this._changesSW);\n        \n        this.state = nextState;\n        if ( !force &&\n            (\n                (!this.data && this.data === nextDatas) || !this.shouldPropag(nextDatas)\n            )\n        ) {\n            cb && cb();\n            return false;\n        }\n        \n        this.data       = nextDatas;\n        this._changesSW = {};\n        //this.__locks.all++;\n        this.wait();\n        this.release(cb);\n        \n    }\n    \n    /**\n     * Update the current private state & push it once the store is stable\n     * @param pState\n     * @param cb\n     */\n    setState( pState, cb, sync ) {\n        var i       = 0, change,\n            changes = this._changesSW = this._changesSW || {};\n        for ( var k in pState )\n            if ( !this.state || pState.hasOwnProperty(k)\n                && (\n                    pState[k] != this.state[k]\n                    ||\n                    (this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n                ) ) {\n                change        = true;\n                this._revs[k] = pState[k] && pState[k]._rev || true;\n                changes[k]    = pState[k];\n            }\n        \n        if ( !this.shouldApply({ ...this.state, ...changes }) ) {\n            return;\n        }\n        \n        if ( sync ) {\n            this.push();\n            cb && cb();\n            \n        }\n        else {\n            if ( change ) {\n                this.stabilize(cb);\n            }\n            else cb && cb();\n        }\n        return this;\n    }\n    \n    /**\n     * Update the current private state & push it once the store is stable\n     * @param pState\n     * @param cb\n     */\n    setStateSync( pState ) {\n        var i       = 0, change,\n            changes = this._changesSW = this._changesSW || {};\n        for ( var k in pState )\n            if ( !this.state || pState.hasOwnProperty(k)\n                && (\n                    pState[k] != this.state[k]\n                    ||\n                    (this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n                ) ) {\n                change        = true;\n                this._revs[k] = pState[k] && pState[k]._rev || true;\n                changes[k]    = pState[k];\n            }\n        this.shouldApply({ ...(this.state || {}), ...changes }) && this.push();\n        return this.data;\n    }\n    \n    /**\n     * Replace the current private state & push it once the store is stable\n     * @param pState\n     * @param cb\n     */\n    replaceState( pState, cb ) {\n        var i      = 0, me = this;\n        this.state = pState;\n        \n        this.stabilize(cb);\n    }\n    \n    /**\n     * get a store-key pair for Store::map\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    as( name ) {\n        return { store: this, name };\n    }\n    \n    on( lists ) {\n        if ( !is.string(lists) && lists )\n            Object.keys(lists).forEach(k => super.on(k, lists[k]));\n        else super.on(...arguments);\n    }\n    \n    removeListener( lists ) {\n        if ( !is.string(lists) && lists )\n            Object.keys(lists).forEach(k => super.removeListener(k, lists[k]));\n        else super.removeListener(...arguments);\n    }\n    \n    /**\n     * relink bindings & requires\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    relink( from ) {\n        let scope   = this.scopeObj,\n            _static = this.constructor;\n        if ( _static.use ) {\n            //todo unlink\n            this.pull(_static.use, false, from);\n        }\n        \n        if ( this._require ) {\n            this._require.forEach(\n                store => (\n                    this.wait(scope.__scope[store])\n                )\n            );\n        }\n    }\n    \n    /**\n     * is complete (all requiered keys are here)\n     * @returns bool\n     */\n    isComplete( state = this.state ) {\n        var _static = this.constructor;\n        return (\n            !this._require\n            || !this._require.length\n            || state && this._require.reduce(\n                ( r, key ) => (r && state[key]),\n                true\n            )\n        );\n    }\n    \n    /**\n     * is stable\n     * @returns bool\n     */\n    isStable() {\n        return this._stable;\n    }\n    \n    /**\n     * Un bind this store off the given component-key\n     * @param obj\n     * @param key\n     * @returns {Array.<*>}\n     */\n    unBind( obj, key, path ) {\n        var followers = this._followers,\n            i         = followers && followers.length;\n        while ( followers && i-- )\n            if ( followers[i][0] === obj && followers[i][1] === key && followers[i][2] === path )\n                return followers.splice(i, 1);\n    }\n    \n    /**\n     * Bind this store changes to the given component-key\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    bind( obj, key, setInitial = true, path ) {\n        this._followers.push([obj, key, path]);\n        if ( setInitial && this.data && this._stable ) {\n            let data = path ? this.retrieve(path) : this.data;\n            if ( typeof obj != \"function\" ) {\n                if ( key ) obj.setState({ [key]: data });\n                else obj.setState(data);\n            }\n            else {\n                obj(data);\n            }\n        }\n    }\n    \n    /**\n     * once('stable', cb)\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    then( cb ) {\n        if ( this._stable )\n            return cb(null, this.data);\n        this.once('stable', e => cb(null, this.data));\n    }\n    \n    /**\n     * Add a lock so the store will not propag it state untill release() is call\n     * @param previous {Store|number|Array} @optional wf to wait, releases to wait or array of stuff to wait\n     * @returns {TaskFlow}\n     */\n    wait( previous ) {\n        if ( typeof previous == \"number\" )\n            return this.__locks.all += previous;\n        if ( is.array(previous) )\n            return previous.map(this.wait.bind(this));\n        \n        this._stable && this.emit('unstable', this.state, this.data);\n        this._stable = false;\n        this.__locks.all++;\n        \n        let reason = is.string(previous) ? previous : null;\n        if ( reason ) {\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]++;\n        }\n        if ( previous && is.fn(previous.then) ) {\n            previous.then(this.release.bind(this, null));\n        }\n        return this;\n    }\n    \n    /**\n     * Decrease locks for this store, if it reach 0 & it have a public state,\n     * it will be propagated to the followers,\n     * then, all stuff passed to \"then\" call back will be exec / released\n     * @param desync\n     * @returns {*}\n     */\n    release( reason, cb ) {\n        var _static = this.constructor;\n        let i       = 0, wasStable = this._stable;\n        \n        if ( is.fn(reason) ) {\n            cb     = reason;\n            reason = null;\n        }\n        \n        if ( reason ) {\n            if ( this.__locks[reason] == 0 )\n                console.error(\"Release more than locking !\", reason);\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]--;\n        }\n        \n        if ( !reason && this.__locks.all == 0 )\n            console.error(\"Release more than locking !\");\n        \n        if ( !--this.__locks.all && this.data && this.isComplete() ) {\n            this._stable = true;\n            this._rev++;//\n            if ( this._followers.length )\n                this._followers.forEach(( follower ) => {\n                    let data = follower[2] ? this.retrieve(follower[2]) : this.data;\n                    if ( !data ) return;\n                    if ( typeof follower[0] == \"function\" ) {\n                        follower[0](data);\n                    }\n                    else {\n                        //cb && i++;\n                        follower[0].setState(\n                            (follower[1]) ? { [follower[1]]: data }\n                                : data\n                            //,\n                            //cb && (\n                            //    () => (!(--i) && cb())\n                            //)\n                        );\n                    }\n                });\n            //else\n            !wasStable && this.emit('stable', this.data);\n            this.emit('update', this.data);\n            cb && cb()\n        }\n        else cb && this.then(cb);\n        return this;\n    }\n    \n    retain( reason ) {\n        this.__retains.all++;\n        if ( reason ) {\n            this.__retains[reason] = this.__retains[reason] || 0;\n            this.__retains[reason]++;\n        }\n    }\n    \n    dispose( reason ) {\n        //console.warn(\"dispose\", reason, this.__retains);\n        if ( reason ) {\n            if ( !this.__retains[reason] )\n                throw new Error(\"Dispose more than retaining : \" + reason);\n            \n            this.__retains[reason]--;\n        }\n        if ( this.__retains.all == 0 )\n            throw new Error(\"Dispose more than retaining !\");\n        \n        this.__retains.all--;\n        \n        if ( !this.__retains.all ) {\n            if ( this._persistenceTm ) {\n                this._destroyTM && clearTimeout(this._destroyTM);\n                this._destroyTM = setTimeout(\n                    e => {\n                        this._destroyTM = null;\n                        this.then(s => {\n                            !this.__retains.all && this.destroy()\n                        });\n                    },\n                    this._persistenceTm\n                );\n            }\n            else {\n                this.then(s => (!this.__retains.all && this.destroy()));\n            }\n        }\n    }\n    \n    destroy() {\n        //  console.log(\"destroy\", this._uid);\n        \n        this.emit('destroy', this);\n        if ( this._stabilizer )\n            clearTimeout(this._stabilizer);\n        \n        if ( this._followers.length )\n            this._followers.forEach(\n                ( follower ) => {\n                    if ( typeof follower[0] !== \"function\" ) {\n                        if ( follower[0].stores )\n                            delete follower[0].stores[follower[1]];\n                    }\n                }\n            );\n        this._followers.length = 0;\n        this.constructor._rev  = this.rev;\n        this.dead              = true;\n        this._revs             = this.data = this.state = this.scope = null;\n        this.removeAllListeners();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Store.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///dist/Rescope.nodeps.min.js","webpack:///webpack/bootstrap db002899de191ce2d3e5","webpack:///./src/Rescope.js","webpack:///external \"is\"","webpack:///./src/Context.js","webpack:///./src/Emitter.js","webpack:///external \"shortid\"","webpack:///./src/Store.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Context","_Context2","_Store","_Store2","Store","Context","require","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_defineProperty","key","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","is","EventEmitter","shortid","__proto__push","parent","fn","openContexts","_EventEmitter","storesMap","_ref","arguments","undefined","state","data","incrementId","name","defaultMaxListeners","persistenceTm","autoDestroy","rootEmitter","this","_this","getPrototypeOf","_maxListeners","generate","_ret","_id","register","_isLocalId","_persistenceTm","stores","dead","Error","sources","_childContexts","_childContextsList","_unStableChilds","__retains","all","__locks","__listening","__context","__mixed","__mixedList","_followers","retain","on","__parentList","update","s","_propag","_stable","wait","stable","release","unstable","_addChild","setTimeout","tm","dispose","contexts","skey","array","sort","a","b","firstname","join","storesList","_this2","forEach","k","_mount","apply","store","_parent","reduce","mounted","ctx","setState","push","_watchStore","_this3","_parent2","isStable","destroy","propag","targetCtx","_this4","lists","relink","_this5","keys","singleton","srcCtx","_this6","external","force","lctx","_stores","get","_state","set","v","_data","as","setInitial","lastRevs","reKey","map","string","revs","mount","getUpdates","followers","splice","to","_this7","bind","mixedCWUnmount","unMountKey","isReactComponent","hasOwnProperty","unBind","split","retrieve","path","storesRevMap","local","_rev","updated","getStoresRevs","output","_this8","_this9","flags_states","flags_data","flags","r","flag","test","action","_this10","trigger","dispatch","cb","_this11","once","e","_ref2","quiet","_this12","reason","_this13","emit","_this14","_stabilizerTM","clearTimeout","_propagTM","_this15","_this16","_ref3","_this17","stableTree","unstableTree","wasStable","indexOf","un","_this18","_destroyTM","then","_this19","removeListener","shift","_rmChild","context","Emitter","_events","evt","_len","argz","_key","_extends","assign","source","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","objProto","_this$_require","_this$_require2","applied","_static","getContext","staticContext","cfg","watchs","use","initialState","_uid","_onStabilize","contextObj","_revs","_require","_use","concat","ref","match","ref2","shouldApply","managed","nDatas","cDatas","isComplete","follow","changes","refine","_stabilizer","_contextObj","actions","ns","_actions$action","_len2","_key2","doWait","origin","initialOutputs","nextState","_changesSW","nextDatas","shouldPropag","pState","sync","change","stabilize","pull","previous","follower","removeAllListeners","component","targetRevs","targetContext","filter","alias","defaultName","slice"],"mappings":"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","file":"dist/Rescope.nodeps.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Context = __webpack_require__(2);\n\t\n\tvar _Context2 = _interopRequireDefault(_Context);\n\t\n\tvar _Store = __webpack_require__(5);\n\t\n\tvar _Store2 = _interopRequireDefault(_Store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t * Copyright (c)  2017 Caipi Labs .\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t_Context2.default.Store = _Store2.default;\n\t\n\texports.default = { Store: _Store2.default, Context: _Context2.default };\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"is\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/*\n\t * Copyright (c)  2017 Caipi Labs .\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\t\n\tvar is = __webpack_require__(1),\n\t    EventEmitter = __webpack_require__(3),\n\t    shortid = __webpack_require__(4),\n\t    __proto__push = function __proto__push(target, id, parent) {\n\t    var fn = function fn() {};\n\t    fn.prototype = parent ? new parent[\"_\" + id]() : target[id] || {};\n\t    target[id] = new fn();\n\t    target['_' + id] = fn;\n\t},\n\t    openContexts = {};\n\t\n\tvar Context = function (_EventEmitter) {\n\t    _inherits(Context, _EventEmitter);\n\t\n\t    _createClass(Context, null, [{\n\t        key: 'getContext',\n\t        // all active contexts\n\t\n\t        // if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n\t        value: function getContext(contexts) {\n\t            var skey = is.array(contexts) ? contexts.sort(function (a, b) {\n\t                if (a.firstname < b.firstname) return -1;\n\t                if (a.firstname > b.firstname) return 1;\n\t                return 0;\n\t            }).join('::') : contexts;\n\t            return openContexts[skey] = openContexts[skey] || new Context({}, { id: skey });\n\t        }\n\t    }]);\n\t\n\t    /**\n\t     * Init a Rescope context\n\t     *\n\t     * @param storesMap {Object} Object with the origin stores\n\t     * @param id {string} @optional id ( if this id exist storesMap will be merge on the 'id' context)\n\t     * @param parent\n\t     * @param state\n\t     * @param data\n\t     * @param name\n\t     * @param defaultMaxListeners\n\t     * @param persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n\t     * @param autoDestroy  {bool} will trigger retain & dispose after start\n\t     * @returns {Context}\n\t     */\n\t    function Context(storesMap) {\n\t        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            id = _ref.id,\n\t            parent = _ref.parent,\n\t            state = _ref.state,\n\t            data = _ref.data,\n\t            name = _ref.name,\n\t            incrementId = _ref.incrementId,\n\t            defaultMaxListeners = _ref.defaultMaxListeners,\n\t            persistenceTm = _ref.persistenceTm,\n\t            autoDestroy = _ref.autoDestroy,\n\t            rootEmitter = _ref.rootEmitter;\n\t\n\t        _classCallCheck(this, Context);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Context.__proto__ || Object.getPrototypeOf(Context)).call(this));\n\t\n\t        _this._maxListeners = defaultMaxListeners || _this.constructor.defaultMaxListeners;\n\t        id = id || \"_____\" + shortid.generate();\n\t        if (openContexts[id] && !incrementId) {\n\t            var _ret;\n\t\n\t            _this._id = id;\n\t            openContexts[id].register(storesMap);\n\t            return _ret = openContexts[id], _possibleConstructorReturn(_this, _ret);\n\t        } else if (openContexts[id] && incrementId) {\n\t            var i = -1;\n\t            while (openContexts[id + '/' + ++i]) {}\n\t            id = id + '/' + i;\n\t        }\n\t\n\t        _this._id = id;\n\t        openContexts[id] = _this;\n\t        _this._isLocalId = true;\n\t        _this._persistenceTm = persistenceTm || _this.constructor.persistenceTm;\n\t\n\t        _this.stores = {};\n\t        _this.state = {};\n\t        _this.data = {};\n\t\n\t        if (parent && parent.dead) throw new Error(\"Can't use a dead context as parent !\");\n\t\n\t        __proto__push(_this, 'stores', parent);\n\t        __proto__push(_this, 'state', parent);\n\t        __proto__push(_this, 'data', parent);\n\t        _this.parent = parent;\n\t\n\t        _this.sources = [];\n\t        _this._childContexts = [];\n\t        _this._childContextsList = [];\n\t        _this._unStableChilds = 0;\n\t\n\t        _this.__retains = { all: 0 };\n\t        _this.__locks = { all: 1 };\n\t        _this.__listening = {};\n\t        _this.__context = {};\n\t        _this.__mixed = [];\n\t        _this.__mixedList = [];\n\t        _this._followers = [];\n\t        if (parent) {\n\t            parent.retain(\"isMyParent\");\n\t            if (!rootEmitter) {\n\t                !parent._stable && _this.wait(\"waitingParent\");\n\t                parent.on(_this.__parentList = {\n\t                    'stable': function stable(s) {\n\t                        return _this.release(\"waitingParent\");\n\t                    },\n\t                    'unstable': function unstable(s) {\n\t                        return _this.wait(\"waitingParent\");\n\t                    },\n\t                    'update': function update(s) {\n\t                        return _this._propag();\n\t                    }\n\t                });\n\t            } else {\n\t                parent.on(_this.__parentList = {\n\t                    'update': function update(s) {\n\t                        return _this._propag();\n\t                    }\n\t                });\n\t            }\n\t            // this.register(parent.__context, state, data);\n\t        }\n\t\n\t        _this.register(storesMap, state, data);\n\t        _this.__locks.all--;\n\t        _this._stable = !_this.__locks.all;\n\t\n\t        if (parent) {\n\t            parent._addChild(_this);\n\t        }\n\t        if (autoDestroy) setTimeout(function (tm) {\n\t            _this.retain(\"autoDestroy\");\n\t            _this.dispose(\"autoDestroy\");\n\t        });\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     * @returns {*}\n\t     */\n\t\n\t\n\t    _createClass(Context, [{\n\t        key: 'mount',\n\t\n\t\n\t        /**\n\t         *\n\t         * Mount the stores in storesList, in this context or in its parents or mixed contexts\n\t         *\n\t         * @param storesList {string|storeRef} Store name, Array of Store names, or Rescope store ref from Store::as or\n\t         *     Store:as\n\t         * @param state\n\t         * @param data\n\t         * @returns {Context}\n\t         */\n\t        value: function mount(storesList, state, data) {\n\t            var _this2 = this;\n\t\n\t            if (is.array(storesList)) {\n\t                storesList.forEach(function (k) {\n\t                    return _this2._mount(k, state && state[k], data && data[k]);\n\t                });\n\t            } else {\n\t                this._mount.apply(this, arguments);\n\t            }\n\t            return this;\n\t        }\n\t    }, {\n\t        key: '_mount',\n\t        value: function _mount(id, state, data) {\n\t            if (typeof id !== 'string') {\n\t                this.register(_defineProperty({}, id.name, id.store));\n\t                id = id.name;\n\t            }\n\t\n\t            if (!this.__context[id]) {\n\t                var _parent;\n\t\n\t                //ask mixed || parent\n\t                if (this.__mixed.reduce(function (mounted, ctx) {\n\t                    return mounted || ctx._mount(id, state, data);\n\t                }, false) || !this.parent) return;\n\t                return (_parent = this.parent)._mount.apply(_parent, arguments);\n\t            }\n\t            var store = this.__context[id],\n\t                ctx = void 0;\n\t            if (is.fn(store)) {\n\t                this.__context[id] = new store(this, { state: state, data: data });\n\t            } else {\n\t                if (state !== undefined && data === undefined) store.setState(state);else if (state !== undefined) store.state = state;\n\t\n\t                if (data !== undefined) store.push(data);\n\t            }\n\t\n\t            this._watchStore(id);\n\t\n\t            return this.__context[id];\n\t        }\n\t    }, {\n\t        key: '_watchStore',\n\t        value: function _watchStore(id, state, data) {\n\t            var _this3 = this;\n\t\n\t            if (!this.__context[id]) {\n\t                var _parent2;\n\t\n\t                //ask mixed || parent\n\t                if (this.__mixed.reduce(function (mounted, ctx) {\n\t                    return mounted || ctx._watchStore(id, state, data);\n\t                }, false) || !this.parent) return;\n\t                return (_parent2 = this.parent)._watchStore.apply(_parent2, arguments);\n\t            }\n\t            if (!this.__listening[id] && !is.fn(this.__context[id])) {\n\t                !this.__context[id].isStable() && this.wait(id);\n\t                this.__context[id].on(this.__listening[id] = {\n\t                    'destroy': function destroy(s) {\n\t                        delete _this3.__listening[id];\n\t                        _this3.__context[id] = _this3.__context[id].constructor;\n\t                    },\n\t                    'update': function update(s) {\n\t                        return _this3.propag();\n\t                    },\n\t                    'stable': function stable(s) {\n\t                        return _this3.release(id);\n\t                    },\n\t                    'unstable': function unstable(s) {\n\t                        return _this3.wait(id);\n\t                    }\n\t                });\n\t            }\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Mix targetCtx on this context\n\t         * Mixed context parents are NOT mapped\n\t         * @param targetCtx\n\t         */\n\t\n\t    }, {\n\t        key: 'mixin',\n\t        value: function mixin(targetCtx) {\n\t            var _this4 = this;\n\t\n\t            var parent = this.parent,\n\t                lists = void 0;\n\t            this.__mixed.push(targetCtx);\n\t            targetCtx.retain(\"mixedTo\");\n\t            if (!targetCtx._stable) this.wait(targetCtx._id);\n\t\n\t            this.__mixedList.push(lists = {\n\t                'stable': function stable(s) {\n\t                    return _this4.release(targetCtx._id);\n\t                },\n\t                'unstable': function unstable(s) {\n\t                    return _this4.wait(targetCtx._id);\n\t                },\n\t                'update': function update(s) {\n\t                    return _this4._propag();\n\t                }\n\t            });\n\t\n\t            this.stores = {};\n\t            this.state = {};\n\t            this.data = {};\n\t            targetCtx.on(lists);\n\t            __proto__push(this, 'stores', parent);\n\t            __proto__push(this, 'state', parent);\n\t            __proto__push(this, 'data', parent);\n\t\n\t            this.relink(this.__context, this, false, true);\n\t            this.__mixed.forEach(function (ctx) {\n\t                __proto__push(_this4, 'stores');\n\t                __proto__push(_this4, 'state');\n\t                __proto__push(_this4, 'data');\n\t                ctx.relink(ctx.__context, _this4, true, true);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Register stores in storesMap & link them in the protos\n\t         * @param storesMap\n\t         * @param state\n\t         * @param data\n\t         */\n\t\n\t    }, {\n\t        key: 'register',\n\t        value: function register(storesMap) {\n\t            var _this5 = this;\n\t\n\t            var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t            this.relink(storesMap, this, false, false);\n\t            Object.keys(storesMap).forEach(function (id) {\n\t                if (storesMap[id].singleton || is.fn(storesMap[id]) && (state[id] || data[id])) {\n\t                    _this5._mount(id, state[id], data[id]);\n\t                } else if (state[id] || data[id]) {\n\t                    if (data[id]) {\n\t                        if (state[id]) _this5.stores[id].state = state[id];\n\t                        _this5.stores[id].push(data[id]);\n\t                    } else if (state[id]) {\n\t                        _this5.stores[id].setState(state[id]);\n\t                    }\n\t                } else {\n\t                    _this5._watchStore(id);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Map srcCtx store's on targetCtx headers proto's\n\t         * @param srcCtx\n\t         * @param targetCtx\n\t         * @param state\n\t         * @param data\n\t         */\n\t\n\t    }, {\n\t        key: 'relink',\n\t        value: function relink(srcCtx) {\n\t            var targetCtx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\t\n\t            var _this6 = this;\n\t\n\t            var external = arguments[2];\n\t            var force = arguments[3];\n\t\n\t            var lctx = targetCtx._stores.prototype;\n\t            Object.keys(srcCtx).forEach(function (id) {\n\t                if (!force && targetCtx.__context[id] === srcCtx[id] || targetCtx.__context[id] && targetCtx.__context[id].constructor === srcCtx[id]) return;\n\t\n\t                if (!force && targetCtx.__context[id]) {\n\t                    if (!external && !is.fn(targetCtx.__context[id])) {\n\t                        console.info(\"Rescope Store : \", id, \" already exist in this context ! ( try __proto__ hot patch )\");\n\t                        targetCtx.__context[id].__proto__ = srcCtx[id].prototype;\n\t                    }\n\t                    if (!external && is.fn(targetCtx.__context[id])) targetCtx.__context[id] = srcCtx[id];\n\t\n\t                    return;\n\t                } else if (!force && !external) _this6.__context[id] = srcCtx[id];\n\t\n\t                Object.defineProperty(lctx, id, {\n\t                    get: function get() {\n\t                        return _this6.__context[id];\n\t                    }\n\t                });\n\t                Object.defineProperty(targetCtx._state.prototype, id, {\n\t                    get: function get() {\n\t                        return _this6.__context[id] && _this6.__context[id].state;\n\t                    },\n\t                    set: function set(v) {\n\t                        return _this6._mount(id, v);\n\t                    }\n\t                });\n\t                Object.defineProperty(targetCtx._data.prototype, id, {\n\t                    get: function get() {\n\t                        return _this6.__context[id] && _this6.__context[id].data;\n\t                    },\n\t                    set: function set(v) {\n\t                        return _this6._mount(id, undefined, v);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Bind stores from this context, his parents and mixed context\n\t         *\n\t         * @param obj {React.Component|Store|function}\n\t         * @param key {string*} stores keys to bind updates\n\t         * @param as\n\t         * @param setInitial=true {bool} false to not propag initial value\n\t         */\n\t\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(obj, key, as) {\n\t            var setInitial = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\t\n\t            var lastRevs = void 0,\n\t                data = void 0,\n\t                reKey = void 0;\n\t            if (key && !is.array(key)) key = [key];\n\t\n\t            if (as === false || as === true) {\n\t                setInitial = as;\n\t                as = null;\n\t            }\n\t\n\t            reKey = key.map(function (id) {\n\t                return is.string(id) ? id : id.name;\n\t            });\n\t\n\t            this._followers.push([obj, key, as || undefined, lastRevs = reKey && reKey.reduce(function (revs, id) {\n\t                return revs[id] = 0, revs;\n\t            }, {})]);\n\t\n\t            this.mount(key);\n\t\n\t            if (setInitial && this._stable) {\n\t                data = this.getUpdates(lastRevs);\n\t                if (!data) return;\n\t                if (typeof obj != \"function\") {\n\t                    if (as) obj.setState(_defineProperty({}, as, data));else obj.setState(data);\n\t                } else {\n\t                    obj(data);\n\t                }\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Un bind this context off the given component-keys\n\t         * @param obj\n\t         * @param key\n\t         * @returns {Array.<*>}\n\t         */\n\t\n\t    }, {\n\t        key: 'unBind',\n\t        value: function unBind(obj, key, as) {\n\t            var followers = this._followers,\n\t                i = followers && followers.length;\n\t            while (followers && i--) {\n\t                if (followers[i][0] === obj && '' + followers[i][1] == '' + key && followers[i][2] == as) return followers.splice(i, 1);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Mount the stores in storesList from this context, its parents and mixed context\n\t         * Bind them to 'to'\n\t         * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n\t         * @param to\n\t         * @param storesList\n\t         * @param bind\n\t         * @returns {Object} Initial outputs of the stores in 'storesList'\n\t         */\n\t\n\t    }, {\n\t        key: 'map',\n\t        value: function map(to, storesList) {\n\t            var _this7 = this;\n\t\n\t            var bind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\n\t            var Store = this.constructor.Store;\n\t            storesList = is.array(storesList) ? storesList : [storesList];\n\t            this.mount(storesList);\n\t            if (bind && to instanceof Store) {\n\t                Store.map(to, storesList, this, this, false);\n\t            } else if (bind) {\n\t                this.bind(to, storesList, undefined, false);\n\t\n\t                var mixedCWUnmount = void 0,\n\t                    unMountKey = to.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n\t\n\t                if (to.hasOwnProperty(unMountKey)) {\n\t                    mixedCWUnmount = to[unMountKey];\n\t                }\n\t\n\t                to[unMountKey] = function () {\n\t                    delete to[unMountKey];\n\t                    if (mixedCWUnmount) to[unMountKey] = mixedCWUnmount;\n\t\n\t                    _this7.unBind(to, storesList);\n\t                    return to[unMountKey] && to[unMountKey].apply(to, arguments);\n\t                };\n\t            }\n\t            return storesList.reduce(function (data, id) {\n\t                if (!is.string(id)) id = id.name;\n\t                id = id.split(':'); //@todo\n\t                id[0] = id[0].split('.');\n\t                data[id[1] || id[0][id[0].length - 1]] = _this7.stores[id[0][0]] && _this7.stores[id[0][0]].retrieve && _this7.stores[id[0][0]].retrieve(id[0].splice(1));\n\t                return data;\n\t            }, {});\n\t        }\n\t    }, {\n\t        key: 'retrieve',\n\t        value: function retrieve() {\n\t            var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t            path = is.string(path) ? path.split('.') : path;\n\t            return path && this.stores[path[0]] && this.stores[path[0]].retrieve(path.splice(1));\n\t        }\n\t\n\t        /**\n\t         * Get or update storesRevMap's revisions\n\t         * @param storesRevMap\n\t         * @param local\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'getStoresRevs',\n\t        value: function getStoresRevs() {\n\t            var storesRevMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var local = arguments[1];\n\t\n\t            var ctx = this.__context;\n\t            if (!storesRevMap) {\n\t                storesRevMap = {};\n\t            }\n\t            Object.keys(ctx).forEach(function (id) {\n\t                if (!is.fn(ctx[id])) {\n\t                    storesRevMap[id] = ctx[id]._rev;\n\t                } else if (!storesRevMap.hasOwnProperty(id)) storesRevMap[id] = false;\n\t            });\n\t            if (!local) {\n\t                this.__mixed.reduce(function (updated, ctx) {\n\t                    return ctx.getStoresRevs(storesRevMap), storesRevMap;\n\t                }, storesRevMap);\n\t                this.parent && this.parent.getStoresRevs(storesRevMap);\n\t            }\n\t            return storesRevMap;\n\t        }\n\t\n\t        /**\n\t         * Get or update output basing storesRevMap's revisions.\n\t         * If a store in 'storesRevMap' is updated; add it to 'output'\n\t         * @param storesRevMap\n\t         * @param output\n\t         * @param updated\n\t         * @returns {*|{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'getUpdates',\n\t        value: function getUpdates(storesRevMap, output, updated) {\n\t            var _this8 = this;\n\t\n\t            var ctx = this.__context;\n\t\n\t            output = output || {};\n\t            Object.keys(ctx).forEach(function (id) {\n\t                if (!output[id] && (!storesRevMap || storesRevMap.hasOwnProperty(id) && storesRevMap[id] === undefined || !(!storesRevMap.hasOwnProperty(id) || ctx[id]._rev <= storesRevMap[id]))) {\n\t\n\t                    updated = true;\n\t                    output[id] = _this8.data[id];\n\t                    if (storesRevMap && storesRevMap[id] !== undefined) storesRevMap[id] = ctx[id]._rev;\n\t                }\n\t            });\n\t            updated = this.__mixed.reduce(function (updated, ctx) {\n\t                return ctx.getUpdates(storesRevMap, output, updated) || updated;\n\t            }, updated);\n\t            updated = this.parent && this.parent.getUpdates(storesRevMap, output, updated) || updated;\n\t            return updated && output;\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param flags_states\n\t         * @param flags_data\n\t         * @returns {{state: {}, data: {}}}\n\t         */\n\t\n\t    }, {\n\t        key: 'serialize',\n\t        value: function serialize() {\n\t            var _this9 = this;\n\t\n\t            var flags_states = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : /.*/;\n\t            var flags_data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /.*/;\n\t\n\t            var ctx = this.__context,\n\t                output = { state: {}, data: {} },\n\t                _flags_states = void 0,\n\t                _flags_data = void 0;\n\t            if (is.array(flags_states)) flags_states.forEach(function (id) {\n\t                return output.state[id] = _this9.state[id];\n\t            });\n\t\n\t            if (is.array(flags_data)) flags_data.forEach(function (id) {\n\t                return output.data[id] = _this9.data[id];\n\t            });\n\t\n\t            if (!is.array(flags_data) && !is.array(flags_states)) Object.keys(ctx).forEach(function (id) {\n\t                if (is.fn(ctx[id])) return;\n\t\n\t                var flags = ctx[id].constructor.flags;\n\t\n\t                flags = is.array(flags) ? flags : [flags || \"\"];\n\t\n\t                if (flags.reduce(function (r, flag) {\n\t                    return r || flags_states.test(flag);\n\t                }, false)) output.state[id] = _this9.state[id];\n\t\n\t                if (flags.reduce(function (r, flag) {\n\t                    return r || flags_data.test(flag);\n\t                }, false)) output.data[id] = _this9.data[id];\n\t            });\n\t            return output;\n\t        }\n\t    }, {\n\t        key: 'dispatch',\n\t        value: function dispatch(action, data) {\n\t            var _this10 = this;\n\t\n\t            Object.keys(this.__context).forEach(function (id) {\n\t                if (!is.fn(_this10.__context[id])) _this10.__context[id].trigger(action, data);\n\t            });\n\t\n\t            this.__mixed.forEach(function (ctx) {\n\t                return ctx.dispatch(action, data);\n\t            });\n\t            this.parent && this.parent.dispatch(action, data);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * once('stable', cb)\n\t         * @param obj {React.Component|Store|function)\n\t         * @param key {string} optional key where to map the public state\n\t         */\n\t\n\t    }, {\n\t        key: 'then',\n\t        value: function then(cb) {\n\t            var _this11 = this;\n\t\n\t            if (this._stable) return cb(null, this.data);\n\t            this.once('stable', function (e) {\n\t                return cb(null, _this11.data);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(_ref2, quiet) {\n\t            var state = _ref2.state,\n\t                data = _ref2.data;\n\t\n\t            var ctx = this.__context;\n\t            Object.keys(data).forEach(function (id) {\n\t                quiet ? ctx.data = data[id] : ctx.push(data[id]);\n\t            });\n\t            Object.keys(state).forEach(function (id) {\n\t                quiet ? ctx.state = state[id] : ctx.setState(state[id]);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'retainStores',\n\t        value: function retainStores() {\n\t            var _this12 = this;\n\t\n\t            var stores = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t            var reason = arguments[1];\n\t\n\t            stores.forEach(function (id) {\n\t                return _this12.stores[id] && _this12.stores[id].retain && _this12.stores[id].retain(reason);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'disposeStores',\n\t        value: function disposeStores() {\n\t            var _this13 = this;\n\t\n\t            var stores = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t            var reason = arguments[1];\n\t\n\t            stores.forEach(function (id) {\n\t                return _this13.stores[id] && _this13.stores[id].dispose && _this13.stores[id].dispose(reason);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'wait',\n\t        value: function wait(reason) {\n\t            //console.log(\"wait\", reason);\n\t            this._stable && !this.__locks.all && this.emit(\"unstable\", this);\n\t            this._stable = false;\n\t            this.__locks.all++;\n\t            if (reason) {\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]++;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'release',\n\t        value: function release(reason) {\n\t            var _this14 = this;\n\t\n\t            if (reason) {\n\t                if (this.__locks[reason] == 0) console.error(\"Release more than locking !\", reason);\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]--;\n\t            }\n\t            if (!reason && this.__locks.all == 0) console.error(\"Release more than locking !\");\n\t\n\t            this.__locks.all--;\n\t            if (!this.__locks.all) {\n\t                this._stabilizerTM && clearTimeout(this._stabilizerTM);\n\t\n\t                this._stabilizerTM = setTimeout(function (e) {\n\t                    _this14._stabilizerTM = null;\n\t                    if (_this14.__locks.all) return;\n\t\n\t                    _this14._propagTM && clearTimeout(_this14._propagTM);\n\t\n\t                    _this14._stable = true;\n\t                    _this14.emit(\"stable\", _this14);\n\t\n\t                    !_this14.dead && _this14._propag(); // stability can induce destroy\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'propag',\n\t        value: function propag() {\n\t            var _this15 = this;\n\t\n\t            this._propagTM && clearTimeout(this._propagTM);\n\t            this._propagTM = setTimeout(function (e) {\n\t                _this15._propagTM = null;\n\t                _this15._propag();\n\t            }, 2);\n\t        }\n\t    }, {\n\t        key: '_propag',\n\t        value: function _propag() {\n\t            var _this16 = this;\n\t\n\t            if (this._followers.length) this._followers.forEach(function (_ref3) {\n\t                var obj = _ref3[0],\n\t                    key = _ref3[1],\n\t                    as = _ref3[2],\n\t                    lastRevs = _ref3[3];\n\t\n\t                var data = _this16.getUpdates(lastRevs);\n\t                if (!data) return;\n\t                if (typeof obj != \"function\") {\n\t                    if (as) obj.setState(_defineProperty({}, as, data));else obj.setState(data);\n\t                } else {\n\t                    obj(data, lastRevs && [].concat(_toConsumableArray(lastRevs)) || \"no revs\");\n\t                }\n\t                // lastRevs &&\n\t                // key.forEach(id => (lastRevs[id] = this.stores[id] && this.stores[id]._rev || 0));\n\t            });\n\t            this.emit(\"update\", this.getUpdates());\n\t        }\n\t\n\t        /**\n\t         * is stable\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: 'isStable',\n\t        value: function isStable() {\n\t            return this._stable;\n\t        }\n\t\n\t        //serializeChilds( childs = [] ) {\n\t        //\n\t        //}\n\t\n\t    }, {\n\t        key: '_addChild',\n\t        value: function _addChild(ctx) {\n\t            var _this17 = this;\n\t\n\t            this._childContexts.push(ctx);\n\t            var lists = {\n\t                'stable': function stable(s) {\n\t                    _this17._unStableChilds--;\n\t                    if (!_this17._unStableChilds) _this17.emit(\"stableTree\", _this17);\n\t                },\n\t                'unstable': function unstable(s) {\n\t                    _this17._unStableChilds++;\n\t                    if (1 == _this17._unStableChilds) _this17.emit(\"unstableTree\", _this17);\n\t                },\n\t                'stableTree': function stableTree(s) {\n\t                    _this17._unStableChilds--;\n\t                    if (!_this17._unStableChilds) _this17.emit(\"stableTree\", _this17);\n\t                },\n\t                'unstableTree': function unstableTree(s) {\n\t                    _this17._unStableChilds++;\n\t                    if (1 == _this17._unStableChilds) _this17.emit(\"unstableTree\", _this17);\n\t                },\n\t                'destroy': function destroy(ctx) {\n\t                    if (ctx._unStableChilds) _this17._unStableChilds--;\n\t                    if (!ctx.isStable()) _this17._unStableChilds--;\n\t\n\t                    if (!_this17._unStableChilds) _this17.emit(\"stableTree\", _this17);\n\t                }\n\t            },\n\t                wasStable = this._unStableChilds;\n\t            //!ctx.isStable() && console.warn('add unstable child');\n\t            !ctx.isStable() && this._unStableChilds++;\n\t            ctx._unStableChilds && this._unStableChilds++;\n\t            this._childContextsList.push(lists);\n\t            if (!wasStable && this._unStableChilds) this.emit(\"unstableTree\", this);\n\t            ctx.on(lists);\n\t        }\n\t    }, {\n\t        key: '_rmChild',\n\t        value: function _rmChild(ctx) {\n\t            var i = this._childContexts.indexOf(ctx),\n\t                wasStable = this._unStableChilds;\n\t            if (i != -1) {\n\t                this._childContexts.splice(i, 1);\n\t                !ctx.isStable() && this._unStableChilds--;\n\t                ctx._unStableChilds && this._unStableChilds--;\n\t                ctx.un(this._childContextsList.splice(i, 1)[0]);\n\t                if (wasStable && !this._unStableChilds) this.emit(\"stableTree\");\n\t            }\n\t        }\n\t    }, {\n\t        key: 'retain',\n\t        value: function retain(reason) {\n\t            this.__retains.all++;\n\t            //console.log(\"retain\", this._id, reason);\n\t            if (reason) {\n\t                this.__retains[reason] = this.__retains[reason] || 0;\n\t                this.__retains[reason]++;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dispose',\n\t        value: function dispose(reason) {\n\t            var _this18 = this;\n\t\n\t            //console.log(\"dispose\", this._id, reason);\n\t            if (reason) {\n\t                if (!this.__retains[reason]) throw new Error(\"Dispose more than retaining : \" + reason);\n\t                this.__retains[reason]--;\n\t            }\n\t\n\t            if (!this.__retains.all) throw new Error(\"Dispose more than retaining !\");\n\t\n\t            this.__retains.all--;\n\t\n\t            if (!this.__retains.all) {\n\t                //console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n\t                if (this._persistenceTm) {\n\t                    this._destroyTM && clearTimeout(this._destroyTM);\n\t                    this._destroyTM = setTimeout(function (e) {\n\t                        _this18.then(function (s) {\n\t                            !_this18.__retains.all && _this18.destroy();\n\t                        });\n\t                    }, this._persistenceTm);\n\t                } else {\n\t                    this.then(function (s) {\n\t                        return !_this18.__retains.all && _this18.destroy();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * order destroy of local stores\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            var _this19 = this;\n\t\n\t            var ctx = this.__context;\n\t            //console.warn(\"destroy\", this._id);\n\t            this.dead = true;\n\t            this.emit(\"destroy\", this);\n\t            Object.keys(this.__listening).forEach(function (id) {\n\t                return _this19.__context[id].removeListener(_this19.__listening[id]);\n\t            });\n\t\n\t            this._stabilizerTM && clearTimeout(this._stabilizerTM);\n\t            this._propagTM && clearTimeout(this._propagTM);\n\t            this.__listening = {};\n\t\n\t            if (this._isLocalId) delete openContexts[this._id];\n\t            this._followers.length = 0;\n\t\n\t            while (this.__mixedList.length) {\n\t                this.__mixed[0].removeListener(this.__mixedList.shift());\n\t                this.__mixed.shift().dispose(\"mixedTo\");\n\t            }\n\t            if (this.__parentList) {\n\t                this.parent._rmChild(this);\n\t                this.parent.removeListener(this.__parentList);\n\t                this.parent.dispose(\"isMyParent\");\n\t                this.__parentList = null;\n\t            }\n\t            //for ( let key in ctx )\n\t            //    if ( !is.fn(ctx[key]) ) {\n\t            //        if ( ctx[key].contextObj === this )\n\t            //            ctx[key].dispose();\n\t            //\n\t            //        ctx[key] = ctx[key].constructor;\n\t            //    }\n\t            this.__mixed = this.data = this.state = this.context = this.stores = null;\n\t            this._data = this._state = this._stores = null;\n\t        }\n\t    }, {\n\t        key: 'datas',\n\t        get: function get() {\n\t            return this.data;\n\t        }\n\t    }]);\n\t\n\t    return Context;\n\t}(EventEmitter);\n\t\n\tContext.persistenceTm = 1;\n\tContext.Store = null;\n\tContext.contexts = openContexts;\n\texports.default = Context;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * Copyright (c)  2017 Caipi Labs .\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\tvar is = __webpack_require__(1);\n\t\n\tvar Emitter = function () {\n\t    function Emitter() {\n\t        _classCallCheck(this, Emitter);\n\t\n\t        this._events = {};\n\t    }\n\t\n\t    _createClass(Emitter, [{\n\t        key: 'on',\n\t        value: function on(evt, cb) {\n\t            var _this = this;\n\t\n\t            if (!is.string(evt) && evt) return Object.keys(evt).forEach(function (k) {\n\t                return _this.on(k, evt[k]);\n\t            });\n\t\n\t            this._events[evt] = this._events[evt] || [];\n\t            this._events[evt].push(cb);\n\t        }\n\t    }, {\n\t        key: 'un',\n\t        value: function un(evt, cb) {\n\t            var _this2 = this;\n\t\n\t            if (!is.string(evt) && evt) return Object.keys(evt).forEach(function (k) {\n\t                return _this2.un(k, evt[k]);\n\t            });\n\t\n\t            if (!this._events[evt]) return;\n\t            var i = this._events[evt].indexOf(cb);\n\t            this._events[evt].splice(i, 1);\n\t        }\n\t    }, {\n\t        key: 'emit',\n\t        value: function emit(evt) {\n\t            if (!this._events[evt]) return;\n\t            var lists = [].concat(_toConsumableArray(this._events[evt]));\n\t\n\t            for (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                argz[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            for (var i = 0; i < lists.length; i++) {\n\t                lists[i].apply(lists, argz);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addListener',\n\t        value: function addListener() {\n\t            this.on.apply(this, arguments);\n\t        }\n\t    }, {\n\t        key: 'removeListener',\n\t        value: function removeListener() {\n\t            this.un.apply(this, arguments);\n\t        }\n\t    }, {\n\t        key: 'removeAllListeners',\n\t        value: function removeAllListeners() {\n\t            this._events = {};\n\t        }\n\t    }, {\n\t        key: 'once',\n\t        value: function once(evt, cb) {\n\t            var _this3 = this;\n\t\n\t            var _fn = void 0;\n\t            this.on(evt, _fn = function fn() {\n\t                _this3.un(evt, _fn);\n\t                cb.apply(undefined, arguments);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Emitter;\n\t}();\n\t\n\texports.default = Emitter;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"shortid\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/*\n\t * Copyright (c)  2017 Caipi Labs .\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t * @author : Nathanael Braun\n\t * @contact : caipilabs@gmail.com\n\t */\n\t\n\t/**\n\t * Ultra scalable state-aware store\n\t *\n\t * @todo : lot of optims...\n\t */\n\t\n\tvar is = __webpack_require__(1),\n\t    Context = __webpack_require__(2),\n\t    EventEmitter = __webpack_require__(3),\n\t    shortid = __webpack_require__(4),\n\t    objProto = Object.getPrototypeOf({});\n\t\n\tvar Store = function (_EventEmitter) {\n\t    _inherits(Store, _EventEmitter);\n\t\n\t    /**\n\t     * Constructor, will build a rescope store\n\t     *\n\t     * (context, {require,use,apply,state, data})\n\t     * (context)\n\t     *\n\t     * @param context {object} context where to find the other stores (default : static staticContext )\n\t     * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n\t     */\n\t    // overridable list of store that will allow push if updated\n\t    function Store() {\n\t        var _this$_require, _this$_require2;\n\t\n\t        _classCallCheck(this, Store);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));\n\t\n\t        var argz = [].concat(Array.prototype.slice.call(arguments)),\n\t            _static = _this.constructor,\n\t            context = argz[0] instanceof Context ? argz.shift() : _static.context ? Context.getContext(_static.context) : is.string(argz[0]) ? Context.getContext(argz.shift()) : _static.staticContext,\n\t            cfg = argz[0] && !is.array(argz[0]) && !is.string(argz[0]) ? argz.shift() : {},\n\t            name = is.string(argz[0]) ? argz[0] : cfg.name || _static.name,\n\t            watchs = is.array(argz[0]) ? argz.shift() : cfg.use || [],\n\t            // watchs need to be defined after all the\n\t        // store are registered : so we can't deal\n\t        // with any \"static use\" automaticly\n\t        apply = is.fn(argz[0]) ? argz.shift() : cfg.apply || null,\n\t            initialState = _static.state || _static.initialState,\n\t            applied;\n\t\n\t        _this._uid = cfg._uid || shortid.generate();\n\t\n\t        _this.__retains = { all: 0 };\n\t        _this.__locks = { all: 0 };\n\t        _this._onStabilize = [];\n\t\n\t        _this._persistenceTm = cfg.persistenceTm || _this.constructor.persistenceTm;\n\t        if (is.string(argz[0])) {\n\t            if (context.__context[name]) console.warn(\"ReScope: Overwriting an existing static named store ( %s ) !!\", name);\n\t            context.__context[name] = _this;\n\t        }\n\t\n\t        if (cfg && cfg.on) {\n\t            _this.on(cfg.on);\n\t        }\n\t        // this.state      = this.state || {};\n\t\n\t\n\t        _this.name = name;\n\t\n\t        if (context.stores) {\n\t            _this.contextObj = context;\n\t            _this.context = context.stores;\n\t        } else {\n\t            _this.contextObj = new Context(context);\n\t            _this.context = context.stores;\n\t        }\n\t\n\t        _this._rev = 0;\n\t        _this._revs = {};\n\t        _this.stores = {};\n\t        _this._require = [];\n\t\n\t        if (is.array(_static.use)) {\n\t            _this._use = [].concat(_toConsumableArray(watchs), _toConsumableArray((_static.use || []).map(function (key) {\n\t                var ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n\t                if (ref[1]) {\n\t                    var ref2 = ref[2].split('.');\n\t                    _this._require.push(ref[3] || ref2[ref2.length - 1]);\n\t                }\n\t                return ref[2];\n\t            })));\n\t        } else {\n\t            _this._use = [].concat(_toConsumableArray(watchs), _toConsumableArray(_static.use ? Object.keys(_static.use).map(function (key) {\n\t                var ref = key.match(/^(\\!?)(.*)$/);\n\t                ref[1] && _this._require.push(_static.use[key]);\n\t                return ref[2] + ':' + _static.use[key];\n\t            }) : []));\n\t        }\n\t\n\t        if (_static.require) (_this$_require = _this._require).push.apply(_this$_require, _toConsumableArray(_static.require));\n\t        if (cfg.require) (_this$_require2 = _this._require).push.apply(_this$_require2, _toConsumableArray(cfg.require));\n\t\n\t        _this._followers = [];\n\t\n\t        if (_static.data !== undefined) _this.data = _extends({}, _static.data);\n\t        if (cfg.hasOwnProperty(\"data\") && cfg.data !== undefined) _this.data = cfg.data;\n\t        if (cfg.hasOwnProperty(\"state\") && cfg.state !== undefined) initialState = _extends({}, initialState, cfg.state);\n\t\n\t        if (apply) _this.apply = apply;\n\t\n\t        if (initialState || _this._use.length) {\n\t            // sync apply\n\t            _this.state = _extends({}, initialState || {}, context.map(_this, _this._use));\n\t            if (_this.shouldApply(_this.state) && _this.data === undefined) {\n\t                _this.data = _this.apply(_this.data, _this.state, _this.state);\n\t                applied = true;\n\t            }\n\t        }\n\t\n\t        if ((_this.data !== undefined || applied) && !_this.__locks.all) {\n\t            _this._stable = true;\n\t            _this._rev++;\n\t        } else {\n\t            _this._stable = false;\n\t            if (!_static.managed && !_this.state && (!_this._use || !_this._use.length)) {\n\t                console.warn(\"Rescope store '\", _this.name, \"' have no initial data, state or use. It can't stabilize...\");\n\t            }\n\t        }\n\t        !_this._stable && _this.emit('unstable', _this.state);\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * get a Builder-key pair for Store::map\n\t     * @param {string} name\n\t     * @returns {{store: Store, name: *}}\n\t     */\n\t    // default state\n\t    /**\n\t     * if retain goes to 0 :\n\t     * false to not destroy,\n\t     * 0 to sync auto destroy\n\t     * Ms to autodestroy after tm ms if no retain has been called\n\t     * @type {boolean|Int}\n\t     */\n\t    // overridable list of source stores\n\t\n\t\n\t    _createClass(Store, [{\n\t        key: 'shouldPropag',\n\t\n\t\n\t        /**\n\t         * Overridable method to know if a data change should be propag to the listening stores & components\n\t         */\n\t        value: function shouldPropag(nDatas) {\n\t            var _static = this.constructor,\n\t                r,\n\t                cDatas = this.data;\n\t            r = !cDatas && nDatas;\n\t            cDatas && Object.keys(cDatas).forEach(function (key) {\n\t                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key]);\n\t            });\n\t            nDatas && Object.keys(nDatas).forEach(function (key) {\n\t                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key]);\n\t            });\n\t            return !!r;\n\t        }\n\t\n\t        /**\n\t         * Overridable method to know if a state change should be applied\n\t         */\n\t\n\t    }, {\n\t        key: 'shouldApply',\n\t        value: function shouldApply() {\n\t            var _this2 = this;\n\t\n\t            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\t\n\t            var _static = this.constructor;\n\t\n\t            return !!this.isComplete(state) && (is.array(_static.follow) ? _static.follow.reduce(function (r, i) {\n\t                return r || state && state[i];\n\t            }, false) : _static.follow ? Object.keys(_static.follow).reduce(function (r, i) {\n\t                return r || state && is.fn(_static.follow[i]) && _static.follow[i].call(_this2, state[i]) || _static.follow[i] && state[i] !== _this2.state[i];\n\t            }, false) : true);\n\t        }\n\t\n\t        /**\n\t         * Overridable applier / remapper\n\t         * If state or lastPublicState are simple hash maps apply will return {...data, ...state}\n\t         * if not it will return the last private state\n\t         * @param data\n\t         * @param state\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'apply',\n\t        value: function apply(data, state, changes) {\n\t            state = state || this.state;\n\t\n\t            if (this.refine) return this.refine.apply(this, arguments);\n\t\n\t            if (!data || data.__proto__ !== objProto || state.__proto__ !== objProto) return state;else return _extends({}, data, state);\n\t        }\n\t\n\t        /**\n\t         * @depreciated\n\t         * @param data\n\t         * @param state\n\t         * @param changes\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'refine',\n\t        value: function refine(data, state, changes) {\n\t            state = state || this.state;\n\t\n\t            if (!data || data.__proto__ !== objProto || state.__proto__ !== objProto) return state;else return _extends({}, data, state);\n\t        }\n\t\n\t        /**\n\t         * Debounce this store propagation ( & reducing )\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'stabilize',\n\t        value: function stabilize(cb) {\n\t            var _this3 = this;\n\t\n\t            cb && this.once('stable', cb);\n\t            this._stable && this.emit('unstable', this.state, this.data);\n\t\n\t            this._stable = false;\n\t\n\t            if (this._stabilizer) clearTimeout(this._stabilizer);\n\t\n\t            this._stabilizer = setTimeout(this.push.bind(this, null, function () {\n\t                //@todo\n\t\n\t                var stable = _this3._stable;\n\t                _this3._stable = true;\n\t                !stable && _this3.emit('stable', _this3.state, _this3.data);\n\t                _this3._stabilizer = null;\n\t                // this.release();\n\t            }));\n\t        }\n\t    }, {\n\t        key: 'retrieve',\n\t        value: function retrieve(path) {\n\t            var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t            var obj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.data;\n\t\n\t            path = is.string(path) ? path.split('.') : path;\n\t            return !obj || !path || !path.length ? obj : path.length == i + 1 ? obj[path[i]] : this.retrieve(path, i + 1, obj[path[i]]);\n\t        }\n\t    }, {\n\t        key: 'dispatch',\n\t        value: function dispatch(action) {\n\t            var _contextObj;\n\t\n\t            for (var _len = arguments.length, argz = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                argz[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            (_contextObj = this.contextObj).dispatch.apply(_contextObj, [action].concat(argz));\n\t        }\n\t    }, {\n\t        key: 'trigger',\n\t        value: function trigger(action) {\n\t            var actions = this.constructor.actions,\n\t                ns = void 0;\n\t\n\t            if (actions && actions[action]) {\n\t                var _actions$action;\n\t\n\t                for (var _len2 = arguments.length, argz = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t                    argz[_key2 - 1] = arguments[_key2];\n\t                }\n\t\n\t                ns = (_actions$action = actions[action]).call.apply(_actions$action, [this].concat(argz));\n\t                ns && this.setState(ns);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Pull stores in the private state\n\t         * @param stores  {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n\t         */\n\t\n\t    }, {\n\t        key: 'pull',\n\t        value: function pull(stores, doWait, origin) {\n\t            var _this4 = this;\n\t\n\t            var initialOutputs = this.contextObj.map(this, stores);\n\t            if (doWait) {\n\t                this.wait();\n\t                stores.forEach(function (s) {\n\t                    return _this4.context[s] && _this4.wait(_this4.context[s]);\n\t                });\n\t                this.release();\n\t            }\n\t            return initialOutputs;\n\t        }\n\t\n\t        /**\n\t         * Apply apply/remap on the private state & push the resulting \"public\" state to followers\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'push',\n\t        value: function push(data, force, cb) {\n\t            cb = force === true ? cb : force;\n\t            force = force === true;\n\t            var i = 0,\n\t                nextState = !data && _extends({}, this.state, this._changesSW) || this.state,\n\t                nextDatas = data || this.apply(this.data, nextState, this._changesSW);\n\t\n\t            this.state = nextState;\n\t            if (!force && (!this.data && this.data === nextDatas || !this.shouldPropag(nextDatas))) {\n\t                cb && cb();\n\t                return false;\n\t            }\n\t\n\t            this.data = nextDatas;\n\t            this._changesSW = {};\n\t            //this.__locks.all++;\n\t            this.wait();\n\t            this.release(cb);\n\t        }\n\t\n\t        /**\n\t         * Update the current private state & push it once the store is stable\n\t         * @param pState\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'setState',\n\t        value: function setState(pState, cb, sync) {\n\t            var i = 0,\n\t                change,\n\t                changes = this._changesSW = this._changesSW || {};\n\t            for (var k in pState) {\n\t                if (!this.state || pState.hasOwnProperty(k) && (pState[k] != this.state[k] || this.state[k] && pState[k] && pState[k]._rev != this._revs[k] // rev/hash update\n\t                )) {\n\t                    change = true;\n\t                    this._revs[k] = pState[k] && pState[k]._rev || true;\n\t                    changes[k] = pState[k];\n\t                }\n\t            }if (!this.shouldApply(_extends({}, this.state, changes))) {\n\t                return;\n\t            }\n\t\n\t            if (sync) {\n\t                this.push();\n\t                cb && cb();\n\t            } else {\n\t                if (change) {\n\t                    this.stabilize(cb);\n\t                } else cb && cb();\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Update the current private state & push it once the store is stable\n\t         * @param pState\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'setStateSync',\n\t        value: function setStateSync(pState) {\n\t            var i = 0,\n\t                change,\n\t                changes = this._changesSW = this._changesSW || {};\n\t            for (var k in pState) {\n\t                if (!this.state || pState.hasOwnProperty(k) && (pState[k] != this.state[k] || this.state[k] && pState[k] && pState[k]._rev != this._revs[k] // rev/hash update\n\t                )) {\n\t                    change = true;\n\t                    this._revs[k] = pState[k] && pState[k]._rev || true;\n\t                    changes[k] = pState[k];\n\t                }\n\t            }this.shouldApply(_extends({}, this.state || {}, changes)) && this.push();\n\t            return this.data;\n\t        }\n\t\n\t        /**\n\t         * Replace the current private state & push it once the store is stable\n\t         * @param pState\n\t         * @param cb\n\t         */\n\t\n\t    }, {\n\t        key: 'replaceState',\n\t        value: function replaceState(pState, cb) {\n\t            var i = 0,\n\t                me = this;\n\t            this.state = pState;\n\t\n\t            this.stabilize(cb);\n\t        }\n\t\n\t        /**\n\t         * get a store-key pair for Store::map\n\t         * @param {string} name\n\t         * @returns {{store: Store, name: *}}\n\t         */\n\t\n\t    }, {\n\t        key: 'as',\n\t        value: function as(name) {\n\t            return { store: this, name: name };\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(lists) {\n\t            var _this5 = this;\n\t\n\t            if (!is.string(lists) && lists) Object.keys(lists).forEach(function (k) {\n\t                return _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'on', _this5).call(_this5, k, lists[k]);\n\t            });else _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'on', this).apply(this, arguments);\n\t        }\n\t    }, {\n\t        key: 'removeListener',\n\t        value: function removeListener(lists) {\n\t            var _this6 = this;\n\t\n\t            if (!is.string(lists) && lists) Object.keys(lists).forEach(function (k) {\n\t                return _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'removeListener', _this6).call(_this6, k, lists[k]);\n\t            });else _get(Store.prototype.__proto__ || Object.getPrototypeOf(Store.prototype), 'removeListener', this).apply(this, arguments);\n\t        }\n\t\n\t        /**\n\t         * relink bindings & requires\n\t         * @param {string} name\n\t         * @returns {{store: Store, name: *}}\n\t         */\n\t\n\t    }, {\n\t        key: 'relink',\n\t        value: function relink(from) {\n\t            var _this7 = this;\n\t\n\t            var context = this.contextObj,\n\t                _static = this.constructor;\n\t            if (_static.use) {\n\t                //todo unlink\n\t                this.pull(_static.use, false, from);\n\t            }\n\t\n\t            if (this._require) {\n\t                this._require.forEach(function (store) {\n\t                    return _this7.wait(context.__context[store]);\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * is complete (all requiered keys are here)\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: 'isComplete',\n\t        value: function isComplete() {\n\t            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\t\n\t            var _static = this.constructor;\n\t            return !this._require || !this._require.length || state && this._require.reduce(function (r, key) {\n\t                return r && state[key];\n\t            }, true);\n\t        }\n\t\n\t        /**\n\t         * is stable\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: 'isStable',\n\t        value: function isStable() {\n\t            return this._stable;\n\t        }\n\t\n\t        /**\n\t         * Un bind this store off the given component-key\n\t         * @param obj\n\t         * @param key\n\t         * @returns {Array.<*>}\n\t         */\n\t\n\t    }, {\n\t        key: 'unBind',\n\t        value: function unBind(obj, key, path) {\n\t            var followers = this._followers,\n\t                i = followers && followers.length;\n\t            while (followers && i--) {\n\t                if (followers[i][0] === obj && followers[i][1] === key && followers[i][2] === path) return followers.splice(i, 1);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Bind this store changes to the given component-key\n\t         * @param obj {React.Component|Store|function)\n\t         * @param key {string} optional key where to map the public state\n\t         */\n\t\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(obj, key) {\n\t            var setInitial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t            var path = arguments[3];\n\t\n\t            this._followers.push([obj, key, path]);\n\t            if (setInitial && this.data && this._stable) {\n\t                var data = path ? this.retrieve(path) : this.data;\n\t                if (typeof obj != \"function\") {\n\t                    if (key) obj.setState(_defineProperty({}, key, data));else obj.setState(data);\n\t                } else {\n\t                    obj(data);\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * once('stable', cb)\n\t         * @param obj {React.Component|Store|function)\n\t         * @param key {string} optional key where to map the public state\n\t         */\n\t\n\t    }, {\n\t        key: 'then',\n\t        value: function then(cb) {\n\t            var _this8 = this;\n\t\n\t            if (this._stable) return cb(null, this.data);\n\t            this.once('stable', function (e) {\n\t                return cb(null, _this8.data);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Add a lock so the store will not propag it state untill release() is call\n\t         * @param previous {Store|number|Array} @optional wf to wait, releases to wait or array of stuff to wait\n\t         * @returns {TaskFlow}\n\t         */\n\t\n\t    }, {\n\t        key: 'wait',\n\t        value: function wait(previous) {\n\t            if (typeof previous == \"number\") return this.__locks.all += previous;\n\t            if (is.array(previous)) return previous.map(this.wait.bind(this));\n\t\n\t            this._stable && this.emit('unstable', this.state, this.data);\n\t            this._stable = false;\n\t            this.__locks.all++;\n\t\n\t            var reason = is.string(previous) ? previous : null;\n\t            if (reason) {\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]++;\n\t            }\n\t            if (previous && is.fn(previous.then)) {\n\t                previous.then(this.release.bind(this, null));\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Decrease locks for this store, if it reach 0 & it have a public state,\n\t         * it will be propagated to the followers,\n\t         * then, all stuff passed to \"then\" call back will be exec / released\n\t         * @param desync\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'release',\n\t        value: function release(reason, cb) {\n\t            var _this9 = this;\n\t\n\t            var _static = this.constructor;\n\t            var i = 0,\n\t                wasStable = this._stable;\n\t\n\t            if (is.fn(reason)) {\n\t                cb = reason;\n\t                reason = null;\n\t            }\n\t\n\t            if (reason) {\n\t                if (this.__locks[reason] == 0) console.error(\"Release more than locking !\", reason);\n\t                this.__locks[reason] = this.__locks[reason] || 0;\n\t                this.__locks[reason]--;\n\t            }\n\t\n\t            if (!reason && this.__locks.all == 0) console.error(\"Release more than locking !\");\n\t\n\t            if (! --this.__locks.all && this.data && this.isComplete()) {\n\t                this._stable = true;\n\t                this._rev++; //\n\t                if (this._followers.length) this._followers.forEach(function (follower) {\n\t                    var data = follower[2] ? _this9.retrieve(follower[2]) : _this9.data;\n\t                    if (!data) return;\n\t                    if (typeof follower[0] == \"function\") {\n\t                        follower[0](data);\n\t                    } else {\n\t                        //cb && i++;\n\t                        follower[0].setState(follower[1] ? _defineProperty({}, follower[1], data) : data\n\t                        //,\n\t                        //cb && (\n\t                        //    () => (!(--i) && cb())\n\t                        //)\n\t                        );\n\t                    }\n\t                });\n\t                //else\n\t                !wasStable && this.emit('stable', this.data);\n\t                this.emit('update', this.data);\n\t                cb && cb();\n\t            } else cb && this.then(cb);\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'retain',\n\t        value: function retain(reason) {\n\t            this.__retains.all++;\n\t            if (reason) {\n\t                this.__retains[reason] = this.__retains[reason] || 0;\n\t                this.__retains[reason]++;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dispose',\n\t        value: function dispose(reason) {\n\t            var _this10 = this;\n\t\n\t            //console.warn(\"dispose\", reason, this.__retains);\n\t            if (reason) {\n\t                if (!this.__retains[reason]) throw new Error(\"Dispose more than retaining : \" + reason);\n\t\n\t                this.__retains[reason]--;\n\t            }\n\t            if (this.__retains.all == 0) throw new Error(\"Dispose more than retaining !\");\n\t\n\t            this.__retains.all--;\n\t\n\t            if (!this.__retains.all) {\n\t                if (this._persistenceTm) {\n\t                    this._destroyTM && clearTimeout(this._destroyTM);\n\t                    this._destroyTM = setTimeout(function (e) {\n\t                        _this10._destroyTM = null;\n\t                        _this10.then(function (s) {\n\t                            !_this10.__retains.all && _this10.destroy();\n\t                        });\n\t                    }, this._persistenceTm);\n\t                } else {\n\t                    this.then(function (s) {\n\t                        return !_this10.__retains.all && _this10.destroy();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            //  console.log(\"destroy\", this._uid);\n\t\n\t            this.emit('destroy', this);\n\t            if (this._stabilizer) clearTimeout(this._stabilizer);\n\t\n\t            if (this._followers.length) this._followers.forEach(function (follower) {\n\t                if (typeof follower[0] !== \"function\") {\n\t                    if (follower[0].stores) delete follower[0].stores[follower[1]];\n\t                }\n\t            });\n\t            this._followers.length = 0;\n\t            this.dead = true;\n\t            this._revs = this.data = this.state = this.context = null;\n\t            this.removeAllListeners();\n\t        }\n\t    }, {\n\t        key: 'datas',\n\t\n\t\n\t        /**\n\t         * @deprecated\n\t         * @returns {*}\n\t         */\n\t        get: function get() {\n\t            return this.data;\n\t        }\n\t\n\t        /**\n\t         * @deprecated\n\t         * @returns {*}\n\t         */\n\t        ,\n\t        set: function set(v) {\n\t            //console.groupCollapsed(\"Rescope store : Setting datas is depreciated, use data\");\n\t            console.log(\"Rescope store : Setting datas is depreciated, use data\", new Error().stack);\n\t            //console.groupEnd();\n\t\n\t            this.data = v;\n\t        }\n\t    }], [{\n\t        key: 'as',\n\t        value: function as(name) {\n\t            return { store: this, name: name };\n\t        }\n\t\n\t        /**\n\t         * Map all named stores in {keys} to the {object}'s state\n\t         * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n\t         * @static\n\t         * @param object {React.Component|Store|...} target state aware object\n\t         * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\", store.as('anotherKey')]\n\t         */\n\t\n\t    }, {\n\t        key: 'map',\n\t        value: function map(component, keys, context, origin) {\n\t            var setInitial = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\t\n\t            var targetRevs = component._revs || {};\n\t            var targetContext = component.stores || (component.stores = {});\n\t            var initialOutputs = {};\n\t            keys = is.array(keys) ? [].concat(_toConsumableArray(keys)) : [keys];\n\t\n\t            context = context || Store.staticContext;\n\t\n\t            keys = keys.filter(\n\t            // @todo : use query refs\n\t            // (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n\t            function (key) {\n\t                if (!key) {\n\t                    console.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n\t                    return false;\n\t                }\n\t                var name = void 0,\n\t                    alias = void 0,\n\t                    path = void 0,\n\t                    store = void 0;\n\t                if (key.store && key.name) {\n\t                    alias = name = key.name;\n\t                    store = key.store;\n\t                } else if (is.fn(key)) {\n\t                    name = alias = key.name || key.defaultName;\n\t                    store = key;\n\t                } else {\n\t                    key = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n\t                    name = key[1];\n\t                    path = key[2] && key[2].split('.').slice(1);\n\t                    store = context.stores[key[1]];\n\t                    alias = key[3] || path && path[path.length - 1] || key[1];\n\t                }\n\t\n\t                if (targetRevs[name]) return false; // ignore dbl uses for now\n\t\n\t                if (!store) {\n\t                    console.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + origin + ' !!', store);\n\t                    return false;\n\t                } else if (is.fn(store)) {\n\t                    context._mount(name);\n\t\n\t                    context.stores[name].bind(component, alias, setInitial, path);\n\t                } else {\n\t                    store.bind(component, alias, setInitial, path);\n\t                }\n\t                targetRevs[alias] = targetRevs[alias] || true;\n\t                !targetContext[name] && (targetContext[name] = context.stores[name]);\n\t                if (context.stores[name].hasOwnProperty('data')) initialOutputs[name] = context.data[name];\n\t                return true;\n\t            });\n\t            var mixedCWUnmount,\n\t                unMountKey = component.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n\t\n\t            if (component.hasOwnProperty(unMountKey)) {\n\t                mixedCWUnmount = component[unMountKey];\n\t            }\n\t\n\t            component[unMountKey] = function () {\n\t                delete component[unMountKey];\n\t                if (mixedCWUnmount) component[unMountKey] = mixedCWUnmount;\n\t\n\t                keys.map(function (key) {\n\t                    var name = void 0,\n\t                        alias = void 0,\n\t                        path = void 0,\n\t                        store = void 0;\n\t                    if (key.store && key.name) {\n\t                        alias = name = key.name;\n\t                        store = key.store;\n\t                    } else if (is.fn(key)) {\n\t                        name = alias = key.name || key.defaultName;\n\t                        store = context.stores[name];\n\t                    } else {\n\t                        key = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n\t                        name = key[1];\n\t                        path = key[2] && key[2].split('.');\n\t                        store = context.stores[key[1]];\n\t                        alias = key[3] || path && path[path.length - 1] || key[1];\n\t                    }\n\t\n\t                    store && !is.fn(store) && store.unBind(component, alias, path);\n\t                });\n\t                return component[unMountKey] && component[unMountKey].apply(component, arguments);\n\t            };\n\t\n\t            return initialOutputs;\n\t        }\n\t    }]);\n\t\n\t    return Store;\n\t}(EventEmitter);\n\t\n\tStore.use = [];\n\tStore.staticContext = new Context({}, { id: \"static\" });\n\tStore.state = undefined;\n\tStore.persistenceTm = false;\n\texports.default = Store;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/Rescope.nodeps.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db002899de191ce2d3e5","/*\n * Copyright (c)  2017 Caipi Labs .\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Context from \"./Context\";\nimport Store from \"./Store\";\n\nContext.Store = Store;\n\nexport default {Store, Context};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Rescope.js","module.exports = require(\"is\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"is\"\n// module id = 1\n// module chunks = 0","/*\n * Copyright (c)  2017 Caipi Labs .\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\n\nvar is              = require('is'),\n    EventEmitter    = require('./Emitter'),\n    shortid         = require('shortid')\n    , __proto__push = ( target, id, parent ) => {\n        let fn           = function () {\n        };\n        fn.prototype     = parent ? new parent[\"_\" + id]() : target[id] || {};\n        target[id]       = new fn();\n        target['_' + id] = fn;\n    },\n    openContexts    = {};\n\n\nexport default class Context extends EventEmitter {\n    static persistenceTm = 1;// if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n    static Store         = null;\n    static contexts      = openContexts;// all active contexts\n    \n    static getContext( contexts ) {\n        let skey = is.array(contexts) ? contexts.sort(( a, b ) => {\n            if ( a.firstname < b.firstname ) return -1;\n            if ( a.firstname > b.firstname ) return 1;\n            return 0;\n        }).join('::') : contexts;\n        return openContexts[skey] = openContexts[skey] || new Context({}, { id: skey });\n    };\n    \n    /**\n     * Init a Rescope context\n     *\n     * @param storesMap {Object} Object with the origin stores\n     * @param id {string} @optional id ( if this id exist storesMap will be merge on the 'id' context)\n     * @param parent\n     * @param state\n     * @param data\n     * @param name\n     * @param defaultMaxListeners\n     * @param persistenceTm {number) if > 0, will wait 'persistenceTm' ms before destroy when dispose reach 0\n     * @param autoDestroy  {bool} will trigger retain & dispose after start\n     * @returns {Context}\n     */\n    constructor( storesMap, { id, parent, state, data, name, incrementId, defaultMaxListeners, persistenceTm, autoDestroy, rootEmitter } = {} ) {\n        super();\n        \n        this._maxListeners = defaultMaxListeners || this.constructor.defaultMaxListeners;\n        id                 = id || (\"_____\" + shortid.generate());\n        if ( openContexts[id] && !incrementId ) {\n            this._id = id;\n            openContexts[id].register(storesMap);\n            return openContexts[id]\n        }\n        else if ( openContexts[id] && incrementId ) {\n            let i = -1;\n            while ( openContexts[id + '/' + (++i)] ) ;\n            id = id + '/' + i;\n        }\n        \n        this._id            = id;\n        openContexts[id]    = this;\n        this._isLocalId     = true;\n        this._persistenceTm = persistenceTm || this.constructor.persistenceTm;\n        \n        this.stores = {};\n        this.state  = {};\n        this.data   = {};\n        \n        if ( parent && parent.dead )\n            throw new Error(\"Can't use a dead context as parent !\");\n        \n        __proto__push(this, 'stores', parent);\n        __proto__push(this, 'state', parent);\n        __proto__push(this, 'data', parent);\n        this.parent = parent;\n        \n        \n        this.sources            = [];\n        this._childContexts     = [];\n        this._childContextsList = [];\n        this._unStableChilds    = 0;\n        \n        this.__retains   = { all: 0 };\n        this.__locks     = { all: 1 };\n        this.__listening = {};\n        this.__context   = {};\n        this.__mixed     = [];\n        this.__mixedList = [];\n        this._followers  = [];\n        if ( parent ) {\n            parent.retain(\"isMyParent\");\n            if ( !rootEmitter ) {\n                !parent._stable && this.wait(\"waitingParent\");\n                parent.on(this.__parentList = {\n                    'stable'  : s => this.release(\"waitingParent\"),\n                    'unstable': s => this.wait(\"waitingParent\"),\n                    'update'  : s => this._propag()\n                });\n            }\n            else {\n                parent.on(this.__parentList = {\n                    'update': s => this._propag()\n                });\n            }\n            // this.register(parent.__context, state, data);\n        }\n        \n        \n        this.register(storesMap, state, data);\n        this.__locks.all--;\n        this._stable = !this.__locks.all;\n        \n        if ( parent ) {\n            parent._addChild(this);\n        }\n        if ( autoDestroy )\n            setTimeout(\n                tm => {\n                    this.retain(\"autoDestroy\");\n                    this.dispose(\"autoDestroy\");\n                }\n            )\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get datas() {\n        return this.data;\n    }\n    \n    /**\n     *\n     * Mount the stores in storesList, in this context or in its parents or mixed contexts\n     *\n     * @param storesList {string|storeRef} Store name, Array of Store names, or Rescope store ref from Store::as or\n     *     Store:as\n     * @param state\n     * @param data\n     * @returns {Context}\n     */\n    mount( storesList, state, data ) {\n        if ( is.array(storesList) ) {\n            storesList.forEach(k => this._mount(k, state && state[k], data && data[k]));\n        }\n        else {\n            this._mount(...arguments);\n        }\n        return this;\n    }\n    \n    _mount( id, state, data ) {\n        if ( typeof id !== 'string' ) {\n            this.register({ [id.name]: id.store });\n            id = id.name;\n        }\n        \n        if ( !this.__context[id] ) {//ask mixed || parent\n            if ( this.__mixed.reduce(( mounted, ctx ) => (mounted || ctx._mount(id, state, data)), false) ||\n                !this.parent )\n                return;\n            return this.parent._mount(...arguments);\n        }\n        let store = this.__context[id], ctx;\n        if ( is.fn(store) ) {\n            this.__context[id] = new store(this, { state, data });\n        }\n        else {\n            if ( state !== undefined && data === undefined )\n                store.setState(state);\n            else if ( state !== undefined )\n                store.state = state;\n            \n            if ( data !== undefined )\n                store.push(data);\n        }\n        \n        \n        this._watchStore(id);\n        \n        return this.__context[id];\n    }\n    \n    _watchStore( id, state, data ) {\n        if ( !this.__context[id] ) {//ask mixed || parent\n            if ( this.__mixed.reduce(( mounted, ctx ) => (mounted || ctx._watchStore(id, state, data)), false) ||\n                !this.parent )\n                return;\n            return this.parent._watchStore(...arguments);\n        }\n        if ( !this.__listening[id] && !is.fn(this.__context[id]) ) {\n            !this.__context[id].isStable() && this.wait(id);\n            this.__context[id].on(\n                this.__listening[id] = {\n                    'destroy' : s => {\n                        delete this.__listening[id];\n                        this.__context[id] = this.__context[id].constructor;\n                    },\n                    'update'  : s => this.propag(),\n                    'stable'  : s => this.release(id),\n                    'unstable': s => this.wait(id)\n                });\n        }\n        return true;\n    }\n    \n    /**\n     * Mix targetCtx on this context\n     * Mixed context parents are NOT mapped\n     * @param targetCtx\n     */\n    mixin( targetCtx ) {\n        let parent = this.parent, lists;\n        this.__mixed.push(targetCtx)\n        targetCtx.retain(\"mixedTo\");\n        if ( !targetCtx._stable )\n            this.wait(targetCtx._id);\n        \n        this.__mixedList.push(lists = {\n            'stable'  : s => this.release(targetCtx._id),\n            'unstable': s => this.wait(targetCtx._id),\n            'update'  : s => this._propag()\n        });\n        \n        this.stores = {};\n        this.state  = {};\n        this.data   = {};\n        targetCtx.on(lists);\n        __proto__push(this, 'stores', parent);\n        __proto__push(this, 'state', parent);\n        __proto__push(this, 'data', parent);\n        \n        this.relink(this.__context, this, false, true);\n        this.__mixed.forEach(\n            ctx => {\n                __proto__push(this, 'stores');\n                __proto__push(this, 'state');\n                __proto__push(this, 'data');\n                ctx.relink(ctx.__context, this, true, true)\n            }\n        )\n    }\n    \n    /**\n     * Register stores in storesMap & link them in the protos\n     * @param storesMap\n     * @param state\n     * @param data\n     */\n    register( storesMap, state = {}, data = {} ) {\n        this.relink(storesMap, this, false, false);\n        Object.keys(storesMap).forEach(\n            id => {\n                if ( storesMap[id].singleton || (is.fn(storesMap[id]) && (state[id] || data[id])) ) {\n                    this._mount(id, state[id], data[id])\n                }\n                else if ( state[id] || data[id] ) {\n                    if ( data[id] ) {\n                        if ( state[id] )\n                            this.stores[id].state = state[id];\n                        this.stores[id].push(data[id]);\n                    }\n                    else if ( state[id] ) {\n                        this.stores[id].setState(state[id]);\n                    }\n                }\n                else {\n                    this._watchStore(id);\n                }\n            }\n        )\n        \n    }\n    \n    /**\n     * Map srcCtx store's on targetCtx headers proto's\n     * @param srcCtx\n     * @param targetCtx\n     * @param state\n     * @param data\n     */\n    relink( srcCtx, targetCtx = this, external, force ) {\n        let lctx = targetCtx._stores.prototype;\n        Object.keys(srcCtx)\n              .forEach(\n                  id => {\n                      if ( !force && targetCtx.__context[id] === srcCtx[id] ||\n                          targetCtx.__context[id] && (targetCtx.__context[id].constructor === srcCtx[id] ) )\n                          return;\n                \n                      if ( !force && targetCtx.__context[id] ) {\n                          if ( !external && !is.fn(targetCtx.__context[id]) ) {\n                              console.info(\"Rescope Store : \", id, \" already exist in this context ! ( try __proto__ hot patch )\");\n                              targetCtx.__context[id].__proto__ = srcCtx[id].prototype;\n                        \n                          }\n                          if ( !external && is.fn(targetCtx.__context[id]) )\n                              targetCtx.__context[id] = srcCtx[id];\n                    \n                          return;\n                      }\n                      else if ( !force && !external )\n                          this.__context[id] = srcCtx[id];\n                \n                      Object.defineProperty(\n                          lctx,\n                          id,\n                          {\n                              get: () => this.__context[id]\n                          }\n                      );\n                      Object.defineProperty(\n                          targetCtx._state.prototype,\n                          id,\n                          {\n                              get: () => (this.__context[id] && this.__context[id].state),\n                              set: ( v ) => (this._mount(id, v))\n                          }\n                      );\n                      Object.defineProperty(\n                          targetCtx._data.prototype,\n                          id,\n                          {\n                              get: () => (this.__context[id] && this.__context[id].data),\n                              set: ( v ) => (this._mount(id, undefined, v))\n                          }\n                      );\n                  }\n              )\n    }\n    \n    /**\n     * Bind stores from this context, his parents and mixed context\n     *\n     * @param obj {React.Component|Store|function}\n     * @param key {string*} stores keys to bind updates\n     * @param as\n     * @param setInitial=true {bool} false to not propag initial value\n     */\n    bind( obj, key, as, setInitial = true ) {\n        let lastRevs, data, reKey;\n        if ( key && !is.array(key) )\n            key = [key];\n        \n        if ( as === false || as === true ) {\n            setInitial = as;\n            as         = null;\n        }\n        \n        reKey = key.map(id => (is.string(id) ? id : id.name));\n        \n        this._followers.push(\n            [\n                obj,\n                key,\n                as || undefined,\n                lastRevs = reKey && reKey.reduce(( revs, id ) => (revs[id] = 0, revs), {})\n            ]);\n        \n        this.mount(key);\n        \n        if ( setInitial && this._stable ) {\n            data = this.getUpdates(lastRevs);\n            if ( !data ) return;\n            if ( typeof obj != \"function\" ) {\n                if ( as ) obj.setState({ [as]: data });\n                else obj.setState(data);\n            }\n            else {\n                obj(data);\n            }\n        }\n        return this;\n    }\n    \n    /**\n     * Un bind this context off the given component-keys\n     * @param obj\n     * @param key\n     * @returns {Array.<*>}\n     */\n    unBind( obj, key, as ) {\n        var followers = this._followers,\n            i         = followers && followers.length;\n        while ( followers && i-- )\n            if ( followers[i][0] === obj && ('' + followers[i][1]) == ('' + key) &&\n                followers[i][2] == as )\n                return followers.splice(i, 1);\n    }\n    \n    /**\n     * Mount the stores in storesList from this context, its parents and mixed context\n     * Bind them to 'to'\n     * Hook 'to' so it will auto unbind on 'destroy' or 'componentWillUnmount'\n     * @param to\n     * @param storesList\n     * @param bind\n     * @returns {Object} Initial outputs of the stores in 'storesList'\n     */\n    map( to, storesList, bind = true ) {\n        let Store  = this.constructor.Store;\n        storesList = is.array(storesList) ? storesList : [storesList];\n        this.mount(storesList);\n        if ( bind && to instanceof Store ) {\n            Store.map(to, storesList, this, this, false)\n        }\n        else if ( bind ) {\n            this.bind(to, storesList, undefined, false);\n            \n            let mixedCWUnmount,\n                unMountKey = to.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n            \n            if ( to.hasOwnProperty(unMountKey) ) {\n                mixedCWUnmount = to[unMountKey];\n            }\n            \n            to[unMountKey] = ( ...argz ) => {\n                delete to[unMountKey];\n                if ( mixedCWUnmount )\n                    to[unMountKey] = mixedCWUnmount;\n                \n                this.unBind(to, storesList);\n                return to[unMountKey] && to[unMountKey](...argz);\n            }\n            \n        }\n        return storesList.reduce(( data, id ) => {\n            if ( !is.string(id) )\n                id = id.name;\n            id                                     = id.split(':');//@todo\n            id[0]                                  = id[0].split('.');\n            data[id[1] || id[0][id[0].length - 1]] = this.stores[id[0][0]] && this.stores[id[0][0]].retrieve && this.stores[id[0][0]].retrieve(id[0].splice(1));\n            return data;\n        }, {});\n    }\n    \n    retrieve( path = \"\" ) {\n        path = is.string(path) ? path.split('.') : path;\n        return path && this.stores[path[0]] &&\n            this.stores[path[0]].retrieve(path.splice(1));\n    }\n    \n    /**\n     * Get or update storesRevMap's revisions\n     * @param storesRevMap\n     * @param local\n     * @returns {{}}\n     */\n    getStoresRevs( storesRevMap = {}, local ) {\n        let ctx = this.__context;\n        if ( !storesRevMap ) {\n            storesRevMap = {};\n        }\n        Object.keys(ctx).forEach(\n            id => {\n                if ( !is.fn(ctx[id])\n                ) {\n                    storesRevMap[id] = ctx[id]._rev;\n                }\n                else if ( !storesRevMap.hasOwnProperty(id) )\n                    storesRevMap[id] = false\n            }\n        );\n        if ( !local ) {\n            this.__mixed.reduce(( updated, ctx ) => (ctx.getStoresRevs(storesRevMap), storesRevMap), storesRevMap);\n            this.parent && this.parent.getStoresRevs(storesRevMap);\n        }\n        return storesRevMap;\n    }\n    \n    /**\n     * Get or update output basing storesRevMap's revisions.\n     * If a store in 'storesRevMap' is updated; add it to 'output'\n     * @param storesRevMap\n     * @param output\n     * @param updated\n     * @returns {*|{}}\n     */\n    getUpdates( storesRevMap, output, updated ) {\n        let ctx = this.__context;\n        \n        output = output || {};\n        Object.keys(ctx).forEach(\n            id => {\n                if ( !output[id]\n                    && ( !storesRevMap\n                        || (storesRevMap.hasOwnProperty(id) && storesRevMap[id] === undefined)\n                        || !( !storesRevMap.hasOwnProperty(id) || ctx[id]._rev <= storesRevMap[id] ))\n                ) {\n                    \n                    updated    = true;\n                    output[id] = this.data[id];\n                    if ( storesRevMap && storesRevMap[id] !== undefined )\n                        storesRevMap[id] = ctx[id]._rev;\n                    \n                }\n            }\n        );\n        updated = this.__mixed.reduce(( updated, ctx ) => (ctx.getUpdates(storesRevMap, output, updated) || updated), updated);\n        updated = this.parent && this.parent.getUpdates(storesRevMap, output, updated) || updated;\n        return updated && output;\n    }\n    \n    /**\n     *\n     * @param flags_states\n     * @param flags_data\n     * @returns {{state: {}, data: {}}}\n     */\n    serialize( flags_states = /.*/, flags_data = /.*/ ) {\n        let ctx = this.__context, output = { state: {}, data: {} },\n            _flags_states,\n            _flags_data;\n        if ( is.array(flags_states) )\n            flags_states.forEach(id => (output.state[id] = this.state[id]));\n        \n        if ( is.array(flags_data) )\n            flags_data.forEach(id => (output.data[id] = this.data[id]));\n        \n        if ( !is.array(flags_data) && !is.array(flags_states) )\n            Object.keys(ctx).forEach(\n                id => {\n                    if ( is.fn(ctx[id]) )\n                        return;\n                    \n                    let flags = ctx[id].constructor.flags;\n                    \n                    flags = is.array(flags) ? flags : [flags || \"\"];\n                    \n                    if ( flags.reduce(( r, flag ) => (r || flags_states.test(flag)), false) )\n                        output.state[id] = this.state[id];\n                    \n                    if ( flags.reduce(( r, flag ) => (r || flags_data.test(flag)), false) )\n                        output.data[id] = this.data[id];\n                }\n            )\n        return output;\n    }\n    \n    dispatch( action, data ) {\n        Object.keys(this.__context)\n              .forEach(\n                  id => {\n                      if ( !is.fn(this.__context[id]) )\n                          this.__context[id].trigger(action, data)\n                  }\n              );\n        \n        this.__mixed.forEach(( ctx ) => (ctx.dispatch(action, data)));\n        this.parent && this.parent.dispatch(action, data);\n        return this;\n    }\n    \n    /**\n     * once('stable', cb)\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    then( cb ) {\n        if ( this._stable )\n            return cb(null, this.data);\n        this.once('stable', e => cb(null, this.data));\n    }\n    \n    restore( { state, data }, quiet ) {\n        let ctx = this.__context;\n        Object.keys(data).forEach(\n            id => {\n                quiet ? ctx.data = data[id]\n                    : ctx.push(data[id]);\n            }\n        );\n        Object.keys(state).forEach(\n            id => {\n                quiet ? ctx.state = state[id]\n                    : ctx.setState(state[id]);\n            }\n        );\n    }\n    \n    retainStores( stores = [], reason ) {\n        stores.forEach(\n            id => (this.stores[id] && this.stores[id].retain && this.stores[id].retain(reason))\n        )\n    }\n    \n    disposeStores( stores = [], reason ) {\n        stores.forEach(\n            id => (this.stores[id] && this.stores[id].dispose && this.stores[id].dispose(reason))\n        )\n    }\n    \n    wait( reason ) {\n        //console.log(\"wait\", reason);\n        this._stable && !this.__locks.all && this.emit(\"unstable\", this);\n        this._stable = false;\n        this.__locks.all++;\n        if ( reason ) {\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]++;\n        }\n    }\n    \n    release( reason ) {\n        \n        if ( reason ) {\n            if ( this.__locks[reason] == 0 )\n                console.error(\"Release more than locking !\", reason);\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]--;\n        }\n        if ( !reason && this.__locks.all == 0 )\n            console.error(\"Release more than locking !\");\n        \n        this.__locks.all--;\n        if ( !this.__locks.all ) {\n            this._stabilizerTM && clearTimeout(this._stabilizerTM);\n            \n            this._stabilizerTM = setTimeout(\n                e => {\n                    this._stabilizerTM = null;\n                    if ( this.__locks.all )\n                        return;\n                    \n                    this._propagTM && clearTimeout(this._propagTM);\n                    \n                    this._stable = true;\n                    this.emit(\"stable\", this);\n                    \n                    !this.dead && this._propag();// stability can induce destroy\n                }\n            );\n        }\n        \n    }\n    \n    propag() {\n        this._propagTM && clearTimeout(this._propagTM);\n        this._propagTM = setTimeout(\n            e => {\n                this._propagTM = null;\n                this._propag()\n            }, 2\n        );\n    }\n    \n    _propag() {\n        if ( this._followers.length )\n            this._followers.forEach(( { 0: obj, 1: key, 2: as, 3: lastRevs } ) => {\n                let data = this.getUpdates(lastRevs);\n                if ( !data ) return;\n                if ( typeof obj != \"function\" ) {\n                    if ( as ) obj.setState({ [as]: data });\n                    else obj.setState(data);\n                }\n                else {\n                    obj(data, lastRevs && [...lastRevs] || \"no revs\");\n                }\n                // lastRevs &&\n                // key.forEach(id => (lastRevs[id] = this.stores[id] && this.stores[id]._rev || 0));\n            });\n        this.emit(\"update\", this.getUpdates());\n    }\n    \n    /**\n     * is stable\n     * @returns bool\n     */\n    isStable() {\n        return this._stable;\n    }\n    \n    //serializeChilds( childs = [] ) {\n    //\n    //}\n    \n    _addChild( ctx ) {\n        this._childContexts.push(ctx);\n        let lists     = {\n                'stable'      : s => {\n                    this._unStableChilds--;\n                    if ( !this._unStableChilds )\n                        this.emit(\"stableTree\", this)\n                },\n                'unstable'    : s => {\n                    this._unStableChilds++;\n                    if ( 1 == this._unStableChilds )\n                        this.emit(\"unstableTree\", this)\n                },\n                'stableTree'  : s => {\n                    this._unStableChilds--;\n                    if ( !this._unStableChilds )\n                        this.emit(\"stableTree\", this)\n                },\n                'unstableTree': s => {\n                    this._unStableChilds++;\n                    if ( 1 == this._unStableChilds )\n                        this.emit(\"unstableTree\", this)\n                },\n                'destroy'     : ctx => {\n                    if ( ctx._unStableChilds )\n                        this._unStableChilds--;\n                    if ( !ctx.isStable() )\n                        this._unStableChilds--;\n                \n                    if ( !this._unStableChilds )\n                        this.emit(\"stableTree\", this)\n                }\n            },\n            wasStable = this._unStableChilds;\n        //!ctx.isStable() && console.warn('add unstable child');\n        !ctx.isStable() && this._unStableChilds++;\n        ctx._unStableChilds && this._unStableChilds++;\n        this._childContextsList.push(lists);\n        if ( !wasStable && this._unStableChilds )\n            this.emit(\"unstableTree\", this)\n        ctx.on(lists);\n    }\n    \n    _rmChild( ctx ) {\n        let i         = this._childContexts.indexOf(ctx),\n            wasStable = this._unStableChilds;\n        if ( i != -1 ) {\n            this._childContexts.splice(i, 1);\n            !ctx.isStable() && this._unStableChilds--;\n            ctx._unStableChilds && this._unStableChilds--;\n            ctx.un(this._childContextsList.splice(i, 1)[0]);\n            if ( wasStable && !this._unStableChilds )\n                this.emit(\"stableTree\")\n        }\n    }\n    \n    retain( reason ) {\n        this.__retains.all++;\n        //console.log(\"retain\", this._id, reason);\n        if ( reason ) {\n            this.__retains[reason] = this.__retains[reason] || 0;\n            this.__retains[reason]++;\n        }\n    }\n    \n    dispose( reason ) {\n        //console.log(\"dispose\", this._id, reason);\n        if ( reason ) {\n            if ( !this.__retains[reason] )\n                throw new Error(\"Dispose more than retaining : \"+ reason);\n            this.__retains[reason]--;\n        }\n        \n        if ( !this.__retains.all )\n            throw new Error(\"Dispose more than retaining !\");\n        \n        this.__retains.all--;\n        \n        if ( !this.__retains.all ) {\n            //console.log(\"dispose do destroy \", this._id, this._persistenceTm);\n            if ( this._persistenceTm ) {\n                this._destroyTM && clearTimeout(this._destroyTM);\n                this._destroyTM = setTimeout(\n                    e => {\n                        this.then(s => {\n                            !this.__retains.all && this.destroy()\n                        });\n                    },\n                    this._persistenceTm\n                );\n            }\n            else {\n                this.then(s => (!this.__retains.all && this.destroy()));\n            }\n        }\n    }\n    \n    /**\n     * order destroy of local stores\n     */\n    destroy() {\n        let ctx   = this.__context;\n        //console.warn(\"destroy\", this._id);\n        this.dead = true;\n        this.emit(\"destroy\", this);\n        Object.keys(\n            this.__listening\n        ).forEach(\n            id => this.__context[id].removeListener(this.__listening[id])\n        );\n        \n        this._stabilizerTM && clearTimeout(this._stabilizerTM);\n        this._propagTM && clearTimeout(this._propagTM);\n        this.__listening = {};\n        \n        if ( this._isLocalId )\n            delete openContexts[this._id];\n        this._followers.length = 0;\n        \n        while ( this.__mixedList.length ) {\n            this.__mixed[0].removeListener(this.__mixedList.shift());\n            this.__mixed.shift().dispose(\"mixedTo\");\n        }\n        if ( this.__parentList ) {\n            this.parent._rmChild(this);\n            this.parent.removeListener(this.__parentList);\n            this.parent.dispose(\"isMyParent\");\n            this.__parentList = null;\n        }\n        //for ( let key in ctx )\n        //    if ( !is.fn(ctx[key]) ) {\n        //        if ( ctx[key].contextObj === this )\n        //            ctx[key].dispose();\n        //\n        //        ctx[key] = ctx[key].constructor;\n        //    }\n        this.__mixed = this.data = this.state = this.context = this.stores = null;\n        this._data = this._state = this._stores = null;\n        \n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Context.js","/*\n * Copyright (c)  2017 Caipi Labs .\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\nvar is = require('is');\nexport default class Emitter {\n    _events = {};\n    \n    on( evt, cb ) {\n        if ( !is.string(evt) && evt )\n            return Object.keys(evt).forEach(k => this.on(k, evt[k]));\n        \n        this._events[evt] = this._events[evt] || [];\n        this._events[evt].push(cb);\n        \n    }\n    \n    un( evt, cb ) {\n        if ( !is.string(evt) && evt )\n            return Object.keys(evt).forEach(k => this.un(k, evt[k]));\n        \n        if ( !this._events[evt] ) return;\n        var i = this._events[evt].indexOf(cb);\n        this._events[evt].splice(i, 1);\n    }\n    \n    emit( evt, ...argz ) {\n        if ( !this._events[evt] ) return;\n        let lists = [...this._events[evt]];\n        for ( var i = 0; i < lists.length; i++ ) {\n            lists[i](...argz);\n        }\n    }\n    \n    addListener() {\n        this.on(...arguments);\n    }\n    \n    removeListener() {\n        this.un(...arguments);\n    }\n    \n    removeAllListeners() {\n        this._events = {};\n    }\n    \n    once( evt, cb ) {\n        let fn;\n        this.on(evt, fn = ( ...argz ) => {\n            this.un(evt, fn);\n            cb(...argz)\n        });\n    }\n    \n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/Emitter.js","module.exports = require(\"shortid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 4\n// module chunks = 0","/*\n * Copyright (c)  2017 Caipi Labs .\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @author : Nathanael Braun\n * @contact : caipilabs@gmail.com\n */\n\n/**\n * Ultra scalable state-aware store\n *\n * @todo : lot of optims...\n */\n\nvar is           = require('is'),\n    Context      = require('./Context'),\n    EventEmitter = require('./Emitter'),\n    shortid      = require('shortid'),\n    objProto     = Object.getPrototypeOf({});\n\n\nexport default class Store extends EventEmitter {\n    \n    static use                  = [];// overridable list of source stores\n    static follow;// overridable list of store that will allow push if updated\n    static require;\n    static staticContext        = new Context({}, { id: \"static\" });\n    static state                = undefined;// default state\n    /**\n     * if retain goes to 0 :\n     * false to not destroy,\n     * 0 to sync auto destroy\n     * Ms to autodestroy after tm ms if no retain has been called\n     * @type {boolean|Int}\n     */\n           static persistenceTm = false;\n    \n    /**\n     * Constructor, will build a rescope store\n     *\n     * (context, {require,use,apply,state, data})\n     * (context)\n     *\n     * @param context {object} context where to find the other stores (default : static staticContext )\n     * @param keys {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n     */\n    constructor() {\n        super();\n        var argz         = [...arguments],\n            _static      = this.constructor,\n            context      = argz[0] instanceof Context\n                ? argz.shift()\n                : _static.context ? Context.getContext(_static.context)\n                               : is.string(argz[0])\n                      ? Context.getContext(argz.shift())\n                      : _static.staticContext,\n            cfg          = argz[0] && !is.array(argz[0]) && !is.string(argz[0]) ? argz.shift() : {},\n            name         = is.string(argz[0]) ? argz[0] : cfg.name || _static.name,\n            watchs       = is.array(argz[0]) ? argz.shift() : cfg.use || [],// watchs need to be defined after all the\n                                                                            // store are registered : so we can't deal\n                                                                            // with any \"static use\" automaticly\n            apply        = is.fn(argz[0]) ? argz.shift() : cfg.apply || null,\n            initialState = _static.state || _static.initialState,\n            applied;\n        \n        this._uid = cfg._uid || shortid.generate();\n        \n        this.__retains    = { all: 0 };\n        this.__locks      = { all: 0 };\n        this._onStabilize = [];\n        \n        this._persistenceTm = cfg.persistenceTm || this.constructor.persistenceTm;\n        if ( is.string(argz[0]) ) {\n            if ( context.__context[name] )\n                console.warn(\"ReScope: Overwriting an existing static named store ( %s ) !!\", name);\n            context.__context[name] = this;\n        }\n        \n        if ( cfg && cfg.on ) {\n            this.on(cfg.on);\n        }\n        // this.state      = this.state || {};\n        \n        \n        this.name = name;\n        \n        if ( context.stores ) {\n            this.contextObj = context;\n            this.context    = context.stores;\n        }\n        else {\n            this.contextObj = new Context(context);\n            this.context    = context.stores;\n        }\n        \n        \n        this._rev     = 0;\n        this._revs    = {};\n        this.stores   = {};\n        this._require = [];\n        \n        if ( is.array(_static.use) ) {\n            this._use = [...watchs, ...(_static.use || []).map(\n                key => {\n                    let ref = key.match(/^(\\!?)([^\\:]*)(?:\\:(.*))?$/);\n                    if ( ref[1] ) {\n                        let ref2 = ref[2].split('.');\n                        this._require.push(ref[3] || ref2[ref2.length - 1]);\n                    }\n                    return ref[2];\n                }\n            )];\n        }\n        else {\n            this._use = [...watchs, ...(\n                _static.use ? Object.keys(_static.use)\n                                    .map(\n                                        key => {\n                                            let ref = key.match(/^(\\!?)(.*)$/);\n                                            ref[1] && this._require.push(_static.use[key]);\n                                            return ref[2] + ':' + _static.use[key];\n                                        }\n                                    ) : []\n            )];\n        }\n        \n        if ( _static.require )\n            this._require.push(..._static.require);\n        if ( cfg.require )\n            this._require.push(...cfg.require);\n        \n        this._followers = [];\n        \n        if ( _static.data !== undefined )\n            this.data = { ..._static.data };\n        if ( cfg.hasOwnProperty(\"data\") && cfg.data !== undefined )\n            this.data = cfg.data;\n        if ( cfg.hasOwnProperty(\"state\") && cfg.state !== undefined )\n            initialState = { ...initialState, ...cfg.state };\n        \n        if ( apply )\n            this.apply = apply;\n        \n        \n        if ( initialState || this._use.length ) {// sync apply\n            this.state = {\n                ...(initialState || {}),\n                ...context.map(this, this._use)\n            };\n            if ( this.shouldApply(this.state) && this.data === undefined ) {\n                this.data = this.apply(this.data, this.state, this.state);\n                applied   = true;\n            }\n        }\n        \n        if ( (this.data !== undefined || applied) && !this.__locks.all ) {\n            this._stable = true;\n            this._rev++;\n        }\n        else {\n            this._stable = false;\n            if ( !_static.managed && !this.state && (!this._use || !this._use.length) ) {\n                console.warn(\"Rescope store '\", this.name, \"' have no initial data, state or use. It can't stabilize...\");\n            }\n        }\n        !this._stable && this.emit('unstable', this.state);\n    }\n    \n    /**\n     * get a Builder-key pair for Store::map\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    static as( name ) {\n        return { store: this, name };\n    }\n    \n    /**\n     * Map all named stores in {keys} to the {object}'s state\n     * Hook componentWillUnmount (for react comp) or destroy to unBind them automatically\n     * @static\n     * @param object {React.Component|Store|...} target state aware object\n     * @param keys {Array} Ex : [\"session\", \"otherStaticNamedStore:key\", store.as('anotherKey')]\n     */\n    static map( component, keys, context, origin, setInitial = false ) {\n        var targetRevs     = component._revs || {};\n        var targetContext  = component.stores || (component.stores = {});\n        var initialOutputs = {};\n        keys               = is.array(keys) ? [...keys] : [keys];\n        \n        \n        context = context || Store.staticContext;\n        \n        keys           = keys.filter(\n            // @todo : use query refs\n            // (store)(\\.store)*(\\[(\\*|(props)\\w+)+)\\])?(\\:alias)\n            ( key ) => {\n                if ( !key ) {\n                    console.error(\"Not a mappable store item '\" + key + \"' in \" + origin + ' !!');\n                    return false;\n                }\n                let name,\n                    alias,\n                    path,\n                    store;\n                if ( key.store && key.name ) {\n                    alias = name = key.name;\n                    store = key.store;\n                }\n                else if ( is.fn(key) ) {\n                    name = alias = key.name || key.defaultName;\n                    store = key;\n                }\n                else {\n                    key   = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                    name  = key[1];\n                    path  = key[2] && key[2].split('.').slice(1);\n                    store = context.stores[key[1]];\n                    alias = key[3] || path && path[path.length - 1] || key[1];\n                }\n                \n                if ( targetRevs[name] ) return false;// ignore dbl uses for now\n                \n                if ( !store ) {\n                    console.error(\"Not a mappable store item '\" + name + \"/\" + alias + \"' in \" + origin + ' !!', store);\n                    return false;\n                }\n                else if ( is.fn(store) ) {\n                    context._mount(name)\n                    \n                    context.stores[name].bind(component, alias, setInitial, path);\n                }\n                else {\n                    store.bind(component, alias, setInitial, path);\n                }\n                targetRevs[alias] = targetRevs[alias] || true;\n                !targetContext[name] && (targetContext[name] = context.stores[name]);\n                if ( context.stores[name].hasOwnProperty('data') )\n                    initialOutputs[name] = context.data[name];\n                return true;\n            }\n        );\n        var mixedCWUnmount,\n            unMountKey = component.isReactComponent ? \"componentWillUnmount\" : \"destroy\";\n        \n        if ( component.hasOwnProperty(unMountKey) ) {\n            mixedCWUnmount = component[unMountKey];\n        }\n        \n        component[unMountKey] = ( ...argz ) => {\n            delete component[unMountKey];\n            if ( mixedCWUnmount )\n                component[unMountKey] = mixedCWUnmount;\n            \n            keys.map(\n                ( key ) => {\n                    let name,\n                        alias, path,\n                        store;\n                    if ( key.store && key.name ) {\n                        alias = name = key.name;\n                        store = key.store;\n                    }\n                    else if ( is.fn(key) ) {\n                        name = alias = key.name || key.defaultName;\n                        store = context.stores[name];\n                    }\n                    else {\n                        key   = key.match(/([\\w_]+)((?:\\.[\\w_]+)*)(?:\\:([\\w_]+))?/);\n                        name  = key[1];\n                        path  = key[2] && key[2].split('.');\n                        store = context.stores[key[1]];\n                        alias = key[3] || path && path[path.length - 1] || key[1];\n                    }\n                    \n                    store && !is.fn(store) && store.unBind(component, alias, path)\n                }\n            );\n            return component[unMountKey] && component[unMountKey](...argz);\n        }\n        \n        return initialOutputs;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    get datas() {\n        return this.data;\n    }\n    \n    /**\n     * @deprecated\n     * @returns {*}\n     */\n    set datas( v ) {\n        //console.groupCollapsed(\"Rescope store : Setting datas is depreciated, use data\");\n        console.log(\"Rescope store : Setting datas is depreciated, use data\", (new Error()).stack);\n        //console.groupEnd();\n        \n        this.data = v;\n    }\n    \n    /**\n     * Overridable method to know if a data change should be propag to the listening stores & components\n     */\n    shouldPropag( nDatas ) {\n        var _static = this.constructor, r,\n            cDatas  = this.data;\n        r           = !cDatas && nDatas;\n        cDatas && Object.keys(cDatas).forEach(\n            ( key ) => {\n                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key])\n            }\n        );\n        nDatas && Object.keys(nDatas).forEach(\n            ( key ) => {\n                r = r || (nDatas ? cDatas[key] !== nDatas[key] : cDatas && cDatas[key])\n            }\n        );\n        return !!r;\n    }\n    \n    /**\n     * Overridable method to know if a state change should be applied\n     */\n    shouldApply( state = this.state ) {\n        var _static = this.constructor;\n        \n        return (\n            !!this.isComplete(state)\n        ) && (is.array(_static.follow)\n                ? _static.follow\n                         .reduce(( r, i ) => (r || state && state[i]), false)\n                : _static.follow\n                  ? Object.keys(_static.follow)\n                          .reduce(( r, i ) => (\n                              r\n                              || state && is.fn(_static.follow[i]) && _static.follow[i].call(this, state[i])\n                              || _static.follow[i] && state[i] !== this.state[i]\n                          ), false) : true\n        );\n    }\n    \n    /**\n     * Overridable applier / remapper\n     * If state or lastPublicState are simple hash maps apply will return {...data, ...state}\n     * if not it will return the last private state\n     * @param data\n     * @param state\n     * @returns {*}\n     */\n    apply( data, state, changes ) {\n        state = state || this.state;\n        \n        if ( this.refine )\n            return this.refine(...arguments);\n        \n        if ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n            return state;\n        else\n            return { ...data, ...state }\n    }\n    \n    /**\n     * @depreciated\n     * @param data\n     * @param state\n     * @param changes\n     * @returns {*}\n     */\n    refine( data, state, changes ) {\n        state = state || this.state;\n        \n        if ( !data || data.__proto__ !== objProto || state.__proto__ !== objProto )\n            return state;\n        else\n            return { ...data, ...state }\n    }\n    \n    /**\n     * Debounce this store propagation ( & reducing )\n     * @param cb\n     */\n    stabilize( cb ) {\n        cb && this.once('stable', cb);\n        this._stable && this.emit('unstable', this.state, this.data);\n        \n        this._stable = false;\n        \n        if ( this._stabilizer )\n            clearTimeout(this._stabilizer);\n        \n        this._stabilizer = setTimeout(\n            this.push.bind(\n                this,\n                null,\n                () => {//@todo\n                    \n                    let stable   = this._stable;\n                    this._stable = true;\n                    !stable && this.emit('stable', this.state, this.data);\n                    this._stabilizer = null;\n                    // this.release();\n                }\n            ));\n    }\n    \n    retrieve( path, i = 0, obj = this.data ) {\n        path = is.string(path) ? path.split('.') : path;\n        return !obj || !path || !path.length\n            ? obj\n            : path.length == i + 1\n                   ? obj[path[i]]\n                   : this.retrieve(path, i + 1, obj[path[i]]);\n    }\n    \n    dispatch( action, ...argz ) {\n        this.contextObj.dispatch(action, ...argz);\n    }\n    \n    trigger( action, ...argz ) {\n        let { actions } = this.constructor,\n            ns;\n        if ( actions && actions[action] ) {\n            ns = actions[action].call(this, ...argz);\n            ns && this.setState(ns);\n        }\n    }\n    \n    /**\n     * Pull stores in the private state\n     * @param stores  {Array} (passed to Store::map) Ex : [\"session\", \"otherNamedStore:key\", otherStore.as(\"otherKey\")]\n     */\n    pull( stores, doWait, origin ) {\n        let initialOutputs = this.contextObj.map(this, stores);\n        if ( doWait ) {\n            this.wait();\n            stores.forEach(( s ) => this.context[s] && this.wait(this.context[s]));\n            this.release();\n        }\n        return initialOutputs;\n    }\n    \n    /**\n     * Apply apply/remap on the private state & push the resulting \"public\" state to followers\n     * @param cb\n     */\n    push( data, force, cb ) {\n        cb            = force === true ? cb : force;\n        force         = force === true;\n        var i         = 0,\n            nextState = !data && { ...this.state, ...this._changesSW } || this.state,\n            nextDatas = data || this.apply(this.data, nextState, this._changesSW);\n        \n        this.state = nextState;\n        if ( !force &&\n            (\n                (!this.data && this.data === nextDatas) || !this.shouldPropag(nextDatas)\n            )\n        ) {\n            cb && cb();\n            return false;\n        }\n        \n        this.data       = nextDatas;\n        this._changesSW = {};\n        //this.__locks.all++;\n        this.wait();\n        this.release(cb);\n        \n    }\n    \n    /**\n     * Update the current private state & push it once the store is stable\n     * @param pState\n     * @param cb\n     */\n    setState( pState, cb, sync ) {\n        var i       = 0, change,\n            changes = this._changesSW = this._changesSW || {};\n        for ( var k in pState )\n            if ( !this.state || pState.hasOwnProperty(k)\n                && (\n                    pState[k] != this.state[k]\n                    ||\n                    (this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n                ) ) {\n                change        = true;\n                this._revs[k] = pState[k] && pState[k]._rev || true;\n                changes[k]    = pState[k];\n            }\n        \n        if ( !this.shouldApply({ ...this.state, ...changes }) ) {\n            return;\n        }\n        \n        if ( sync ) {\n            this.push();\n            cb && cb();\n            \n        }\n        else {\n            if ( change ) {\n                this.stabilize(cb);\n            }\n            else cb && cb();\n        }\n        return this;\n    }\n    \n    /**\n     * Update the current private state & push it once the store is stable\n     * @param pState\n     * @param cb\n     */\n    setStateSync( pState ) {\n        var i       = 0, change,\n            changes = this._changesSW = this._changesSW || {};\n        for ( var k in pState )\n            if ( !this.state || pState.hasOwnProperty(k)\n                && (\n                    pState[k] != this.state[k]\n                    ||\n                    (this.state[k] && pState[k] && (pState[k]._rev != this._revs[k]))// rev/hash update\n                ) ) {\n                change        = true;\n                this._revs[k] = pState[k] && pState[k]._rev || true;\n                changes[k]    = pState[k];\n            }\n        this.shouldApply({ ...(this.state || {}), ...changes }) && this.push();\n        return this.data;\n    }\n    \n    /**\n     * Replace the current private state & push it once the store is stable\n     * @param pState\n     * @param cb\n     */\n    replaceState( pState, cb ) {\n        var i      = 0, me = this;\n        this.state = pState;\n        \n        this.stabilize(cb);\n    }\n    \n    /**\n     * get a store-key pair for Store::map\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    as( name ) {\n        return { store: this, name };\n    }\n    \n    on( lists ) {\n        if ( !is.string(lists) && lists )\n            Object.keys(lists).forEach(k => super.on(k, lists[k]));\n        else super.on(...arguments);\n    }\n    \n    removeListener( lists ) {\n        if ( !is.string(lists) && lists )\n            Object.keys(lists).forEach(k => super.removeListener(k, lists[k]));\n        else super.removeListener(...arguments);\n    }\n    \n    /**\n     * relink bindings & requires\n     * @param {string} name\n     * @returns {{store: Store, name: *}}\n     */\n    relink( from ) {\n        let context = this.contextObj,\n            _static = this.constructor;\n        if ( _static.use ) {\n            //todo unlink\n            this.pull(_static.use, false, from);\n        }\n        \n        if ( this._require ) {\n            this._require.forEach(\n                store => (\n                    this.wait(context.__context[store])\n                )\n            );\n        }\n    }\n    \n    /**\n     * is complete (all requiered keys are here)\n     * @returns bool\n     */\n    isComplete( state = this.state ) {\n        var _static = this.constructor;\n        return (\n            !this._require\n            || !this._require.length\n            || state && this._require.reduce(\n                ( r, key ) => (r && state[key]),\n                true\n            )\n        );\n    }\n    \n    /**\n     * is stable\n     * @returns bool\n     */\n    isStable() {\n        return this._stable;\n    }\n    \n    /**\n     * Un bind this store off the given component-key\n     * @param obj\n     * @param key\n     * @returns {Array.<*>}\n     */\n    unBind( obj, key, path ) {\n        var followers = this._followers,\n            i         = followers && followers.length;\n        while ( followers && i-- )\n            if ( followers[i][0] === obj && followers[i][1] === key && followers[i][2] === path )\n                return followers.splice(i, 1);\n    }\n    \n    /**\n     * Bind this store changes to the given component-key\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    bind( obj, key, setInitial = true, path ) {\n        this._followers.push([obj, key, path]);\n        if ( setInitial && this.data && this._stable ) {\n            let data = path ? this.retrieve(path) : this.data;\n            if ( typeof obj != \"function\" ) {\n                if ( key ) obj.setState({ [key]: data });\n                else obj.setState(data);\n            }\n            else {\n                obj(data);\n            }\n        }\n    }\n    \n    /**\n     * once('stable', cb)\n     * @param obj {React.Component|Store|function)\n     * @param key {string} optional key where to map the public state\n     */\n    then( cb ) {\n        if ( this._stable )\n            return cb(null, this.data);\n        this.once('stable', e => cb(null, this.data));\n    }\n    \n    /**\n     * Add a lock so the store will not propag it state untill release() is call\n     * @param previous {Store|number|Array} @optional wf to wait, releases to wait or array of stuff to wait\n     * @returns {TaskFlow}\n     */\n    wait( previous ) {\n        if ( typeof previous == \"number\" )\n            return this.__locks.all += previous;\n        if ( is.array(previous) )\n            return previous.map(this.wait.bind(this));\n        \n        this._stable && this.emit('unstable', this.state, this.data);\n        this._stable = false;\n        this.__locks.all++;\n        \n        let reason = is.string(previous) ? previous : null;\n        if ( reason ) {\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]++;\n        }\n        if ( previous && is.fn(previous.then) ) {\n            previous.then(this.release.bind(this, null));\n        }\n        return this;\n    }\n    \n    /**\n     * Decrease locks for this store, if it reach 0 & it have a public state,\n     * it will be propagated to the followers,\n     * then, all stuff passed to \"then\" call back will be exec / released\n     * @param desync\n     * @returns {*}\n     */\n    release( reason, cb ) {\n        var _static = this.constructor;\n        let i       = 0, wasStable = this._stable;\n        \n        if ( is.fn(reason) ) {\n            cb     = reason;\n            reason = null;\n        }\n        \n        if ( reason ) {\n            if ( this.__locks[reason] == 0 )\n                console.error(\"Release more than locking !\", reason);\n            this.__locks[reason] = this.__locks[reason] || 0;\n            this.__locks[reason]--;\n        }\n        \n        if ( !reason && this.__locks.all == 0 )\n            console.error(\"Release more than locking !\");\n        \n        if ( !--this.__locks.all && this.data && this.isComplete() ) {\n            this._stable = true;\n            this._rev++;//\n            if ( this._followers.length )\n                this._followers.forEach(( follower ) => {\n                    let data = follower[2] ? this.retrieve(follower[2]) : this.data;\n                    if ( !data ) return;\n                    if ( typeof follower[0] == \"function\" ) {\n                        follower[0](data);\n                    }\n                    else {\n                        //cb && i++;\n                        follower[0].setState(\n                            (follower[1]) ? { [follower[1]]: data }\n                                : data\n                            //,\n                            //cb && (\n                            //    () => (!(--i) && cb())\n                            //)\n                        );\n                    }\n                });\n            //else\n            !wasStable && this.emit('stable', this.data);\n            this.emit('update', this.data);\n            cb && cb()\n        }\n        else cb && this.then(cb);\n        return this;\n    }\n    \n    retain( reason ) {\n        this.__retains.all++;\n        if ( reason ) {\n            this.__retains[reason] = this.__retains[reason] || 0;\n            this.__retains[reason]++;\n        }\n    }\n    \n    dispose( reason ) {\n        //console.warn(\"dispose\", reason, this.__retains);\n        if ( reason ) {\n            if ( !this.__retains[reason] )\n                throw new Error(\"Dispose more than retaining : \" + reason);\n            \n            this.__retains[reason]--;\n        }\n        if ( this.__retains.all == 0 )\n            throw new Error(\"Dispose more than retaining !\");\n        \n        this.__retains.all--;\n        \n        if ( !this.__retains.all ) {\n            if ( this._persistenceTm ) {\n                this._destroyTM && clearTimeout(this._destroyTM);\n                this._destroyTM = setTimeout(\n                    e => {\n                        this._destroyTM = null;\n                        this.then(s => {\n                            !this.__retains.all && this.destroy()\n                        });\n                    },\n                    this._persistenceTm\n                );\n            }\n            else {\n                this.then(s => (!this.__retains.all && this.destroy()));\n            }\n        }\n    }\n    \n    destroy() {\n        //  console.log(\"destroy\", this._uid);\n        \n        this.emit('destroy', this);\n        if ( this._stabilizer )\n            clearTimeout(this._stabilizer);\n        \n        if ( this._followers.length )\n            this._followers.forEach(\n                ( follower ) => {\n                    if ( typeof follower[0] !== \"function\" ) {\n                        if ( follower[0].stores )\n                            delete follower[0].stores[follower[1]];\n                    }\n                }\n            );\n        this._followers.length = 0;\n        this.dead              = true;\n        this._revs             = this.data = this.state = this.context = null;\n        this.removeAllListeners();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Store.js"],"sourceRoot":""}